<?php
// autogenerated file, do not edit!
namespace Skrz\Templating\Engine {
class Parser {
    
    private $context;
    
    private $_environments = array(-1 => array());
    private $_environment_stack = array();
    private $_environment_stack_sp = -1;
    public function __construct($context) {
        
        $this->context = $context;
    }
    
    public function __invoke($s) {
    foreach ($this->_environments as $_env) { extract($_env, EXTR_OVERWRITE | EXTR_REFS); }
        return $this->parse($s);
    }
    
    public function parse($_s) {
        $_addr = 0;
        $_maxp = $_p = 0;
        $_expected = array();
        L0: $_stack_sp = -1; $_stack = array();
        L1: $_fail = false;
        L2: $_value = NULL;
        L3: $_cache = array();
        L4: $_a = NULL;
        L5: $_b = NULL;
        L6: $_c = NULL;
        L7: $_d = NULL;
        L8: $_env = array();
        L9: $_stack[++$_stack_sp] = 11;
        L10: goto L12;
        L11: goto Lend;
        L12: $_stack[++$_stack_sp] = "0@";
        L13: $_stack[$_stack_sp] .= $_p;
        L14: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L21; }
        L15: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L16: $_b = $_cache[$_a];
        L17: $_fail = $_b[0];
        L18: $_value = $_b[1];
        L19: $_p = $_b[2];
        L20: goto L88;
        L21: $_stack[++$_stack_sp] = $_env;
        L22: $_env = array();
        L23: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L24: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L25: $_stack[++$_stack_sp] = $_b;
        L26: $_stack[++$_stack_sp] = NULL;
        L27: $_stack[++$_stack_sp] = $_p;
        L28: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L29: $_stack[++$_stack_sp] = $_b;
        L30: $_stack[++$_stack_sp] = NULL;
        L31: $_stack[++$_stack_sp] = $_p;
        L32: $_stack[++$_stack_sp] = array();
        L33: $_stack[++$_stack_sp] = $_p;
        L34: $_stack[++$_stack_sp] = 36;
        L35: goto L381;
        L36: if (!$_fail) { goto L40; }
        L37: $_p = $_stack[$_stack_sp];
        L38: $_stack[++$_stack_sp] = 40;
        L39: goto L223;
        L40: unset($_stack[$_stack_sp--]);
        L41: if ($_fail) { goto L45; }
        L42: $_stack[$_stack_sp][] = $_value;
        L43: $_stack[$_stack_sp - 1] = $_p;
        L44: goto L33;
        L45: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L46: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L47: $_fail = false;
        L48: if ($_fail) { goto L54; }
        L49: $_stack[$_stack_sp] = $_value;
        L50: $_stack[++$_stack_sp] = 52;
        L51: goto L135;
        L52: $_env["e"] = $_value;
        L53: if ($_fail) { goto L54; }
        L54: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L55: if ($_fail) { goto L57; }
        L56: $_value = $this->_1($_env);
        L57: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L58: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L59: if (!$_fail) { goto L63; }
        L60: $_fail = false;
        L61: $_value = NULL;
        L62: $_p = $_a;
        L63: $_env["extends"] = $_value;
        L64: if ($_fail) { goto L76; }
        L65: $_stack[$_stack_sp] = $_value;
        L66: $_stack[++$_stack_sp] = 68;
        L67: goto L90;
        L68: $_env["st"] = $_value;
        L69: if ($_fail) { goto L76; }
        L70: $_stack[++$_stack_sp] = $_p;
        L71: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L72: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L73: $_value = NULL;
        L74: $_fail = !$_fail;
        L75: if ($_fail) { goto L76; }
        L76: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L77: if ($_fail) { goto L79; }
        L78: $_value = $this->_0($_env);
        L79: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L80: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L81: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L82: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L83: $_b = array();
        L84: $_b[0] = $_fail;
        L85: $_b[1] = $_value;
        L86: $_b[2] = $_p;
        L87: $_cache[$_a] = $_b;
        L88: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L89: if ($_a !== 11) return array(FALSE, NULL, 0); goto L11;
        L90: $_stack[++$_stack_sp] = "1@";
        L91: $_stack[$_stack_sp] .= $_p;
        L92: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L99; }
        L93: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L94: $_b = $_cache[$_a];
        L95: $_fail = $_b[0];
        L96: $_value = $_b[1];
        L97: $_p = $_b[2];
        L98: goto L133;
        L99: $_stack[++$_stack_sp] = $_env;
        L100: $_env = array();
        L101: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L102: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L103: $_stack[++$_stack_sp] = $_b;
        L104: $_stack[++$_stack_sp] = $_p;
        L105: $_stack[++$_stack_sp] = array();
        L106: $_stack[++$_stack_sp] = $_p;
        L107: $_stack[++$_stack_sp] = 109;
        L108: goto L223;
        L109: if (!$_fail) { goto L113; }
        L110: $_p = $_stack[$_stack_sp];
        L111: $_stack[++$_stack_sp] = 113;
        L112: goto L287;
        L113: unset($_stack[$_stack_sp--]);
        L114: if ($_fail) { goto L118; }
        L115: $_stack[$_stack_sp][] = $_value;
        L116: $_stack[$_stack_sp - 1] = $_p;
        L117: goto L106;
        L118: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L119: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L120: $_fail = false;
        L121: $_env["st"] = $_value;
        L122: if ($_fail) { goto L124; }
        L123: $_value = $this->_2($_env);
        L124: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L125: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L126: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L127: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L128: $_b = array();
        L129: $_b[0] = $_fail;
        L130: $_b[1] = $_value;
        L131: $_b[2] = $_p;
        L132: $_cache[$_a] = $_b;
        L133: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L134: if ($_a === 68) { goto L68; } else if ($_a === 988) { goto L988; } else if ($_a === 1012) { goto L1012; } else if ($_a === 1041) { goto L1041; } else if ($_a === 1382) { goto L1382; } else if ($_a === 1399) { goto L1399; } else if ($_a === 1420) { goto L1420; } else if ($_a === 1557) { goto L1557; } else if ($_a === 1574) { goto L1574; } else if ($_a === 1595) { goto L1595; } else if ($_a === 1765) { goto L1765; } else if ($_a === 1995) { goto L1995; } else if ($_a === 2043) { goto L2043; } else if ($_a === 2456) { goto L2456; } else { return array(FALSE, NULL, 1); }
        L135: $_stack[++$_stack_sp] = "2@";
        L136: $_stack[$_stack_sp] .= $_p;
        L137: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L144; }
        L138: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L139: $_b = $_cache[$_a];
        L140: $_fail = $_b[0];
        L141: $_value = $_b[1];
        L142: $_p = $_b[2];
        L143: goto L221;
        L144: $_stack[++$_stack_sp] = $_env;
        L145: $_env = array();
        L146: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L147: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L148: $_stack[++$_stack_sp] = $_b;
        L149: $_stack[++$_stack_sp] = NULL;
        L150: $_fail = TRUE; if (($_a = substr($_s, $_p, 8)) === "{extends") { $_fail = FALSE; $_value = $_a; $_p += 8; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{extends"', $_expected)) { $_expected[] = '"{extends"'; } } }
        L151: if ($_fail) { goto L209; }
        L152: $_stack[$_stack_sp] = $_value;
        L153: $_stack[++$_stack_sp] = 155;
        L154: goto L5382;
        L155: if ($_fail) { goto L209; }
        L156: $_stack[++$_stack_sp] = $_p;
        L157: $_stack[++$_stack_sp] = NULL;
        L158: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "file=") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"file="', $_expected)) { $_expected[] = '"file="'; } } }
        L159: if ($_fail) { goto L164; }
        L160: $_stack[$_stack_sp] = $_value;
        L161: $_stack[++$_stack_sp] = 163;
        L162: goto L5382;
        L163: if ($_fail) { goto L164; }
        L164: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L165: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L166: if (!$_fail) { goto L170; }
        L167: $_fail = false;
        L168: $_value = NULL;
        L169: $_p = $_a;
        L170: if ($_fail) { goto L209; }
        L171: $_stack[++$_stack_sp] = $_p;
        L172: $_stack[++$_stack_sp] = 174;
        L173: goto L5115;
        L174: if (!$_fail) { goto L201; }
        L175: $_p = $_stack[$_stack_sp];
        L176: $_stack[++$_stack_sp] = "";
        L177: $_stack[++$_stack_sp] = $_p;
        L178: $_stack[++$_stack_sp] = "";
        L179: $_stack[++$_stack_sp] = true;
        L180: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((65 <= $_a && $_a <= 90) || (97 <= $_a && $_a <= 122) || (48 <= $_a && $_a <= 57) || ($_a === 46) || ($_a === 95) || ($_a === 47) || ($_a === 45))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[A-Za-z0-9._/-]', $_expected)) { $_expected[] = '[A-Za-z0-9._/-]'; } } }
        L181: if ($_fail) { goto L186; }
        L182: $_stack[$_stack_sp] = false;
        L183: $_stack[$_stack_sp - 1] .= $_value;
        L184: $_stack[$_stack_sp - 2] = $_p;
        L185: goto L180;
        L186: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L187: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L188: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L189: if ($_a) { goto L191; }
        L190: $_fail = false;
        L191: if ($_fail) { goto L200; }
        L192: $_stack[$_stack_sp] .= $_value;
        L193: $_stack[++$_stack_sp] = $_p;
        L194: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L195: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L196: $_value = NULL;
        L197: $_fail = !$_fail;
        L198: if ($_fail) { goto L200; }
        L199: $_stack[$_stack_sp] .= $_value;
        L200: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L201: unset($_stack[$_stack_sp--]);
        L202: $_env["file"] = $_value;
        L203: if ($_fail) { goto L209; }
        L204: $_stack[++$_stack_sp] = 206;
        L205: goto L5382;
        L206: if ($_fail) { goto L209; }
        L207: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L208: if ($_fail) { goto L209; }
        L209: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L210: if ($_fail) { goto L212; }
        L211: $_value = $this->_3($_env);
        L212: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L213: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L214: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L215: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L216: $_b = array();
        L217: $_b[0] = $_fail;
        L218: $_b[1] = $_value;
        L219: $_b[2] = $_p;
        L220: $_cache[$_a] = $_b;
        L221: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L222: if ($_a !== 52) return array(FALSE, NULL, 2); goto L52;
        L223: $_stack[++$_stack_sp] = "3@";
        L224: $_stack[$_stack_sp] .= $_p;
        L225: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L232; }
        L226: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L227: $_b = $_cache[$_a];
        L228: $_fail = $_b[0];
        L229: $_value = $_b[1];
        L230: $_p = $_b[2];
        L231: goto L285;
        L232: $_stack[++$_stack_sp] = $_env;
        L233: $_env = array();
        L234: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L235: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L236: $_stack[++$_stack_sp] = $_b;
        L237: $_stack[++$_stack_sp] = $_p;
        L238: $_stack[++$_stack_sp] = "";
        L239: $_stack[++$_stack_sp] = true;
        L240: $_stack[++$_stack_sp] = "";
        L241: $_stack[++$_stack_sp] = $_p;
        L242: $_stack[++$_stack_sp] = "";
        L243: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "{") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{"', $_expected)) { $_expected[] = '"{"'; } } }
        L244: if ($_fail) { goto L253; }
        L245: $_stack[$_stack_sp] .= $_value;
        L246: $_stack[++$_stack_sp] = $_p;
        L247: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 32) || ($_a === 9) || ($_a === 13) || ($_a === 10))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[ \\t\\r\\n]', $_expected)) { $_expected[] = '[ \\t\\r\\n]'; } } }
        L248: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L249: $_value = NULL;
        L250: $_fail = !$_fail;
        L251: if ($_fail) { goto L253; }
        L252: $_stack[$_stack_sp] .= $_value;
        L253: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L254: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L255: $_value = NULL;
        L256: $_fail = !$_fail;
        L257: if ($_fail) { goto L262; }
        L258: $_stack[$_stack_sp] .= $_value;
        L259: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L260: if ($_fail) { goto L262; }
        L261: $_stack[$_stack_sp] .= $_value;
        L262: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L263: if ($_fail) { goto L268; }
        L264: $_stack[$_stack_sp] = false;
        L265: $_stack[$_stack_sp - 1] .= $_value;
        L266: $_stack[$_stack_sp - 2] = $_p;
        L267: goto L240;
        L268: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L269: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L270: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L271: if ($_a) { goto L273; }
        L272: $_fail = false;
        L273: $_env["t"] = $_value;
        L274: if ($_fail) { goto L276; }
        L275: $_value = $this->_4($_env);
        L276: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L277: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L278: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L279: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L280: $_b = array();
        L281: $_b[0] = $_fail;
        L282: $_b[1] = $_value;
        L283: $_b[2] = $_p;
        L284: $_cache[$_a] = $_b;
        L285: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L286: if ($_a === 40) { goto L40; } else if ($_a === 109) { goto L109; } else { return array(FALSE, NULL, 3); }
        L287: $_stack[++$_stack_sp] = "4@";
        L288: $_stack[$_stack_sp] .= $_p;
        L289: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L296; }
        L290: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L291: $_b = $_cache[$_a];
        L292: $_fail = $_b[0];
        L293: $_value = $_b[1];
        L294: $_p = $_b[2];
        L295: goto L379;
        L296: $_stack[++$_stack_sp] = $_env;
        L297: $_env = array();
        L298: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L299: $_stack[++$_stack_sp] = $_p;
        L300: $_stack[++$_stack_sp] = 302;
        L301: goto L381;
        L302: if (!$_fail) { goto L370; }
        L303: $_p = $_stack[$_stack_sp];
        L304: $_stack[++$_stack_sp] = 306;
        L305: goto L2304;
        L306: if (!$_fail) { goto L370; }
        L307: $_p = $_stack[$_stack_sp];
        L308: $_stack[++$_stack_sp] = 310;
        L309: goto L2066;
        L310: if (!$_fail) { goto L370; }
        L311: $_p = $_stack[$_stack_sp];
        L312: $_stack[++$_stack_sp] = 314;
        L313: goto L956;
        L314: if (!$_fail) { goto L370; }
        L315: $_p = $_stack[$_stack_sp];
        L316: $_stack[++$_stack_sp] = 318;
        L317: goto L1150;
        L318: if (!$_fail) { goto L370; }
        L319: $_p = $_stack[$_stack_sp];
        L320: $_stack[++$_stack_sp] = 322;
        L321: goto L1855;
        L322: if (!$_fail) { goto L370; }
        L323: $_p = $_stack[$_stack_sp];
        L324: $_stack[++$_stack_sp] = 326;
        L325: goto L438;
        L326: if (!$_fail) { goto L370; }
        L327: $_p = $_stack[$_stack_sp];
        L328: $_stack[++$_stack_sp] = 330;
        L329: goto L475;
        L330: if (!$_fail) { goto L370; }
        L331: $_p = $_stack[$_stack_sp];
        L332: $_stack[++$_stack_sp] = 334;
        L333: goto L889;
        L334: if (!$_fail) { goto L370; }
        L335: $_p = $_stack[$_stack_sp];
        L336: $_stack[++$_stack_sp] = 338;
        L337: goto L1455;
        L338: if (!$_fail) { goto L370; }
        L339: $_p = $_stack[$_stack_sp];
        L340: $_stack[++$_stack_sp] = 342;
        L341: goto L1630;
        L342: if (!$_fail) { goto L370; }
        L343: $_p = $_stack[$_stack_sp];
        L344: $_stack[++$_stack_sp] = 346;
        L345: goto L1788;
        L346: if (!$_fail) { goto L370; }
        L347: $_p = $_stack[$_stack_sp];
        L348: $_stack[++$_stack_sp] = 350;
        L349: goto L2018;
        L350: if (!$_fail) { goto L370; }
        L351: $_p = $_stack[$_stack_sp];
        L352: $_stack[++$_stack_sp] = 354;
        L353: goto L1075;
        L354: if (!$_fail) { goto L370; }
        L355: $_p = $_stack[$_stack_sp];
        L356: $_stack[++$_stack_sp] = 358;
        L357: goto L651;
        L358: if (!$_fail) { goto L370; }
        L359: $_p = $_stack[$_stack_sp];
        L360: $_stack[++$_stack_sp] = 362;
        L361: goto L2548;
        L362: if (!$_fail) { goto L370; }
        L363: $_p = $_stack[$_stack_sp];
        L364: $_stack[++$_stack_sp] = 366;
        L365: goto L512;
        L366: if (!$_fail) { goto L370; }
        L367: $_p = $_stack[$_stack_sp];
        L368: $_stack[++$_stack_sp] = 370;
        L369: goto L759;
        L370: unset($_stack[$_stack_sp--]);
        L371: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L372: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L373: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L374: $_b = array();
        L375: $_b[0] = $_fail;
        L376: $_b[1] = $_value;
        L377: $_b[2] = $_p;
        L378: $_cache[$_a] = $_b;
        L379: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L380: if ($_a !== 113) return array(FALSE, NULL, 4); goto L113;
        L381: $_stack[++$_stack_sp] = "5@";
        L382: $_stack[$_stack_sp] .= $_p;
        L383: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L390; }
        L384: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L385: $_b = $_cache[$_a];
        L386: $_fail = $_b[0];
        L387: $_value = $_b[1];
        L388: $_p = $_b[2];
        L389: goto L436;
        L390: $_stack[++$_stack_sp] = $_env;
        L391: $_env = array();
        L392: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L393: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L394: $_stack[++$_stack_sp] = $_b;
        L395: $_stack[++$_stack_sp] = NULL;
        L396: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "{*") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{*"', $_expected)) { $_expected[] = '"{*"'; } } }
        L397: if ($_fail) { goto L424; }
        L398: $_stack[$_stack_sp] = $_value;
        L399: $_stack[++$_stack_sp] = $_p;
        L400: $_stack[++$_stack_sp] = "";
        L401: $_stack[++$_stack_sp] = "";
        L402: $_stack[++$_stack_sp] = $_p;
        L403: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*}") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*}"', $_expected)) { $_expected[] = '"*}"'; } } }
        L404: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L405: $_value = NULL;
        L406: $_fail = !$_fail;
        L407: if ($_fail) { goto L412; }
        L408: $_stack[$_stack_sp] .= $_value;
        L409: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L410: if ($_fail) { goto L412; }
        L411: $_stack[$_stack_sp] .= $_value;
        L412: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L413: if ($_fail) { goto L417; }
        L414: $_stack[$_stack_sp] .= $_value;
        L415: $_stack[$_stack_sp - 1] = $_p;
        L416: goto L401;
        L417: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L418: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L419: $_fail = false;
        L420: $_env["t"] = $_value;
        L421: if ($_fail) { goto L424; }
        L422: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*}") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*}"', $_expected)) { $_expected[] = '"*}"'; } } }
        L423: if ($_fail) { goto L424; }
        L424: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L425: if ($_fail) { goto L427; }
        L426: $_value = $this->_5($_env);
        L427: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L428: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L429: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L430: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L431: $_b = array();
        L432: $_b[0] = $_fail;
        L433: $_b[1] = $_value;
        L434: $_b[2] = $_p;
        L435: $_cache[$_a] = $_b;
        L436: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L437: if ($_a === 36) { goto L36; } else if ($_a === 302) { goto L302; } else { return array(FALSE, NULL, 5); }
        L438: $_stack[++$_stack_sp] = "6@";
        L439: $_stack[$_stack_sp] .= $_p;
        L440: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L447; }
        L441: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L442: $_b = $_cache[$_a];
        L443: $_fail = $_b[0];
        L444: $_value = $_b[1];
        L445: $_p = $_b[2];
        L446: goto L473;
        L447: $_stack[++$_stack_sp] = $_env;
        L448: $_env = array();
        L449: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L450: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L451: $_stack[++$_stack_sp] = $_b;
        L452: $_stack[++$_stack_sp] = NULL;
        L453: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "{ldelim") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{ldelim"', $_expected)) { $_expected[] = '"{ldelim"'; } } }
        L454: if ($_fail) { goto L461; }
        L455: $_stack[$_stack_sp] = $_value;
        L456: $_stack[++$_stack_sp] = 458;
        L457: goto L5382;
        L458: if ($_fail) { goto L461; }
        L459: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L460: if ($_fail) { goto L461; }
        L461: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L462: if ($_fail) { goto L464; }
        L463: $_value = $this->_6($_env);
        L464: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L465: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L466: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L467: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L468: $_b = array();
        L469: $_b[0] = $_fail;
        L470: $_b[1] = $_value;
        L471: $_b[2] = $_p;
        L472: $_cache[$_a] = $_b;
        L473: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L474: if ($_a !== 326) return array(FALSE, NULL, 6); goto L326;
        L475: $_stack[++$_stack_sp] = "7@";
        L476: $_stack[$_stack_sp] .= $_p;
        L477: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L484; }
        L478: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L479: $_b = $_cache[$_a];
        L480: $_fail = $_b[0];
        L481: $_value = $_b[1];
        L482: $_p = $_b[2];
        L483: goto L510;
        L484: $_stack[++$_stack_sp] = $_env;
        L485: $_env = array();
        L486: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L487: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L488: $_stack[++$_stack_sp] = $_b;
        L489: $_stack[++$_stack_sp] = NULL;
        L490: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "{rdelim") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{rdelim"', $_expected)) { $_expected[] = '"{rdelim"'; } } }
        L491: if ($_fail) { goto L498; }
        L492: $_stack[$_stack_sp] = $_value;
        L493: $_stack[++$_stack_sp] = 495;
        L494: goto L5382;
        L495: if ($_fail) { goto L498; }
        L496: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L497: if ($_fail) { goto L498; }
        L498: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L499: if ($_fail) { goto L501; }
        L500: $_value = $this->_7($_env);
        L501: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L502: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L503: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L504: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L505: $_b = array();
        L506: $_b[0] = $_fail;
        L507: $_b[1] = $_value;
        L508: $_b[2] = $_p;
        L509: $_cache[$_a] = $_b;
        L510: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L511: if ($_a !== 330) return array(FALSE, NULL, 7); goto L330;
        L512: $_stack[++$_stack_sp] = "8@";
        L513: $_stack[$_stack_sp] .= $_p;
        L514: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L521; }
        L515: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L516: $_b = $_cache[$_a];
        L517: $_fail = $_b[0];
        L518: $_value = $_b[1];
        L519: $_p = $_b[2];
        L520: goto L649;
        L521: $_stack[++$_stack_sp] = $_env;
        L522: $_env = array();
        L523: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L524: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L525: $_stack[++$_stack_sp] = $_b;
        L526: $_stack[++$_stack_sp] = NULL;
        L527: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "{\x24") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{\\x24"', $_expected)) { $_expected[] = '"{\\x24"'; } } }
        L528: if ($_fail) { goto L637; }
        L529: $_stack[$_stack_sp] = $_value;
        L530: $_stack[++$_stack_sp] = 532;
        L531: goto L5343;
        L532: $_env["varname"] = $_value;
        L533: if ($_fail) { goto L637; }
        L534: $_stack[++$_stack_sp] = 536;
        L535: goto L5382;
        L536: if ($_fail) { goto L637; }
        L537: $_stack[++$_stack_sp] = $_p;
        L538: $_stack[++$_stack_sp] = 540;
        L539: goto L4630;
        L540: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L541: if (!$_fail) { goto L545; }
        L542: $_fail = false;
        L543: $_value = NULL;
        L544: $_p = $_a;
        L545: $_env["path"] = $_value;
        L546: if ($_fail) { goto L637; }
        L547: $_stack[++$_stack_sp] = 549;
        L548: goto L5382;
        L549: if ($_fail) { goto L637; }
        L550: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L551: if ($_fail) { goto L637; }
        L552: $_stack[++$_stack_sp] = 554;
        L553: goto L5382;
        L554: if ($_fail) { goto L637; }
        L555: $_stack[++$_stack_sp] = 557;
        L556: goto L2724;
        L557: $_env["e"] = $_value;
        L558: if ($_fail) { goto L637; }
        L559: $_stack[++$_stack_sp] = 561;
        L560: goto L5382;
        L561: if ($_fail) { goto L637; }
        L562: $_stack[++$_stack_sp] = $_p;
        L563: $_stack[++$_stack_sp] = array();
        L564: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L565: $_stack[++$_stack_sp] = $_b;
        L566: $_stack[++$_stack_sp] = NULL;
        L567: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "|") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"|"', $_expected)) { $_expected[] = '"|"'; } } }
        L568: if ($_fail) { goto L622; }
        L569: $_stack[$_stack_sp] = $_value;
        L570: $_stack[++$_stack_sp] = 572;
        L571: goto L5382;
        L572: if ($_fail) { goto L622; }
        L573: $_a = str_replace(array("\r\n", "\r"), "\n", (string) substr($_s, 0, $_p)); $_b = 1; if (($_c = strrpos($_a, "\n")) !== FALSE) { $_b = substr_count($_a, "\n") + 1; $_a = (string) substr($_a, $_c + 1); } $_fail = FALSE; $_value = array($_b, strlen($_a) + 1);
        L574: $_env["p"] = $_value;
        L575: if ($_fail) { goto L622; }
        L576: $_stack[++$_stack_sp] = $_p;
        L577: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "@") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"@"', $_expected)) { $_expected[] = '"@"'; } } }
        L578: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L579: if (!$_fail) { goto L583; }
        L580: $_fail = false;
        L581: $_value = NULL;
        L582: $_p = $_a;
        L583: if ($_fail) { goto L622; }
        L584: $_stack[++$_stack_sp] = 586;
        L585: goto L5343;
        L586: $_env["name"] = $_value;
        L587: if ($_fail) { goto L622; }
        L588: $_stack[++$_stack_sp] = 590;
        L589: goto L5382;
        L590: if ($_fail) { goto L622; }
        L591: $_stack[++$_stack_sp] = $_p;
        L592: $_stack[++$_stack_sp] = array();
        L593: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L594: $_stack[++$_stack_sp] = $_b;
        L595: $_stack[++$_stack_sp] = NULL;
        L596: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ":") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('":"', $_expected)) { $_expected[] = '":"'; } } }
        L597: if ($_fail) { goto L609; }
        L598: $_stack[$_stack_sp] = $_value;
        L599: $_stack[++$_stack_sp] = 601;
        L600: goto L5382;
        L601: if ($_fail) { goto L609; }
        L602: $_stack[++$_stack_sp] = 604;
        L603: goto L2724;
        L604: $_env["modExpr"] = $_value;
        L605: if ($_fail) { goto L609; }
        L606: $_stack[++$_stack_sp] = 608;
        L607: goto L5382;
        L608: if ($_fail) { goto L609; }
        L609: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L610: if ($_fail) { goto L612; }
        L611: $_value = $this->_10($_env);
        L612: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L613: if ($_fail) { goto L617; }
        L614: $_stack[$_stack_sp][] = $_value;
        L615: $_stack[$_stack_sp - 1] = $_p;
        L616: goto L593;
        L617: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L618: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L619: $_fail = false;
        L620: $_env["args"] = $_value;
        L621: if ($_fail) { goto L622; }
        L622: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L623: if ($_fail) { goto L625; }
        L624: $_value = $this->_9($_env);
        L625: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L626: if ($_fail) { goto L630; }
        L627: $_stack[$_stack_sp][] = $_value;
        L628: $_stack[$_stack_sp - 1] = $_p;
        L629: goto L564;
        L630: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L631: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L632: $_fail = false;
        L633: $_env["modifiers"] = $_value;
        L634: if ($_fail) { goto L637; }
        L635: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L636: if ($_fail) { goto L637; }
        L637: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L638: if ($_fail) { goto L640; }
        L639: $_value = $this->_8($_env);
        L640: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L641: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L642: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L643: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L644: $_b = array();
        L645: $_b[0] = $_fail;
        L646: $_b[1] = $_value;
        L647: $_b[2] = $_p;
        L648: $_cache[$_a] = $_b;
        L649: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L650: if ($_a !== 366) return array(FALSE, NULL, 8); goto L366;
        L651: $_stack[++$_stack_sp] = "9@";
        L652: $_stack[$_stack_sp] .= $_p;
        L653: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L660; }
        L654: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L655: $_b = $_cache[$_a];
        L656: $_fail = $_b[0];
        L657: $_value = $_b[1];
        L658: $_p = $_b[2];
        L659: goto L757;
        L660: $_stack[++$_stack_sp] = $_env;
        L661: $_env = array();
        L662: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L663: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L664: $_stack[++$_stack_sp] = $_b;
        L665: $_stack[++$_stack_sp] = NULL;
        L666: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "{assign") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{assign"', $_expected)) { $_expected[] = '"{assign"'; } } }
        L667: if ($_fail) { goto L745; }
        L668: $_stack[$_stack_sp] = $_value;
        L669: $_stack[++$_stack_sp] = 671;
        L670: goto L5382;
        L671: if ($_fail) { goto L745; }
        L672: $_stack[++$_stack_sp] = $_p;
        L673: $_fail = TRUE; if (($_a = substr($_s, $_p, 4)) === "var=") { $_fail = FALSE; $_value = $_a; $_p += 4; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"var="', $_expected)) { $_expected[] = '"var="'; } } }
        L674: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L675: if (!$_fail) { goto L679; }
        L676: $_fail = false;
        L677: $_value = NULL;
        L678: $_p = $_a;
        L679: if ($_fail) { goto L745; }
        L680: $_stack[++$_stack_sp] = $_p;
        L681: $_stack[++$_stack_sp] = 683;
        L682: goto L5343;
        L683: if (!$_fail) { goto L687; }
        L684: $_p = $_stack[$_stack_sp];
        L685: $_stack[++$_stack_sp] = 687;
        L686: goto L5115;
        L687: unset($_stack[$_stack_sp--]);
        L688: $_env["varname"] = $_value;
        L689: if ($_fail) { goto L745; }
        L690: $_stack[++$_stack_sp] = 692;
        L691: goto L5382;
        L692: if ($_fail) { goto L745; }
        L693: $_stack[++$_stack_sp] = $_p;
        L694: $_fail = TRUE; if (($_a = substr($_s, $_p, 6)) === "value=") { $_fail = FALSE; $_value = $_a; $_p += 6; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"value="', $_expected)) { $_expected[] = '"value="'; } } }
        L695: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L696: if (!$_fail) { goto L700; }
        L697: $_fail = false;
        L698: $_value = NULL;
        L699: $_p = $_a;
        L700: if ($_fail) { goto L745; }
        L701: $_stack[++$_stack_sp] = 703;
        L702: goto L2724;
        L703: $_env["e"] = $_value;
        L704: if ($_fail) { goto L745; }
        L705: $_stack[++$_stack_sp] = 707;
        L706: goto L5382;
        L707: if ($_fail) { goto L745; }
        L708: $_stack[++$_stack_sp] = $_p;
        L709: $_stack[++$_stack_sp] = NULL;
        L710: $_fail = TRUE; if (($_a = substr($_s, $_p, 6)) === "scope=") { $_fail = FALSE; $_value = $_a; $_p += 6; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"scope="', $_expected)) { $_expected[] = '"scope="'; } } }
        L711: if ($_fail) { goto L722; }
        L712: $_stack[$_stack_sp] = $_value;
        L713: $_stack[++$_stack_sp] = $_p;
        L714: $_stack[++$_stack_sp] = 716;
        L715: goto L5343;
        L716: if (!$_fail) { goto L720; }
        L717: $_p = $_stack[$_stack_sp];
        L718: $_stack[++$_stack_sp] = 720;
        L719: goto L5115;
        L720: unset($_stack[$_stack_sp--]);
        L721: if ($_fail) { goto L722; }
        L722: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L723: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L724: if (!$_fail) { goto L728; }
        L725: $_fail = false;
        L726: $_value = NULL;
        L727: $_p = $_a;
        L728: if ($_fail) { goto L745; }
        L729: $_stack[++$_stack_sp] = 731;
        L730: goto L5382;
        L731: if ($_fail) { goto L745; }
        L732: $_stack[++$_stack_sp] = $_p;
        L733: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "nocache") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"nocache"', $_expected)) { $_expected[] = '"nocache"'; } } }
        L734: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L735: if (!$_fail) { goto L739; }
        L736: $_fail = false;
        L737: $_value = NULL;
        L738: $_p = $_a;
        L739: if ($_fail) { goto L745; }
        L740: $_stack[++$_stack_sp] = 742;
        L741: goto L5382;
        L742: if ($_fail) { goto L745; }
        L743: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L744: if ($_fail) { goto L745; }
        L745: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L746: if ($_fail) { goto L748; }
        L747: $_value = $this->_11($_env);
        L748: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L749: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L750: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L751: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L752: $_b = array();
        L753: $_b[0] = $_fail;
        L754: $_b[1] = $_value;
        L755: $_b[2] = $_p;
        L756: $_cache[$_a] = $_b;
        L757: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L758: if ($_a !== 358) return array(FALSE, NULL, 9); goto L358;
        L759: $_stack[++$_stack_sp] = "10@";
        L760: $_stack[$_stack_sp] .= $_p;
        L761: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L768; }
        L762: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L763: $_b = $_cache[$_a];
        L764: $_fail = $_b[0];
        L765: $_value = $_b[1];
        L766: $_p = $_b[2];
        L767: goto L887;
        L768: $_stack[++$_stack_sp] = $_env;
        L769: $_env = array();
        L770: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L771: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L772: $_stack[++$_stack_sp] = $_b;
        L773: $_stack[++$_stack_sp] = NULL;
        L774: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "{") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{"', $_expected)) { $_expected[] = '"{"'; } } }
        L775: if ($_fail) { goto L875; }
        L776: $_stack[$_stack_sp] = $_value;
        L777: $_stack[++$_stack_sp] = 779;
        L778: goto L2724;
        L779: $_env["expr"] = $_value;
        L780: if ($_fail) { goto L875; }
        L781: $_stack[++$_stack_sp] = 783;
        L782: goto L5382;
        L783: if ($_fail) { goto L875; }
        L784: $_stack[++$_stack_sp] = $_p;
        L785: $_stack[++$_stack_sp] = array();
        L786: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L787: $_stack[++$_stack_sp] = $_b;
        L788: $_stack[++$_stack_sp] = NULL;
        L789: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "|") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"|"', $_expected)) { $_expected[] = '"|"'; } } }
        L790: if ($_fail) { goto L844; }
        L791: $_stack[$_stack_sp] = $_value;
        L792: $_stack[++$_stack_sp] = 794;
        L793: goto L5382;
        L794: if ($_fail) { goto L844; }
        L795: $_a = str_replace(array("\r\n", "\r"), "\n", (string) substr($_s, 0, $_p)); $_b = 1; if (($_c = strrpos($_a, "\n")) !== FALSE) { $_b = substr_count($_a, "\n") + 1; $_a = (string) substr($_a, $_c + 1); } $_fail = FALSE; $_value = array($_b, strlen($_a) + 1);
        L796: $_env["p"] = $_value;
        L797: if ($_fail) { goto L844; }
        L798: $_stack[++$_stack_sp] = $_p;
        L799: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "@") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"@"', $_expected)) { $_expected[] = '"@"'; } } }
        L800: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L801: if (!$_fail) { goto L805; }
        L802: $_fail = false;
        L803: $_value = NULL;
        L804: $_p = $_a;
        L805: if ($_fail) { goto L844; }
        L806: $_stack[++$_stack_sp] = 808;
        L807: goto L5343;
        L808: $_env["name"] = $_value;
        L809: if ($_fail) { goto L844; }
        L810: $_stack[++$_stack_sp] = 812;
        L811: goto L5382;
        L812: if ($_fail) { goto L844; }
        L813: $_stack[++$_stack_sp] = $_p;
        L814: $_stack[++$_stack_sp] = array();
        L815: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L816: $_stack[++$_stack_sp] = $_b;
        L817: $_stack[++$_stack_sp] = NULL;
        L818: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ":") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('":"', $_expected)) { $_expected[] = '":"'; } } }
        L819: if ($_fail) { goto L831; }
        L820: $_stack[$_stack_sp] = $_value;
        L821: $_stack[++$_stack_sp] = 823;
        L822: goto L5382;
        L823: if ($_fail) { goto L831; }
        L824: $_stack[++$_stack_sp] = 826;
        L825: goto L2724;
        L826: $_env["modExpr"] = $_value;
        L827: if ($_fail) { goto L831; }
        L828: $_stack[++$_stack_sp] = 830;
        L829: goto L5382;
        L830: if ($_fail) { goto L831; }
        L831: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L832: if ($_fail) { goto L834; }
        L833: $_value = $this->_14($_env);
        L834: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L835: if ($_fail) { goto L839; }
        L836: $_stack[$_stack_sp][] = $_value;
        L837: $_stack[$_stack_sp - 1] = $_p;
        L838: goto L815;
        L839: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L840: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L841: $_fail = false;
        L842: $_env["args"] = $_value;
        L843: if ($_fail) { goto L844; }
        L844: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L845: if ($_fail) { goto L847; }
        L846: $_value = $this->_13($_env);
        L847: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L848: if ($_fail) { goto L852; }
        L849: $_stack[$_stack_sp][] = $_value;
        L850: $_stack[$_stack_sp - 1] = $_p;
        L851: goto L786;
        L852: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L853: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L854: $_fail = false;
        L855: $_env["modifiers"] = $_value;
        L856: if ($_fail) { goto L875; }
        L857: $_stack[++$_stack_sp] = $_p;
        L858: $_stack[++$_stack_sp] = NULL;
        L859: $_fail = TRUE; if (($_a = substr($_s, $_p, 8)) === "nofilter") { $_fail = FALSE; $_value = $_a; $_p += 8; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"nofilter"', $_expected)) { $_expected[] = '"nofilter"'; } } }
        L860: if ($_fail) { goto L865; }
        L861: $_stack[$_stack_sp] = $_value;
        L862: $_stack[++$_stack_sp] = 864;
        L863: goto L5382;
        L864: if ($_fail) { goto L865; }
        L865: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L866: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L867: if (!$_fail) { goto L871; }
        L868: $_fail = false;
        L869: $_value = NULL;
        L870: $_p = $_a;
        L871: $_env["noFilter"] = $_value;
        L872: if ($_fail) { goto L875; }
        L873: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L874: if ($_fail) { goto L875; }
        L875: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L876: if ($_fail) { goto L878; }
        L877: $_value = $this->_12($_env);
        L878: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L879: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L880: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L881: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L882: $_b = array();
        L883: $_b[0] = $_fail;
        L884: $_b[1] = $_value;
        L885: $_b[2] = $_p;
        L886: $_cache[$_a] = $_b;
        L887: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L888: if ($_a !== 370) return array(FALSE, NULL, 10); goto L370;
        L889: $_stack[++$_stack_sp] = "11@";
        L890: $_stack[$_stack_sp] .= $_p;
        L891: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L898; }
        L892: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L893: $_b = $_cache[$_a];
        L894: $_fail = $_b[0];
        L895: $_value = $_b[1];
        L896: $_p = $_b[2];
        L897: goto L954;
        L898: $_stack[++$_stack_sp] = $_env;
        L899: $_env = array();
        L900: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L901: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L902: $_stack[++$_stack_sp] = $_b;
        L903: $_stack[++$_stack_sp] = NULL;
        L904: $_fail = TRUE; if (($_a = substr($_s, $_p, 4)) === "{php") { $_fail = FALSE; $_value = $_a; $_p += 4; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{php"', $_expected)) { $_expected[] = '"{php"'; } } }
        L905: if ($_fail) { goto L942; }
        L906: $_stack[$_stack_sp] = $_value;
        L907: $_stack[++$_stack_sp] = 909;
        L908: goto L5382;
        L909: if ($_fail) { goto L942; }
        L910: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L911: if ($_fail) { goto L942; }
        L912: $_stack[++$_stack_sp] = $_p;
        L913: $_stack[++$_stack_sp] = "";
        L914: $_stack[++$_stack_sp] = "";
        L915: $_stack[++$_stack_sp] = $_p;
        L916: $_fail = TRUE; if (($_a = substr($_s, $_p, 6)) === "{/php}") { $_fail = FALSE; $_value = $_a; $_p += 6; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{/php}"', $_expected)) { $_expected[] = '"{/php}"'; } } }
        L917: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L918: $_value = NULL;
        L919: $_fail = !$_fail;
        L920: if ($_fail) { goto L925; }
        L921: $_stack[$_stack_sp] .= $_value;
        L922: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L923: if ($_fail) { goto L925; }
        L924: $_stack[$_stack_sp] .= $_value;
        L925: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L926: if ($_fail) { goto L930; }
        L927: $_stack[$_stack_sp] .= $_value;
        L928: $_stack[$_stack_sp - 1] = $_p;
        L929: goto L914;
        L930: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L931: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L932: $_fail = false;
        L933: $_env["code"] = $_value;
        L934: if ($_fail) { goto L942; }
        L935: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "{/php") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{/php"', $_expected)) { $_expected[] = '"{/php"'; } } }
        L936: if ($_fail) { goto L942; }
        L937: $_stack[++$_stack_sp] = 939;
        L938: goto L5382;
        L939: if ($_fail) { goto L942; }
        L940: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L941: if ($_fail) { goto L942; }
        L942: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L943: if ($_fail) { goto L945; }
        L944: $_value = $this->_15($_env);
        L945: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L946: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L947: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L948: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L949: $_b = array();
        L950: $_b[0] = $_fail;
        L951: $_b[1] = $_value;
        L952: $_b[2] = $_p;
        L953: $_cache[$_a] = $_b;
        L954: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L955: if ($_a !== 334) return array(FALSE, NULL, 11); goto L334;
        L956: $_stack[++$_stack_sp] = "12@";
        L957: $_stack[$_stack_sp] .= $_p;
        L958: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L965; }
        L959: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L960: $_b = $_cache[$_a];
        L961: $_fail = $_b[0];
        L962: $_value = $_b[1];
        L963: $_p = $_b[2];
        L964: goto L1073;
        L965: $_stack[++$_stack_sp] = $_env;
        L966: $_env = array();
        L967: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L968: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L969: $_stack[++$_stack_sp] = $_b;
        L970: $_stack[++$_stack_sp] = NULL;
        L971: $_fail = TRUE; if (($_a = substr($_s, $_p, 3)) === "{if") { $_fail = FALSE; $_value = $_a; $_p += 3; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{if"', $_expected)) { $_expected[] = '"{if"'; } } }
        L972: if ($_fail) { goto L1061; }
        L973: $_stack[$_stack_sp] = $_value;
        L974: $_stack[++$_stack_sp] = 976;
        L975: goto L5382;
        L976: if ($_fail) { goto L1061; }
        L977: $_stack[++$_stack_sp] = 979;
        L978: goto L2724;
        L979: $_env["cond"] = $_value;
        L980: if ($_fail) { goto L1061; }
        L981: $_stack[++$_stack_sp] = 983;
        L982: goto L5382;
        L983: if ($_fail) { goto L1061; }
        L984: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L985: if ($_fail) { goto L1061; }
        L986: $_stack[++$_stack_sp] = 988;
        L987: goto L90;
        L988: $_env["body"] = $_value;
        L989: if ($_fail) { goto L1061; }
        L990: $_stack[++$_stack_sp] = $_p;
        L991: $_stack[++$_stack_sp] = array();
        L992: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L993: $_stack[++$_stack_sp] = $_b;
        L994: $_stack[++$_stack_sp] = NULL;
        L995: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "{elseif") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{elseif"', $_expected)) { $_expected[] = '"{elseif"'; } } }
        L996: if ($_fail) { goto L1014; }
        L997: $_stack[$_stack_sp] = $_value;
        L998: $_stack[++$_stack_sp] = 1000;
        L999: goto L5382;
        L1000: if ($_fail) { goto L1014; }
        L1001: $_stack[++$_stack_sp] = 1003;
        L1002: goto L2724;
        L1003: $_env["elseifCond"] = $_value;
        L1004: if ($_fail) { goto L1014; }
        L1005: $_stack[++$_stack_sp] = 1007;
        L1006: goto L5382;
        L1007: if ($_fail) { goto L1014; }
        L1008: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1009: if ($_fail) { goto L1014; }
        L1010: $_stack[++$_stack_sp] = 1012;
        L1011: goto L90;
        L1012: $_env["elseifBody"] = $_value;
        L1013: if ($_fail) { goto L1014; }
        L1014: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1015: if ($_fail) { goto L1017; }
        L1016: $_value = $this->_17($_env);
        L1017: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1018: if ($_fail) { goto L1022; }
        L1019: $_stack[$_stack_sp][] = $_value;
        L1020: $_stack[$_stack_sp - 1] = $_p;
        L1021: goto L992;
        L1022: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1023: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1024: $_fail = false;
        L1025: $_env["elseifs"] = $_value;
        L1026: if ($_fail) { goto L1061; }
        L1027: $_stack[++$_stack_sp] = $_p;
        L1028: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1029: $_stack[++$_stack_sp] = $_b;
        L1030: $_stack[++$_stack_sp] = NULL;
        L1031: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "{else") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{else"', $_expected)) { $_expected[] = '"{else"'; } } }
        L1032: if ($_fail) { goto L1043; }
        L1033: $_stack[$_stack_sp] = $_value;
        L1034: $_stack[++$_stack_sp] = 1036;
        L1035: goto L5382;
        L1036: if ($_fail) { goto L1043; }
        L1037: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1038: if ($_fail) { goto L1043; }
        L1039: $_stack[++$_stack_sp] = 1041;
        L1040: goto L90;
        L1041: $_env["elseBody"] = $_value;
        L1042: if ($_fail) { goto L1043; }
        L1043: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1044: if ($_fail) { goto L1046; }
        L1045: $_value = $this->_18($_env);
        L1046: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1047: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1048: if (!$_fail) { goto L1052; }
        L1049: $_fail = false;
        L1050: $_value = NULL;
        L1051: $_p = $_a;
        L1052: $_env["else"] = $_value;
        L1053: if ($_fail) { goto L1061; }
        L1054: $_fail = TRUE; if (($_a = substr($_s, $_p, 4)) === "{/if") { $_fail = FALSE; $_value = $_a; $_p += 4; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{/if"', $_expected)) { $_expected[] = '"{/if"'; } } }
        L1055: if ($_fail) { goto L1061; }
        L1056: $_stack[++$_stack_sp] = 1058;
        L1057: goto L5382;
        L1058: if ($_fail) { goto L1061; }
        L1059: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1060: if ($_fail) { goto L1061; }
        L1061: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1062: if ($_fail) { goto L1064; }
        L1063: $_value = $this->_16($_env);
        L1064: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1065: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1066: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1067: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1068: $_b = array();
        L1069: $_b[0] = $_fail;
        L1070: $_b[1] = $_value;
        L1071: $_b[2] = $_p;
        L1072: $_cache[$_a] = $_b;
        L1073: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1074: if ($_a !== 314) return array(FALSE, NULL, 12); goto L314;
        L1075: $_stack[++$_stack_sp] = "13@";
        L1076: $_stack[$_stack_sp] .= $_p;
        L1077: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1084; }
        L1078: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1079: $_b = $_cache[$_a];
        L1080: $_fail = $_b[0];
        L1081: $_value = $_b[1];
        L1082: $_p = $_b[2];
        L1083: goto L1148;
        L1084: $_stack[++$_stack_sp] = $_env;
        L1085: $_env = array();
        L1086: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1087: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1088: $_stack[++$_stack_sp] = $_b;
        L1089: $_stack[++$_stack_sp] = NULL;
        L1090: $_fail = TRUE; if (($_a = substr($_s, $_p, 4)) === "{use") { $_fail = FALSE; $_value = $_a; $_p += 4; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{use"', $_expected)) { $_expected[] = '"{use"'; } } }
        L1091: if ($_fail) { goto L1136; }
        L1092: $_stack[$_stack_sp] = $_value;
        L1093: $_stack[++$_stack_sp] = 1095;
        L1094: goto L5382;
        L1095: if ($_fail) { goto L1136; }
        L1096: $_stack[++$_stack_sp] = $_p;
        L1097: $_stack[++$_stack_sp] = array();
        L1098: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1099: $_stack[++$_stack_sp] = $_b;
        L1100: $_stack[++$_stack_sp] = NULL;
        L1101: $_stack[++$_stack_sp] = 1103;
        L1102: goto L5343;
        L1103: $_env["alias"] = $_value;
        L1104: if ($_fail) { goto L1118; }
        L1105: $_stack[$_stack_sp] = $_value;
        L1106: $_stack[++$_stack_sp] = 1108;
        L1107: goto L5382;
        L1108: if ($_fail) { goto L1118; }
        L1109: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L1110: if ($_fail) { goto L1118; }
        L1111: $_stack[++$_stack_sp] = 1113;
        L1112: goto L5382;
        L1113: if ($_fail) { goto L1118; }
        L1114: $_stack[++$_stack_sp] = 1116;
        L1115: goto L5115;
        L1116: $_env["class"] = $_value;
        L1117: if ($_fail) { goto L1118; }
        L1118: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1119: if ($_fail) { goto L1121; }
        L1120: $_value = $this->_20($_env);
        L1121: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1122: if ($_fail) { goto L1126; }
        L1123: $_stack[$_stack_sp][] = $_value;
        L1124: $_stack[$_stack_sp - 1] = $_p;
        L1125: goto L1098;
        L1126: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1127: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1128: $_fail = false;
        L1129: $_env["classes"] = $_value;
        L1130: if ($_fail) { goto L1136; }
        L1131: $_stack[++$_stack_sp] = 1133;
        L1132: goto L5382;
        L1133: if ($_fail) { goto L1136; }
        L1134: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1135: if ($_fail) { goto L1136; }
        L1136: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1137: if ($_fail) { goto L1139; }
        L1138: $_value = $this->_19($_env);
        L1139: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1140: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1141: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1142: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1143: $_b = array();
        L1144: $_b[0] = $_fail;
        L1145: $_b[1] = $_value;
        L1146: $_b[2] = $_p;
        L1147: $_cache[$_a] = $_b;
        L1148: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1149: if ($_a !== 354) return array(FALSE, NULL, 13); goto L354;
        L1150: $_stack[++$_stack_sp] = "14@";
        L1151: $_stack[$_stack_sp] .= $_p;
        L1152: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1159; }
        L1153: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1154: $_b = $_cache[$_a];
        L1155: $_fail = $_b[0];
        L1156: $_value = $_b[1];
        L1157: $_p = $_b[2];
        L1158: goto L1453;
        L1159: $_stack[++$_stack_sp] = $_env;
        L1160: $_env = array();
        L1161: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1162: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1163: $_stack[++$_stack_sp] = $_b;
        L1164: $_stack[++$_stack_sp] = NULL;
        L1165: $_a = str_replace(array("\r\n", "\r"), "\n", (string) substr($_s, 0, $_p)); $_b = 1; if (($_c = strrpos($_a, "\n")) !== FALSE) { $_b = substr_count($_a, "\n") + 1; $_a = (string) substr($_a, $_c + 1); } $_fail = FALSE; $_value = array($_b, strlen($_a) + 1);
        L1166: $_env["p"] = $_value;
        L1167: if ($_fail) { goto L1441; }
        L1168: $_stack[$_stack_sp] = $_value;
        L1169: $_fail = TRUE; if (($_a = substr($_s, $_p, 8)) === "{foreach") { $_fail = FALSE; $_value = $_a; $_p += 8; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{foreach"', $_expected)) { $_expected[] = '"{foreach"'; } } }
        L1170: if ($_fail) { goto L1441; }
        L1171: $_stack[++$_stack_sp] = 1173;
        L1172: goto L5382;
        L1173: if ($_fail) { goto L1441; }
        L1174: $_stack[++$_stack_sp] = $_p;
        L1175: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1176: $_stack[++$_stack_sp] = $_b;
        L1177: $_stack[++$_stack_sp] = NULL;
        L1178: $_stack[++$_stack_sp] = $_p;
        L1179: $_stack[++$_stack_sp] = 1181;
        L1180: goto L4094;
        L1181: if (!$_fail) { goto L1185; }
        L1182: $_p = $_stack[$_stack_sp];
        L1183: $_stack[++$_stack_sp] = 1185;
        L1184: goto L3869;
        L1185: unset($_stack[$_stack_sp--]);
        L1186: $_env["from"] = $_value;
        L1187: if ($_fail) { goto L1262; }
        L1188: $_stack[$_stack_sp] = $_value;
        L1189: $_stack[++$_stack_sp] = 1191;
        L1190: goto L5382;
        L1191: if ($_fail) { goto L1262; }
        L1192: $_stack[++$_stack_sp] = $_p;
        L1193: $_stack[++$_stack_sp] = NULL;
        L1194: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "as") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"as"', $_expected)) { $_expected[] = '"as"'; } } }
        L1195: if ($_fail) { goto L1200; }
        L1196: $_stack[$_stack_sp] = $_value;
        L1197: $_stack[++$_stack_sp] = 1199;
        L1198: goto L5382;
        L1199: if ($_fail) { goto L1200; }
        L1200: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1201: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1202: if (!$_fail) { goto L1206; }
        L1203: $_fail = false;
        L1204: $_value = NULL;
        L1205: $_p = $_a;
        L1206: if ($_fail) { goto L1262; }
        L1207: $_stack[++$_stack_sp] = $_p;
        L1208: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1209: $_stack[++$_stack_sp] = $_b;
        L1210: $_stack[++$_stack_sp] = NULL;
        L1211: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\x24") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\x24"', $_expected)) { $_expected[] = '"\\x24"'; } } }
        L1212: if ($_fail) { goto L1226; }
        L1213: $_stack[$_stack_sp] = $_value;
        L1214: $_stack[++$_stack_sp] = 1216;
        L1215: goto L5343;
        L1216: $_env["k"] = $_value;
        L1217: if ($_fail) { goto L1226; }
        L1218: $_stack[++$_stack_sp] = 1220;
        L1219: goto L5382;
        L1220: if ($_fail) { goto L1226; }
        L1221: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "=>") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"=>"', $_expected)) { $_expected[] = '"=>"'; } } }
        L1222: if ($_fail) { goto L1226; }
        L1223: $_stack[++$_stack_sp] = 1225;
        L1224: goto L5382;
        L1225: if ($_fail) { goto L1226; }
        L1226: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1227: if ($_fail) { goto L1229; }
        L1228: $_value = $this->_23($_env);
        L1229: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1230: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1231: if (!$_fail) { goto L1235; }
        L1232: $_fail = false;
        L1233: $_value = NULL;
        L1234: $_p = $_a;
        L1235: $_env["key"] = $_value;
        L1236: if ($_fail) { goto L1262; }
        L1237: $_stack[++$_stack_sp] = $_p;
        L1238: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1239: $_stack[++$_stack_sp] = $_b;
        L1240: $_stack[++$_stack_sp] = NULL;
        L1241: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\x24") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\x24"', $_expected)) { $_expected[] = '"\\x24"'; } } }
        L1242: if ($_fail) { goto L1251; }
        L1243: $_stack[$_stack_sp] = $_value;
        L1244: $_stack[++$_stack_sp] = 1246;
        L1245: goto L5343;
        L1246: $_env["i"] = $_value;
        L1247: if ($_fail) { goto L1251; }
        L1248: $_stack[++$_stack_sp] = 1250;
        L1249: goto L5382;
        L1250: if ($_fail) { goto L1251; }
        L1251: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1252: if ($_fail) { goto L1254; }
        L1253: $_value = $this->_24($_env);
        L1254: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1255: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1256: if (!$_fail) { goto L1260; }
        L1257: $_fail = false;
        L1258: $_value = NULL;
        L1259: $_p = $_a;
        L1260: $_env["item"] = $_value;
        L1261: if ($_fail) { goto L1262; }
        L1262: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1263: if ($_fail) { goto L1265; }
        L1264: $_value = $this->_22($_env);
        L1265: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1266: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1267: if (!$_fail) { goto L1271; }
        L1268: $_fail = false;
        L1269: $_value = NULL;
        L1270: $_p = $_a;
        L1271: $_env["alternative"] = $_value;
        L1272: if ($_fail) { goto L1441; }
        L1273: $_stack[++$_stack_sp] = $_p;
        L1274: $_stack[++$_stack_sp] = array();
        L1275: $_stack[++$_stack_sp] = $_p;
        L1276: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1277: $_stack[++$_stack_sp] = $_b;
        L1278: $_stack[++$_stack_sp] = NULL;
        L1279: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "from=") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"from="', $_expected)) { $_expected[] = '"from="'; } } }
        L1280: if ($_fail) { goto L1289; }
        L1281: $_stack[$_stack_sp] = $_value;
        L1282: $_stack[++$_stack_sp] = 1284;
        L1283: goto L4094;
        L1284: $_env["v"] = $_value;
        L1285: if ($_fail) { goto L1289; }
        L1286: $_stack[++$_stack_sp] = 1288;
        L1287: goto L5382;
        L1288: if ($_fail) { goto L1289; }
        L1289: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1290: if ($_fail) { goto L1292; }
        L1291: $_value = $this->_25($_env);
        L1292: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1293: if (!$_fail) { goto L1368; }
        L1294: $_p = $_stack[$_stack_sp];
        L1295: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1296: $_stack[++$_stack_sp] = $_b;
        L1297: $_stack[++$_stack_sp] = NULL;
        L1298: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "name=") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"name="', $_expected)) { $_expected[] = '"name="'; } } }
        L1299: if ($_fail) { goto L1314; }
        L1300: $_stack[$_stack_sp] = $_value;
        L1301: $_stack[++$_stack_sp] = $_p;
        L1302: $_stack[++$_stack_sp] = 1304;
        L1303: goto L5343;
        L1304: if (!$_fail) { goto L1308; }
        L1305: $_p = $_stack[$_stack_sp];
        L1306: $_stack[++$_stack_sp] = 1308;
        L1307: goto L5115;
        L1308: unset($_stack[$_stack_sp--]);
        L1309: $_env["v"] = $_value;
        L1310: if ($_fail) { goto L1314; }
        L1311: $_stack[++$_stack_sp] = 1313;
        L1312: goto L5382;
        L1313: if ($_fail) { goto L1314; }
        L1314: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1315: if ($_fail) { goto L1317; }
        L1316: $_value = $this->_26($_env);
        L1317: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1318: if (!$_fail) { goto L1368; }
        L1319: $_p = $_stack[$_stack_sp];
        L1320: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1321: $_stack[++$_stack_sp] = $_b;
        L1322: $_stack[++$_stack_sp] = NULL;
        L1323: $_fail = TRUE; if (($_a = substr($_s, $_p, 4)) === "key=") { $_fail = FALSE; $_value = $_a; $_p += 4; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"key="', $_expected)) { $_expected[] = '"key="'; } } }
        L1324: if ($_fail) { goto L1339; }
        L1325: $_stack[$_stack_sp] = $_value;
        L1326: $_stack[++$_stack_sp] = $_p;
        L1327: $_stack[++$_stack_sp] = 1329;
        L1328: goto L5343;
        L1329: if (!$_fail) { goto L1333; }
        L1330: $_p = $_stack[$_stack_sp];
        L1331: $_stack[++$_stack_sp] = 1333;
        L1332: goto L5115;
        L1333: unset($_stack[$_stack_sp--]);
        L1334: $_env["v"] = $_value;
        L1335: if ($_fail) { goto L1339; }
        L1336: $_stack[++$_stack_sp] = 1338;
        L1337: goto L5382;
        L1338: if ($_fail) { goto L1339; }
        L1339: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1340: if ($_fail) { goto L1342; }
        L1341: $_value = $this->_27($_env);
        L1342: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1343: if (!$_fail) { goto L1368; }
        L1344: $_p = $_stack[$_stack_sp];
        L1345: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1346: $_stack[++$_stack_sp] = $_b;
        L1347: $_stack[++$_stack_sp] = NULL;
        L1348: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "item=") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"item="', $_expected)) { $_expected[] = '"item="'; } } }
        L1349: if ($_fail) { goto L1364; }
        L1350: $_stack[$_stack_sp] = $_value;
        L1351: $_stack[++$_stack_sp] = $_p;
        L1352: $_stack[++$_stack_sp] = 1354;
        L1353: goto L5343;
        L1354: if (!$_fail) { goto L1358; }
        L1355: $_p = $_stack[$_stack_sp];
        L1356: $_stack[++$_stack_sp] = 1358;
        L1357: goto L5115;
        L1358: unset($_stack[$_stack_sp--]);
        L1359: $_env["v"] = $_value;
        L1360: if ($_fail) { goto L1364; }
        L1361: $_stack[++$_stack_sp] = 1363;
        L1362: goto L5382;
        L1363: if ($_fail) { goto L1364; }
        L1364: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1365: if ($_fail) { goto L1367; }
        L1366: $_value = $this->_28($_env);
        L1367: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1368: unset($_stack[$_stack_sp--]);
        L1369: if ($_fail) { goto L1373; }
        L1370: $_stack[$_stack_sp][] = $_value;
        L1371: $_stack[$_stack_sp - 1] = $_p;
        L1372: goto L1275;
        L1373: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1374: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1375: $_fail = false;
        L1376: $_env["args"] = $_value;
        L1377: if ($_fail) { goto L1441; }
        L1378: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1379: if ($_fail) { goto L1441; }
        L1380: $_stack[++$_stack_sp] = 1382;
        L1381: goto L90;
        L1382: $_env["body"] = $_value;
        L1383: if ($_fail) { goto L1441; }
        L1384: $_stack[++$_stack_sp] = $_p;
        L1385: $_stack[++$_stack_sp] = $_p;
        L1386: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1387: $_stack[++$_stack_sp] = $_b;
        L1388: $_stack[++$_stack_sp] = NULL;
        L1389: $_fail = TRUE; if (($_a = substr($_s, $_p, 12)) === "{foreachelse") { $_fail = FALSE; $_value = $_a; $_p += 12; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{foreachelse"', $_expected)) { $_expected[] = '"{foreachelse"'; } } }
        L1390: if ($_fail) { goto L1401; }
        L1391: $_stack[$_stack_sp] = $_value;
        L1392: $_stack[++$_stack_sp] = 1394;
        L1393: goto L5382;
        L1394: if ($_fail) { goto L1401; }
        L1395: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1396: if ($_fail) { goto L1401; }
        L1397: $_stack[++$_stack_sp] = 1399;
        L1398: goto L90;
        L1399: $_env["body"] = $_value;
        L1400: if ($_fail) { goto L1401; }
        L1401: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1402: if ($_fail) { goto L1404; }
        L1403: $_value = $this->_29($_env);
        L1404: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1405: if (!$_fail) { goto L1426; }
        L1406: $_p = $_stack[$_stack_sp];
        L1407: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1408: $_stack[++$_stack_sp] = $_b;
        L1409: $_stack[++$_stack_sp] = NULL;
        L1410: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "{else") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{else"', $_expected)) { $_expected[] = '"{else"'; } } }
        L1411: if ($_fail) { goto L1422; }
        L1412: $_stack[$_stack_sp] = $_value;
        L1413: $_stack[++$_stack_sp] = 1415;
        L1414: goto L5382;
        L1415: if ($_fail) { goto L1422; }
        L1416: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1417: if ($_fail) { goto L1422; }
        L1418: $_stack[++$_stack_sp] = 1420;
        L1419: goto L90;
        L1420: $_env["body"] = $_value;
        L1421: if ($_fail) { goto L1422; }
        L1422: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1423: if ($_fail) { goto L1425; }
        L1424: $_value = $this->_30($_env);
        L1425: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1426: unset($_stack[$_stack_sp--]);
        L1427: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1428: if (!$_fail) { goto L1432; }
        L1429: $_fail = false;
        L1430: $_value = NULL;
        L1431: $_p = $_a;
        L1432: $_env["else"] = $_value;
        L1433: if ($_fail) { goto L1441; }
        L1434: $_fail = TRUE; if (($_a = substr($_s, $_p, 9)) === "{/foreach") { $_fail = FALSE; $_value = $_a; $_p += 9; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{/foreach"', $_expected)) { $_expected[] = '"{/foreach"'; } } }
        L1435: if ($_fail) { goto L1441; }
        L1436: $_stack[++$_stack_sp] = 1438;
        L1437: goto L5382;
        L1438: if ($_fail) { goto L1441; }
        L1439: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1440: if ($_fail) { goto L1441; }
        L1441: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1442: if ($_fail) { goto L1444; }
        L1443: $_value = $this->_21($_env);
        L1444: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1445: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1446: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1447: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1448: $_b = array();
        L1449: $_b[0] = $_fail;
        L1450: $_b[1] = $_value;
        L1451: $_b[2] = $_p;
        L1452: $_cache[$_a] = $_b;
        L1453: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1454: if ($_a !== 318) return array(FALSE, NULL, 14); goto L318;
        L1455: $_stack[++$_stack_sp] = "15@";
        L1456: $_stack[$_stack_sp] .= $_p;
        L1457: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1464; }
        L1458: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1459: $_b = $_cache[$_a];
        L1460: $_fail = $_b[0];
        L1461: $_value = $_b[1];
        L1462: $_p = $_b[2];
        L1463: goto L1628;
        L1464: $_stack[++$_stack_sp] = $_env;
        L1465: $_env = array();
        L1466: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1467: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1468: $_stack[++$_stack_sp] = $_b;
        L1469: $_stack[++$_stack_sp] = NULL;
        L1470: $_fail = TRUE; if (($_a = substr($_s, $_p, 4)) === "{for") { $_fail = FALSE; $_value = $_a; $_p += 4; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{for"', $_expected)) { $_expected[] = '"{for"'; } } }
        L1471: if ($_fail) { goto L1616; }
        L1472: $_stack[$_stack_sp] = $_value;
        L1473: $_stack[++$_stack_sp] = 1475;
        L1474: goto L5382;
        L1475: if ($_fail) { goto L1616; }
        L1476: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1477: $_stack[++$_stack_sp] = $_b;
        L1478: $_stack[++$_stack_sp] = NULL;
        L1479: $_stack[++$_stack_sp] = $_p;
        L1480: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\x24") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\x24"', $_expected)) { $_expected[] = '"\\x24"'; } } }
        L1481: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1482: if (!$_fail) { goto L1486; }
        L1483: $_fail = false;
        L1484: $_value = NULL;
        L1485: $_p = $_a;
        L1486: if ($_fail) { goto L1495; }
        L1487: $_stack[$_stack_sp] = $_value;
        L1488: $_stack[++$_stack_sp] = 1490;
        L1489: goto L5343;
        L1490: $_env["v"] = $_value;
        L1491: if ($_fail) { goto L1495; }
        L1492: $_stack[++$_stack_sp] = 1494;
        L1493: goto L5382;
        L1494: if ($_fail) { goto L1495; }
        L1495: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1496: if ($_fail) { goto L1498; }
        L1497: $_value = $this->_32($_env);
        L1498: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1499: $_env["var"] = $_value;
        L1500: if ($_fail) { goto L1616; }
        L1501: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L1502: if ($_fail) { goto L1616; }
        L1503: $_stack[++$_stack_sp] = 1505;
        L1504: goto L5382;
        L1505: if ($_fail) { goto L1616; }
        L1506: $_stack[++$_stack_sp] = 1508;
        L1507: goto L2724;
        L1508: $_env["from"] = $_value;
        L1509: if ($_fail) { goto L1616; }
        L1510: $_stack[++$_stack_sp] = 1512;
        L1511: goto L5382;
        L1512: if ($_fail) { goto L1616; }
        L1513: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "to") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"to"', $_expected)) { $_expected[] = '"to"'; } } }
        L1514: if ($_fail) { goto L1616; }
        L1515: $_stack[++$_stack_sp] = 1517;
        L1516: goto L5382;
        L1517: if ($_fail) { goto L1616; }
        L1518: $_stack[++$_stack_sp] = 1520;
        L1519: goto L2724;
        L1520: $_env["to"] = $_value;
        L1521: if ($_fail) { goto L1616; }
        L1522: $_stack[++$_stack_sp] = 1524;
        L1523: goto L5382;
        L1524: if ($_fail) { goto L1616; }
        L1525: $_stack[++$_stack_sp] = $_p;
        L1526: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1527: $_stack[++$_stack_sp] = $_b;
        L1528: $_stack[++$_stack_sp] = NULL;
        L1529: $_fail = TRUE; if (($_a = substr($_s, $_p, 4)) === "step") { $_fail = FALSE; $_value = $_a; $_p += 4; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"step"', $_expected)) { $_expected[] = '"step"'; } } }
        L1530: if ($_fail) { goto L1542; }
        L1531: $_stack[$_stack_sp] = $_value;
        L1532: $_stack[++$_stack_sp] = 1534;
        L1533: goto L5382;
        L1534: if ($_fail) { goto L1542; }
        L1535: $_stack[++$_stack_sp] = 1537;
        L1536: goto L2724;
        L1537: $_env["s"] = $_value;
        L1538: if ($_fail) { goto L1542; }
        L1539: $_stack[++$_stack_sp] = 1541;
        L1540: goto L5382;
        L1541: if ($_fail) { goto L1542; }
        L1542: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1543: if ($_fail) { goto L1545; }
        L1544: $_value = $this->_33($_env);
        L1545: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1546: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1547: if (!$_fail) { goto L1551; }
        L1548: $_fail = false;
        L1549: $_value = NULL;
        L1550: $_p = $_a;
        L1551: $_env["step"] = $_value;
        L1552: if ($_fail) { goto L1616; }
        L1553: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1554: if ($_fail) { goto L1616; }
        L1555: $_stack[++$_stack_sp] = 1557;
        L1556: goto L90;
        L1557: $_env["body"] = $_value;
        L1558: if ($_fail) { goto L1616; }
        L1559: $_stack[++$_stack_sp] = $_p;
        L1560: $_stack[++$_stack_sp] = $_p;
        L1561: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1562: $_stack[++$_stack_sp] = $_b;
        L1563: $_stack[++$_stack_sp] = NULL;
        L1564: $_fail = TRUE; if (($_a = substr($_s, $_p, 8)) === "{forelse") { $_fail = FALSE; $_value = $_a; $_p += 8; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{forelse"', $_expected)) { $_expected[] = '"{forelse"'; } } }
        L1565: if ($_fail) { goto L1576; }
        L1566: $_stack[$_stack_sp] = $_value;
        L1567: $_stack[++$_stack_sp] = 1569;
        L1568: goto L5382;
        L1569: if ($_fail) { goto L1576; }
        L1570: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1571: if ($_fail) { goto L1576; }
        L1572: $_stack[++$_stack_sp] = 1574;
        L1573: goto L90;
        L1574: $_env["elseBody"] = $_value;
        L1575: if ($_fail) { goto L1576; }
        L1576: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1577: if ($_fail) { goto L1579; }
        L1578: $_value = $this->_34($_env);
        L1579: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1580: if (!$_fail) { goto L1601; }
        L1581: $_p = $_stack[$_stack_sp];
        L1582: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1583: $_stack[++$_stack_sp] = $_b;
        L1584: $_stack[++$_stack_sp] = NULL;
        L1585: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "{else") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{else"', $_expected)) { $_expected[] = '"{else"'; } } }
        L1586: if ($_fail) { goto L1597; }
        L1587: $_stack[$_stack_sp] = $_value;
        L1588: $_stack[++$_stack_sp] = 1590;
        L1589: goto L5382;
        L1590: if ($_fail) { goto L1597; }
        L1591: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1592: if ($_fail) { goto L1597; }
        L1593: $_stack[++$_stack_sp] = 1595;
        L1594: goto L90;
        L1595: $_env["elseBody"] = $_value;
        L1596: if ($_fail) { goto L1597; }
        L1597: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1598: if ($_fail) { goto L1600; }
        L1599: $_value = $this->_35($_env);
        L1600: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1601: unset($_stack[$_stack_sp--]);
        L1602: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1603: if (!$_fail) { goto L1607; }
        L1604: $_fail = false;
        L1605: $_value = NULL;
        L1606: $_p = $_a;
        L1607: $_env["else"] = $_value;
        L1608: if ($_fail) { goto L1616; }
        L1609: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "{/for") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{/for"', $_expected)) { $_expected[] = '"{/for"'; } } }
        L1610: if ($_fail) { goto L1616; }
        L1611: $_stack[++$_stack_sp] = 1613;
        L1612: goto L5382;
        L1613: if ($_fail) { goto L1616; }
        L1614: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1615: if ($_fail) { goto L1616; }
        L1616: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1617: if ($_fail) { goto L1619; }
        L1618: $_value = $this->_31($_env);
        L1619: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1620: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1621: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1622: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1623: $_b = array();
        L1624: $_b[0] = $_fail;
        L1625: $_b[1] = $_value;
        L1626: $_b[2] = $_p;
        L1627: $_cache[$_a] = $_b;
        L1628: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1629: if ($_a !== 338) return array(FALSE, NULL, 15); goto L338;
        L1630: $_stack[++$_stack_sp] = "16@";
        L1631: $_stack[$_stack_sp] .= $_p;
        L1632: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1639; }
        L1633: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1634: $_b = $_cache[$_a];
        L1635: $_fail = $_b[0];
        L1636: $_value = $_b[1];
        L1637: $_p = $_b[2];
        L1638: goto L1786;
        L1639: $_stack[++$_stack_sp] = $_env;
        L1640: $_env = array();
        L1641: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1642: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1643: $_stack[++$_stack_sp] = $_b;
        L1644: $_stack[++$_stack_sp] = NULL;
        L1645: $_a = str_replace(array("\r\n", "\r"), "\n", (string) substr($_s, 0, $_p)); $_b = 1; if (($_c = strrpos($_a, "\n")) !== FALSE) { $_b = substr_count($_a, "\n") + 1; $_a = (string) substr($_a, $_c + 1); } $_fail = FALSE; $_value = array($_b, strlen($_a) + 1);
        L1646: $_env["p"] = $_value;
        L1647: if ($_fail) { goto L1774; }
        L1648: $_stack[$_stack_sp] = $_value;
        L1649: $_fail = TRUE; if (($_a = substr($_s, $_p, 8)) === "{section") { $_fail = FALSE; $_value = $_a; $_p += 8; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{section"', $_expected)) { $_expected[] = '"{section"'; } } }
        L1650: if ($_fail) { goto L1774; }
        L1651: $_stack[++$_stack_sp] = 1653;
        L1652: goto L5382;
        L1653: if ($_fail) { goto L1774; }
        L1654: $_stack[++$_stack_sp] = $_p;
        L1655: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1656: $_stack[++$_stack_sp] = $_b;
        L1657: $_stack[++$_stack_sp] = NULL;
        L1658: $_stack[++$_stack_sp] = $_p;
        L1659: $_stack[++$_stack_sp] = NULL;
        L1660: $_stack[++$_stack_sp] = 1662;
        L1661: goto L5343;
        L1662: if ($_fail) { goto L1670; }
        L1663: $_stack[$_stack_sp] = $_value;
        L1664: $_stack[++$_stack_sp] = $_p;
        L1665: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L1666: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1667: $_value = NULL;
        L1668: $_fail = !$_fail;
        L1669: if ($_fail) { goto L1670; }
        L1670: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1671: if (!$_fail) { goto L1675; }
        L1672: $_p = $_stack[$_stack_sp];
        L1673: $_stack[++$_stack_sp] = 1675;
        L1674: goto L5115;
        L1675: unset($_stack[$_stack_sp--]);
        L1676: $_env["name"] = $_value;
        L1677: if ($_fail) { goto L1695; }
        L1678: $_stack[$_stack_sp] = $_value;
        L1679: $_stack[++$_stack_sp] = 1681;
        L1680: goto L5382;
        L1681: if ($_fail) { goto L1695; }
        L1682: $_stack[++$_stack_sp] = $_p;
        L1683: $_stack[++$_stack_sp] = 1685;
        L1684: goto L2724;
        L1685: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1686: if (!$_fail) { goto L1690; }
        L1687: $_fail = false;
        L1688: $_value = NULL;
        L1689: $_p = $_a;
        L1690: $_env["loop"] = $_value;
        L1691: if ($_fail) { goto L1695; }
        L1692: $_stack[++$_stack_sp] = 1694;
        L1693: goto L5382;
        L1694: if ($_fail) { goto L1695; }
        L1695: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1696: if ($_fail) { goto L1698; }
        L1697: $_value = $this->_37($_env);
        L1698: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1699: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1700: if (!$_fail) { goto L1704; }
        L1701: $_fail = false;
        L1702: $_value = NULL;
        L1703: $_p = $_a;
        L1704: $_env["alternative"] = $_value;
        L1705: if ($_fail) { goto L1774; }
        L1706: $_stack[++$_stack_sp] = $_p;
        L1707: $_stack[++$_stack_sp] = array();
        L1708: $_stack[++$_stack_sp] = $_p;
        L1709: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1710: $_stack[++$_stack_sp] = $_b;
        L1711: $_stack[++$_stack_sp] = NULL;
        L1712: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "name=") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"name="', $_expected)) { $_expected[] = '"name="'; } } }
        L1713: if ($_fail) { goto L1728; }
        L1714: $_stack[$_stack_sp] = $_value;
        L1715: $_stack[++$_stack_sp] = $_p;
        L1716: $_stack[++$_stack_sp] = 1718;
        L1717: goto L5115;
        L1718: if (!$_fail) { goto L1722; }
        L1719: $_p = $_stack[$_stack_sp];
        L1720: $_stack[++$_stack_sp] = 1722;
        L1721: goto L5343;
        L1722: unset($_stack[$_stack_sp--]);
        L1723: $_env["n"] = $_value;
        L1724: if ($_fail) { goto L1728; }
        L1725: $_stack[++$_stack_sp] = 1727;
        L1726: goto L5382;
        L1727: if ($_fail) { goto L1728; }
        L1728: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1729: if ($_fail) { goto L1731; }
        L1730: $_value = $this->_38($_env);
        L1731: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1732: if (!$_fail) { goto L1751; }
        L1733: $_p = $_stack[$_stack_sp];
        L1734: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1735: $_stack[++$_stack_sp] = $_b;
        L1736: $_stack[++$_stack_sp] = NULL;
        L1737: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "loop=") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"loop="', $_expected)) { $_expected[] = '"loop="'; } } }
        L1738: if ($_fail) { goto L1747; }
        L1739: $_stack[$_stack_sp] = $_value;
        L1740: $_stack[++$_stack_sp] = 1742;
        L1741: goto L2724;
        L1742: $_env["e"] = $_value;
        L1743: if ($_fail) { goto L1747; }
        L1744: $_stack[++$_stack_sp] = 1746;
        L1745: goto L5382;
        L1746: if ($_fail) { goto L1747; }
        L1747: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1748: if ($_fail) { goto L1750; }
        L1749: $_value = $this->_39($_env);
        L1750: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1751: unset($_stack[$_stack_sp--]);
        L1752: if ($_fail) { goto L1756; }
        L1753: $_stack[$_stack_sp][] = $_value;
        L1754: $_stack[$_stack_sp - 1] = $_p;
        L1755: goto L1708;
        L1756: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1757: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1758: $_fail = false;
        L1759: $_env["args"] = $_value;
        L1760: if ($_fail) { goto L1774; }
        L1761: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1762: if ($_fail) { goto L1774; }
        L1763: $_stack[++$_stack_sp] = 1765;
        L1764: goto L90;
        L1765: $_env["body"] = $_value;
        L1766: if ($_fail) { goto L1774; }
        L1767: $_fail = TRUE; if (($_a = substr($_s, $_p, 9)) === "{/section") { $_fail = FALSE; $_value = $_a; $_p += 9; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{/section"', $_expected)) { $_expected[] = '"{/section"'; } } }
        L1768: if ($_fail) { goto L1774; }
        L1769: $_stack[++$_stack_sp] = 1771;
        L1770: goto L5382;
        L1771: if ($_fail) { goto L1774; }
        L1772: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1773: if ($_fail) { goto L1774; }
        L1774: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1775: if ($_fail) { goto L1777; }
        L1776: $_value = $this->_36($_env);
        L1777: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1778: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1779: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1780: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1781: $_b = array();
        L1782: $_b[0] = $_fail;
        L1783: $_b[1] = $_value;
        L1784: $_b[2] = $_p;
        L1785: $_cache[$_a] = $_b;
        L1786: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1787: if ($_a !== 342) return array(FALSE, NULL, 16); goto L342;
        L1788: $_stack[++$_stack_sp] = "17@";
        L1789: $_stack[$_stack_sp] .= $_p;
        L1790: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1797; }
        L1791: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1792: $_b = $_cache[$_a];
        L1793: $_fail = $_b[0];
        L1794: $_value = $_b[1];
        L1795: $_p = $_b[2];
        L1796: goto L1853;
        L1797: $_stack[++$_stack_sp] = $_env;
        L1798: $_env = array();
        L1799: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1800: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1801: $_stack[++$_stack_sp] = $_b;
        L1802: $_stack[++$_stack_sp] = NULL;
        L1803: $_fail = TRUE; if (($_a = substr($_s, $_p, 8)) === "{literal") { $_fail = FALSE; $_value = $_a; $_p += 8; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{literal"', $_expected)) { $_expected[] = '"{literal"'; } } }
        L1804: if ($_fail) { goto L1841; }
        L1805: $_stack[$_stack_sp] = $_value;
        L1806: $_stack[++$_stack_sp] = 1808;
        L1807: goto L5382;
        L1808: if ($_fail) { goto L1841; }
        L1809: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1810: if ($_fail) { goto L1841; }
        L1811: $_stack[++$_stack_sp] = $_p;
        L1812: $_stack[++$_stack_sp] = "";
        L1813: $_stack[++$_stack_sp] = "";
        L1814: $_stack[++$_stack_sp] = $_p;
        L1815: $_fail = TRUE; if (($_a = substr($_s, $_p, 10)) === "{/literal}") { $_fail = FALSE; $_value = $_a; $_p += 10; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{/literal}"', $_expected)) { $_expected[] = '"{/literal}"'; } } }
        L1816: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1817: $_value = NULL;
        L1818: $_fail = !$_fail;
        L1819: if ($_fail) { goto L1824; }
        L1820: $_stack[$_stack_sp] .= $_value;
        L1821: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1822: if ($_fail) { goto L1824; }
        L1823: $_stack[$_stack_sp] .= $_value;
        L1824: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1825: if ($_fail) { goto L1829; }
        L1826: $_stack[$_stack_sp] .= $_value;
        L1827: $_stack[$_stack_sp - 1] = $_p;
        L1828: goto L1813;
        L1829: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1830: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1831: $_fail = false;
        L1832: $_env["text"] = $_value;
        L1833: if ($_fail) { goto L1841; }
        L1834: $_fail = TRUE; if (($_a = substr($_s, $_p, 9)) === "{/literal") { $_fail = FALSE; $_value = $_a; $_p += 9; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{/literal"', $_expected)) { $_expected[] = '"{/literal"'; } } }
        L1835: if ($_fail) { goto L1841; }
        L1836: $_stack[++$_stack_sp] = 1838;
        L1837: goto L5382;
        L1838: if ($_fail) { goto L1841; }
        L1839: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1840: if ($_fail) { goto L1841; }
        L1841: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1842: if ($_fail) { goto L1844; }
        L1843: $_value = $this->_40($_env);
        L1844: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1845: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1846: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1847: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1848: $_b = array();
        L1849: $_b[0] = $_fail;
        L1850: $_b[1] = $_value;
        L1851: $_b[2] = $_p;
        L1852: $_cache[$_a] = $_b;
        L1853: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1854: if ($_a !== 346) return array(FALSE, NULL, 17); goto L346;
        L1855: $_stack[++$_stack_sp] = "18@";
        L1856: $_stack[$_stack_sp] .= $_p;
        L1857: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1864; }
        L1858: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1859: $_b = $_cache[$_a];
        L1860: $_fail = $_b[0];
        L1861: $_value = $_b[1];
        L1862: $_p = $_b[2];
        L1863: goto L2016;
        L1864: $_stack[++$_stack_sp] = $_env;
        L1865: $_env = array();
        L1866: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1867: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1868: $_stack[++$_stack_sp] = $_b;
        L1869: $_stack[++$_stack_sp] = NULL;
        L1870: $_fail = TRUE; if (($_a = substr($_s, $_p, 8)) === "{capture") { $_fail = FALSE; $_value = $_a; $_p += 8; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{capture"', $_expected)) { $_expected[] = '"{capture"'; } } }
        L1871: if ($_fail) { goto L2004; }
        L1872: $_stack[$_stack_sp] = $_value;
        L1873: $_stack[++$_stack_sp] = 1875;
        L1874: goto L5382;
        L1875: if ($_fail) { goto L2004; }
        L1876: $_stack[++$_stack_sp] = $_p;
        L1877: $_stack[++$_stack_sp] = NULL;
        L1878: $_stack[++$_stack_sp] = $_p;
        L1879: $_stack[++$_stack_sp] = 1881;
        L1880: goto L5343;
        L1881: if (!$_fail) { goto L1885; }
        L1882: $_p = $_stack[$_stack_sp];
        L1883: $_stack[++$_stack_sp] = 1885;
        L1884: goto L5115;
        L1885: unset($_stack[$_stack_sp--]);
        L1886: if ($_fail) { goto L1894; }
        L1887: $_stack[$_stack_sp] = $_value;
        L1888: $_stack[++$_stack_sp] = $_p;
        L1889: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L1890: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1891: $_value = NULL;
        L1892: $_fail = !$_fail;
        L1893: if ($_fail) { goto L1894; }
        L1894: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1895: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1896: if (!$_fail) { goto L1900; }
        L1897: $_fail = false;
        L1898: $_value = NULL;
        L1899: $_p = $_a;
        L1900: $_env["name"] = $_value;
        L1901: if ($_fail) { goto L2004; }
        L1902: $_stack[++$_stack_sp] = 1904;
        L1903: goto L5382;
        L1904: if ($_fail) { goto L2004; }
        L1905: $_stack[++$_stack_sp] = $_p;
        L1906: $_stack[++$_stack_sp] = array();
        L1907: $_stack[++$_stack_sp] = $_p;
        L1908: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1909: $_stack[++$_stack_sp] = $_b;
        L1910: $_stack[++$_stack_sp] = NULL;
        L1911: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "name=") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"name="', $_expected)) { $_expected[] = '"name="'; } } }
        L1912: if ($_fail) { goto L1927; }
        L1913: $_stack[$_stack_sp] = $_value;
        L1914: $_stack[++$_stack_sp] = $_p;
        L1915: $_stack[++$_stack_sp] = 1917;
        L1916: goto L5343;
        L1917: if (!$_fail) { goto L1921; }
        L1918: $_p = $_stack[$_stack_sp];
        L1919: $_stack[++$_stack_sp] = 1921;
        L1920: goto L5115;
        L1921: unset($_stack[$_stack_sp--]);
        L1922: $_env["v"] = $_value;
        L1923: if ($_fail) { goto L1927; }
        L1924: $_stack[++$_stack_sp] = 1926;
        L1925: goto L5382;
        L1926: if ($_fail) { goto L1927; }
        L1927: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1928: if ($_fail) { goto L1930; }
        L1929: $_value = $this->_42($_env);
        L1930: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1931: if (!$_fail) { goto L1981; }
        L1932: $_p = $_stack[$_stack_sp];
        L1933: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1934: $_stack[++$_stack_sp] = $_b;
        L1935: $_stack[++$_stack_sp] = NULL;
        L1936: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "assign=") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"assign="', $_expected)) { $_expected[] = '"assign="'; } } }
        L1937: if ($_fail) { goto L1952; }
        L1938: $_stack[$_stack_sp] = $_value;
        L1939: $_stack[++$_stack_sp] = $_p;
        L1940: $_stack[++$_stack_sp] = 1942;
        L1941: goto L5343;
        L1942: if (!$_fail) { goto L1946; }
        L1943: $_p = $_stack[$_stack_sp];
        L1944: $_stack[++$_stack_sp] = 1946;
        L1945: goto L5115;
        L1946: unset($_stack[$_stack_sp--]);
        L1947: $_env["v"] = $_value;
        L1948: if ($_fail) { goto L1952; }
        L1949: $_stack[++$_stack_sp] = 1951;
        L1950: goto L5382;
        L1951: if ($_fail) { goto L1952; }
        L1952: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1953: if ($_fail) { goto L1955; }
        L1954: $_value = $this->_43($_env);
        L1955: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1956: if (!$_fail) { goto L1981; }
        L1957: $_p = $_stack[$_stack_sp];
        L1958: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1959: $_stack[++$_stack_sp] = $_b;
        L1960: $_stack[++$_stack_sp] = NULL;
        L1961: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "append=") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"append="', $_expected)) { $_expected[] = '"append="'; } } }
        L1962: if ($_fail) { goto L1977; }
        L1963: $_stack[$_stack_sp] = $_value;
        L1964: $_stack[++$_stack_sp] = $_p;
        L1965: $_stack[++$_stack_sp] = 1967;
        L1966: goto L5343;
        L1967: if (!$_fail) { goto L1971; }
        L1968: $_p = $_stack[$_stack_sp];
        L1969: $_stack[++$_stack_sp] = 1971;
        L1970: goto L5115;
        L1971: unset($_stack[$_stack_sp--]);
        L1972: $_env["v"] = $_value;
        L1973: if ($_fail) { goto L1977; }
        L1974: $_stack[++$_stack_sp] = 1976;
        L1975: goto L5382;
        L1976: if ($_fail) { goto L1977; }
        L1977: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1978: if ($_fail) { goto L1980; }
        L1979: $_value = $this->_44($_env);
        L1980: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1981: unset($_stack[$_stack_sp--]);
        L1982: if ($_fail) { goto L1986; }
        L1983: $_stack[$_stack_sp][] = $_value;
        L1984: $_stack[$_stack_sp - 1] = $_p;
        L1985: goto L1907;
        L1986: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1987: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1988: $_fail = false;
        L1989: $_env["args"] = $_value;
        L1990: if ($_fail) { goto L2004; }
        L1991: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1992: if ($_fail) { goto L2004; }
        L1993: $_stack[++$_stack_sp] = 1995;
        L1994: goto L90;
        L1995: $_env["body"] = $_value;
        L1996: if ($_fail) { goto L2004; }
        L1997: $_fail = TRUE; if (($_a = substr($_s, $_p, 9)) === "{/capture") { $_fail = FALSE; $_value = $_a; $_p += 9; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{/capture"', $_expected)) { $_expected[] = '"{/capture"'; } } }
        L1998: if ($_fail) { goto L2004; }
        L1999: $_stack[++$_stack_sp] = 2001;
        L2000: goto L5382;
        L2001: if ($_fail) { goto L2004; }
        L2002: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L2003: if ($_fail) { goto L2004; }
        L2004: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2005: if ($_fail) { goto L2007; }
        L2006: $_value = $this->_41($_env);
        L2007: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2008: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L2009: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2010: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2011: $_b = array();
        L2012: $_b[0] = $_fail;
        L2013: $_b[1] = $_value;
        L2014: $_b[2] = $_p;
        L2015: $_cache[$_a] = $_b;
        L2016: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2017: if ($_a !== 322) return array(FALSE, NULL, 18); goto L322;
        L2018: $_stack[++$_stack_sp] = "19@";
        L2019: $_stack[$_stack_sp] .= $_p;
        L2020: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L2027; }
        L2021: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2022: $_b = $_cache[$_a];
        L2023: $_fail = $_b[0];
        L2024: $_value = $_b[1];
        L2025: $_p = $_b[2];
        L2026: goto L2064;
        L2027: $_stack[++$_stack_sp] = $_env;
        L2028: $_env = array();
        L2029: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L2030: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2031: $_stack[++$_stack_sp] = $_b;
        L2032: $_stack[++$_stack_sp] = NULL;
        L2033: $_fail = TRUE; if (($_a = substr($_s, $_p, 6)) === "{strip") { $_fail = FALSE; $_value = $_a; $_p += 6; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{strip"', $_expected)) { $_expected[] = '"{strip"'; } } }
        L2034: if ($_fail) { goto L2052; }
        L2035: $_stack[$_stack_sp] = $_value;
        L2036: $_stack[++$_stack_sp] = 2038;
        L2037: goto L5382;
        L2038: if ($_fail) { goto L2052; }
        L2039: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L2040: if ($_fail) { goto L2052; }
        L2041: $_stack[++$_stack_sp] = 2043;
        L2042: goto L90;
        L2043: $_env["body"] = $_value;
        L2044: if ($_fail) { goto L2052; }
        L2045: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "{/strip") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{/strip"', $_expected)) { $_expected[] = '"{/strip"'; } } }
        L2046: if ($_fail) { goto L2052; }
        L2047: $_stack[++$_stack_sp] = 2049;
        L2048: goto L5382;
        L2049: if ($_fail) { goto L2052; }
        L2050: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L2051: if ($_fail) { goto L2052; }
        L2052: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2053: if ($_fail) { goto L2055; }
        L2054: $_value = $this->_45($_env);
        L2055: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2056: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L2057: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2058: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2059: $_b = array();
        L2060: $_b[0] = $_fail;
        L2061: $_b[1] = $_value;
        L2062: $_b[2] = $_p;
        L2063: $_cache[$_a] = $_b;
        L2064: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2065: if ($_a !== 350) return array(FALSE, NULL, 19); goto L350;
        L2066: $_stack[++$_stack_sp] = "20@";
        L2067: $_stack[$_stack_sp] .= $_p;
        L2068: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L2075; }
        L2069: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2070: $_b = $_cache[$_a];
        L2071: $_fail = $_b[0];
        L2072: $_value = $_b[1];
        L2073: $_p = $_b[2];
        L2074: goto L2302;
        L2075: $_stack[++$_stack_sp] = $_env;
        L2076: $_env = array();
        L2077: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L2078: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2079: $_stack[++$_stack_sp] = $_b;
        L2080: $_stack[++$_stack_sp] = NULL;
        L2081: $_a = str_replace(array("\r\n", "\r"), "\n", (string) substr($_s, 0, $_p)); $_b = 1; if (($_c = strrpos($_a, "\n")) !== FALSE) { $_b = substr_count($_a, "\n") + 1; $_a = (string) substr($_a, $_c + 1); } $_fail = FALSE; $_value = array($_b, strlen($_a) + 1);
        L2082: $_env["p"] = $_value;
        L2083: if ($_fail) { goto L2290; }
        L2084: $_stack[$_stack_sp] = $_value;
        L2085: $_fail = TRUE; if (($_a = substr($_s, $_p, 8)) === "{include") { $_fail = FALSE; $_value = $_a; $_p += 8; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{include"', $_expected)) { $_expected[] = '"{include"'; } } }
        L2086: if ($_fail) { goto L2290; }
        L2087: $_stack[++$_stack_sp] = 2089;
        L2088: goto L5382;
        L2089: if ($_fail) { goto L2290; }
        L2090: $_stack[++$_stack_sp] = $_p;
        L2091: $_stack[++$_stack_sp] = $_p;
        L2092: $_stack[++$_stack_sp] = 2094;
        L2093: goto L5115;
        L2094: if (!$_fail) { goto L2121; }
        L2095: $_p = $_stack[$_stack_sp];
        L2096: $_stack[++$_stack_sp] = "";
        L2097: $_stack[++$_stack_sp] = $_p;
        L2098: $_stack[++$_stack_sp] = "";
        L2099: $_stack[++$_stack_sp] = true;
        L2100: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((65 <= $_a && $_a <= 90) || (97 <= $_a && $_a <= 122) || (48 <= $_a && $_a <= 57) || ($_a === 46) || ($_a === 95) || ($_a === 47) || ($_a === 45))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[A-Za-z0-9._/-]', $_expected)) { $_expected[] = '[A-Za-z0-9._/-]'; } } }
        L2101: if ($_fail) { goto L2106; }
        L2102: $_stack[$_stack_sp] = false;
        L2103: $_stack[$_stack_sp - 1] .= $_value;
        L2104: $_stack[$_stack_sp - 2] = $_p;
        L2105: goto L2100;
        L2106: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2107: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2108: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2109: if ($_a) { goto L2111; }
        L2110: $_fail = false;
        L2111: if ($_fail) { goto L2120; }
        L2112: $_stack[$_stack_sp] .= $_value;
        L2113: $_stack[++$_stack_sp] = $_p;
        L2114: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L2115: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2116: $_value = NULL;
        L2117: $_fail = !$_fail;
        L2118: if ($_fail) { goto L2120; }
        L2119: $_stack[$_stack_sp] .= $_value;
        L2120: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2121: unset($_stack[$_stack_sp--]);
        L2122: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2123: if (!$_fail) { goto L2127; }
        L2124: $_fail = false;
        L2125: $_value = NULL;
        L2126: $_p = $_a;
        L2127: $_env["file"] = $_value;
        L2128: if ($_fail) { goto L2290; }
        L2129: $_stack[++$_stack_sp] = 2131;
        L2130: goto L5382;
        L2131: if ($_fail) { goto L2290; }
        L2132: $_stack[++$_stack_sp] = $_p;
        L2133: $_stack[++$_stack_sp] = array();
        L2134: $_stack[++$_stack_sp] = $_p;
        L2135: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2136: $_stack[++$_stack_sp] = $_b;
        L2137: $_stack[++$_stack_sp] = NULL;
        L2138: $_fail = TRUE; if (($_a = substr($_s, $_p, 6)) === "inline") { $_fail = FALSE; $_value = $_a; $_p += 6; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"inline"', $_expected)) { $_expected[] = '"inline"'; } } }
        L2139: if ($_fail) { goto L2144; }
        L2140: $_stack[$_stack_sp] = $_value;
        L2141: $_stack[++$_stack_sp] = 2143;
        L2142: goto L5382;
        L2143: if ($_fail) { goto L2144; }
        L2144: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2145: if ($_fail) { goto L2147; }
        L2146: $_value = $this->_47($_env);
        L2147: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2148: if (!$_fail) { goto L2275; }
        L2149: $_p = $_stack[$_stack_sp];
        L2150: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2151: $_stack[++$_stack_sp] = $_b;
        L2152: $_stack[++$_stack_sp] = NULL;
        L2153: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "file=") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"file="', $_expected)) { $_expected[] = '"file="'; } } }
        L2154: if ($_fail) { goto L2181; }
        L2155: $_stack[$_stack_sp] = $_value;
        L2156: $_stack[++$_stack_sp] = $_p;
        L2157: $_stack[++$_stack_sp] = 2159;
        L2158: goto L5115;
        L2159: if (!$_fail) { goto L2175; }
        L2160: $_p = $_stack[$_stack_sp];
        L2161: $_stack[++$_stack_sp] = $_p;
        L2162: $_stack[++$_stack_sp] = "";
        L2163: $_stack[++$_stack_sp] = true;
        L2164: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((65 <= $_a && $_a <= 90) || (97 <= $_a && $_a <= 122) || (48 <= $_a && $_a <= 57) || ($_a === 46) || ($_a === 95) || ($_a === 47) || ($_a === 45))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[A-Za-z0-9._/-]', $_expected)) { $_expected[] = '[A-Za-z0-9._/-]'; } } }
        L2165: if ($_fail) { goto L2170; }
        L2166: $_stack[$_stack_sp] = false;
        L2167: $_stack[$_stack_sp - 1] .= $_value;
        L2168: $_stack[$_stack_sp - 2] = $_p;
        L2169: goto L2164;
        L2170: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2171: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2172: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2173: if ($_a) { goto L2175; }
        L2174: $_fail = false;
        L2175: unset($_stack[$_stack_sp--]);
        L2176: $_env["v"] = $_value;
        L2177: if ($_fail) { goto L2181; }
        L2178: $_stack[++$_stack_sp] = 2180;
        L2179: goto L5382;
        L2180: if ($_fail) { goto L2181; }
        L2181: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2182: if ($_fail) { goto L2184; }
        L2183: $_value = $this->_48($_env);
        L2184: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2185: if (!$_fail) { goto L2275; }
        L2186: $_p = $_stack[$_stack_sp];
        L2187: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2188: $_stack[++$_stack_sp] = $_b;
        L2189: $_stack[++$_stack_sp] = NULL;
        L2190: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "assign=") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"assign="', $_expected)) { $_expected[] = '"assign="'; } } }
        L2191: if ($_fail) { goto L2206; }
        L2192: $_stack[$_stack_sp] = $_value;
        L2193: $_stack[++$_stack_sp] = $_p;
        L2194: $_stack[++$_stack_sp] = 2196;
        L2195: goto L5115;
        L2196: if (!$_fail) { goto L2200; }
        L2197: $_p = $_stack[$_stack_sp];
        L2198: $_stack[++$_stack_sp] = 2200;
        L2199: goto L5343;
        L2200: unset($_stack[$_stack_sp--]);
        L2201: $_env["v"] = $_value;
        L2202: if ($_fail) { goto L2206; }
        L2203: $_stack[++$_stack_sp] = 2205;
        L2204: goto L5382;
        L2205: if ($_fail) { goto L2206; }
        L2206: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2207: if ($_fail) { goto L2209; }
        L2208: $_value = $this->_49($_env);
        L2209: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2210: if (!$_fail) { goto L2275; }
        L2211: $_p = $_stack[$_stack_sp];
        L2212: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2213: $_stack[++$_stack_sp] = $_b;
        L2214: $_stack[++$_stack_sp] = NULL;
        L2215: $_fail = TRUE; if (($_a = substr($_s, $_p, 6)) === "scope=") { $_fail = FALSE; $_value = $_a; $_p += 6; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"scope="', $_expected)) { $_expected[] = '"scope="'; } } }
        L2216: if ($_fail) { goto L2231; }
        L2217: $_stack[$_stack_sp] = $_value;
        L2218: $_stack[++$_stack_sp] = $_p;
        L2219: $_stack[++$_stack_sp] = 2221;
        L2220: goto L5115;
        L2221: if (!$_fail) { goto L2225; }
        L2222: $_p = $_stack[$_stack_sp];
        L2223: $_stack[++$_stack_sp] = 2225;
        L2224: goto L5343;
        L2225: unset($_stack[$_stack_sp--]);
        L2226: $_env["v"] = $_value;
        L2227: if ($_fail) { goto L2231; }
        L2228: $_stack[++$_stack_sp] = 2230;
        L2229: goto L5382;
        L2230: if ($_fail) { goto L2231; }
        L2231: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2232: if ($_fail) { goto L2234; }
        L2233: $_value = $this->_50($_env);
        L2234: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2235: if (!$_fail) { goto L2275; }
        L2236: $_p = $_stack[$_stack_sp];
        L2237: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2238: $_stack[++$_stack_sp] = $_b;
        L2239: $_stack[++$_stack_sp] = NULL;
        L2240: $_stack[++$_stack_sp] = 2242;
        L2241: goto L5343;
        L2242: $_env["k"] = $_value;
        L2243: if ($_fail) { goto L2271; }
        L2244: $_stack[$_stack_sp] = $_value;
        L2245: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L2246: if ($_fail) { goto L2271; }
        L2247: $_stack[++$_stack_sp] = NULL;
        L2248: $_stack[++$_stack_sp] = $_p;
        L2249: $_stack[++$_stack_sp] = NULL;
        L2250: $_stack[++$_stack_sp] = 2252;
        L2251: goto L5343;
        L2252: if ($_fail) { goto L2256; }
        L2253: $_stack[$_stack_sp] = $_value;
        L2254: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L2255: if ($_fail) { goto L2256; }
        L2256: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2257: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2258: $_value = NULL;
        L2259: $_fail = !$_fail;
        L2260: if ($_fail) { goto L2265; }
        L2261: $_stack[++$_stack_sp] = 2263;
        L2262: goto L2724;
        L2263: if ($_fail) { goto L2265; }
        L2264: $_stack[$_stack_sp] = $_value;
        L2265: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2266: $_env["v"] = $_value;
        L2267: if ($_fail) { goto L2271; }
        L2268: $_stack[++$_stack_sp] = 2270;
        L2269: goto L5382;
        L2270: if ($_fail) { goto L2271; }
        L2271: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2272: if ($_fail) { goto L2274; }
        L2273: $_value = $this->_51($_env);
        L2274: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2275: unset($_stack[$_stack_sp--]);
        L2276: if ($_fail) { goto L2280; }
        L2277: $_stack[$_stack_sp][] = $_value;
        L2278: $_stack[$_stack_sp - 1] = $_p;
        L2279: goto L2134;
        L2280: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2281: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2282: $_fail = false;
        L2283: $_env["args"] = $_value;
        L2284: if ($_fail) { goto L2290; }
        L2285: $_stack[++$_stack_sp] = 2287;
        L2286: goto L5382;
        L2287: if ($_fail) { goto L2290; }
        L2288: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L2289: if ($_fail) { goto L2290; }
        L2290: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2291: if ($_fail) { goto L2293; }
        L2292: $_value = $this->_46($_env);
        L2293: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2294: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L2295: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2296: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2297: $_b = array();
        L2298: $_b[0] = $_fail;
        L2299: $_b[1] = $_value;
        L2300: $_b[2] = $_p;
        L2301: $_cache[$_a] = $_b;
        L2302: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2303: if ($_a !== 310) return array(FALSE, NULL, 20); goto L310;
        L2304: $_stack[++$_stack_sp] = "21@";
        L2305: $_stack[$_stack_sp] .= $_p;
        L2306: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L2313; }
        L2307: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2308: $_b = $_cache[$_a];
        L2309: $_fail = $_b[0];
        L2310: $_value = $_b[1];
        L2311: $_p = $_b[2];
        L2312: goto L2482;
        L2313: $_stack[++$_stack_sp] = $_env;
        L2314: $_env = array();
        L2315: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L2316: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2317: $_stack[++$_stack_sp] = $_b;
        L2318: $_stack[++$_stack_sp] = NULL;
        L2319: $_a = str_replace(array("\r\n", "\r"), "\n", (string) substr($_s, 0, $_p)); $_b = 1; if (($_c = strrpos($_a, "\n")) !== FALSE) { $_b = substr_count($_a, "\n") + 1; $_a = (string) substr($_a, $_c + 1); } $_fail = FALSE; $_value = array($_b, strlen($_a) + 1);
        L2320: $_env["p"] = $_value;
        L2321: if ($_fail) { goto L2470; }
        L2322: $_stack[$_stack_sp] = $_value;
        L2323: $_fail = TRUE; if (($_a = substr($_s, $_p, 6)) === "{block") { $_fail = FALSE; $_value = $_a; $_p += 6; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{block"', $_expected)) { $_expected[] = '"{block"'; } } }
        L2324: if ($_fail) { goto L2470; }
        L2325: $_stack[++$_stack_sp] = 2327;
        L2326: goto L5382;
        L2327: if ($_fail) { goto L2470; }
        L2328: $_stack[++$_stack_sp] = $_p;
        L2329: $_stack[++$_stack_sp] = $_p;
        L2330: $_stack[++$_stack_sp] = 2332;
        L2331: goto L5115;
        L2332: if (!$_fail) { goto L2359; }
        L2333: $_p = $_stack[$_stack_sp];
        L2334: $_stack[++$_stack_sp] = "";
        L2335: $_stack[++$_stack_sp] = $_p;
        L2336: $_stack[++$_stack_sp] = "";
        L2337: $_stack[++$_stack_sp] = true;
        L2338: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((65 <= $_a && $_a <= 90) || (97 <= $_a && $_a <= 122) || (48 <= $_a && $_a <= 57) || ($_a === 46) || ($_a === 95) || ($_a === 47) || ($_a === 45))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[A-Za-z0-9._/-]', $_expected)) { $_expected[] = '[A-Za-z0-9._/-]'; } } }
        L2339: if ($_fail) { goto L2344; }
        L2340: $_stack[$_stack_sp] = false;
        L2341: $_stack[$_stack_sp - 1] .= $_value;
        L2342: $_stack[$_stack_sp - 2] = $_p;
        L2343: goto L2338;
        L2344: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2345: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2346: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2347: if ($_a) { goto L2349; }
        L2348: $_fail = false;
        L2349: if ($_fail) { goto L2358; }
        L2350: $_stack[$_stack_sp] .= $_value;
        L2351: $_stack[++$_stack_sp] = $_p;
        L2352: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L2353: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2354: $_value = NULL;
        L2355: $_fail = !$_fail;
        L2356: if ($_fail) { goto L2358; }
        L2357: $_stack[$_stack_sp] .= $_value;
        L2358: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2359: unset($_stack[$_stack_sp--]);
        L2360: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2361: if (!$_fail) { goto L2365; }
        L2362: $_fail = false;
        L2363: $_value = NULL;
        L2364: $_p = $_a;
        L2365: $_env["name"] = $_value;
        L2366: if ($_fail) { goto L2470; }
        L2367: $_stack[++$_stack_sp] = 2369;
        L2368: goto L5382;
        L2369: if ($_fail) { goto L2470; }
        L2370: $_stack[++$_stack_sp] = $_p;
        L2371: $_stack[++$_stack_sp] = array();
        L2372: $_stack[++$_stack_sp] = $_p;
        L2373: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2374: $_stack[++$_stack_sp] = $_b;
        L2375: $_stack[++$_stack_sp] = NULL;
        L2376: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "name=") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"name="', $_expected)) { $_expected[] = '"name="'; } } }
        L2377: if ($_fail) { goto L2404; }
        L2378: $_stack[$_stack_sp] = $_value;
        L2379: $_stack[++$_stack_sp] = $_p;
        L2380: $_stack[++$_stack_sp] = 2382;
        L2381: goto L5115;
        L2382: if (!$_fail) { goto L2398; }
        L2383: $_p = $_stack[$_stack_sp];
        L2384: $_stack[++$_stack_sp] = $_p;
        L2385: $_stack[++$_stack_sp] = "";
        L2386: $_stack[++$_stack_sp] = true;
        L2387: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((65 <= $_a && $_a <= 90) || (97 <= $_a && $_a <= 122) || (48 <= $_a && $_a <= 57) || ($_a === 46) || ($_a === 95) || ($_a === 47) || ($_a === 45))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[A-Za-z0-9._/-]', $_expected)) { $_expected[] = '[A-Za-z0-9._/-]'; } } }
        L2388: if ($_fail) { goto L2393; }
        L2389: $_stack[$_stack_sp] = false;
        L2390: $_stack[$_stack_sp - 1] .= $_value;
        L2391: $_stack[$_stack_sp - 2] = $_p;
        L2392: goto L2387;
        L2393: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2394: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2395: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2396: if ($_a) { goto L2398; }
        L2397: $_fail = false;
        L2398: unset($_stack[$_stack_sp--]);
        L2399: $_env["v"] = $_value;
        L2400: if ($_fail) { goto L2404; }
        L2401: $_stack[++$_stack_sp] = 2403;
        L2402: goto L5382;
        L2403: if ($_fail) { goto L2404; }
        L2404: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2405: if ($_fail) { goto L2407; }
        L2406: $_value = $this->_53($_env);
        L2407: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2408: if (!$_fail) { goto L2438; }
        L2409: $_p = $_stack[$_stack_sp];
        L2410: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2411: $_stack[++$_stack_sp] = $_b;
        L2412: $_stack[++$_stack_sp] = NULL;
        L2413: $_fail = TRUE; if (($_a = substr($_s, $_p, 6)) === "append") { $_fail = FALSE; $_value = $_a; $_p += 6; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"append"', $_expected)) { $_expected[] = '"append"'; } } }
        L2414: if ($_fail) { goto L2419; }
        L2415: $_stack[$_stack_sp] = $_value;
        L2416: $_stack[++$_stack_sp] = 2418;
        L2417: goto L5382;
        L2418: if ($_fail) { goto L2419; }
        L2419: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2420: if ($_fail) { goto L2422; }
        L2421: $_value = $this->_54($_env);
        L2422: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2423: if (!$_fail) { goto L2438; }
        L2424: $_p = $_stack[$_stack_sp];
        L2425: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2426: $_stack[++$_stack_sp] = $_b;
        L2427: $_stack[++$_stack_sp] = NULL;
        L2428: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "prepend") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"prepend"', $_expected)) { $_expected[] = '"prepend"'; } } }
        L2429: if ($_fail) { goto L2434; }
        L2430: $_stack[$_stack_sp] = $_value;
        L2431: $_stack[++$_stack_sp] = 2433;
        L2432: goto L5382;
        L2433: if ($_fail) { goto L2434; }
        L2434: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2435: if ($_fail) { goto L2437; }
        L2436: $_value = $this->_55($_env);
        L2437: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2438: unset($_stack[$_stack_sp--]);
        L2439: if ($_fail) { goto L2443; }
        L2440: $_stack[$_stack_sp][] = $_value;
        L2441: $_stack[$_stack_sp - 1] = $_p;
        L2442: goto L2372;
        L2443: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2444: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2445: $_fail = false;
        L2446: $_env["args"] = $_value;
        L2447: if ($_fail) { goto L2470; }
        L2448: $_stack[++$_stack_sp] = 2450;
        L2449: goto L5382;
        L2450: if ($_fail) { goto L2470; }
        L2451: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L2452: if ($_fail) { goto L2470; }
        L2453: $_stack[++$_stack_sp] = $_p;
        L2454: $_stack[++$_stack_sp] = 2456;
        L2455: goto L90;
        L2456: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2457: if (!$_fail) { goto L2461; }
        L2458: $_fail = false;
        L2459: $_value = NULL;
        L2460: $_p = $_a;
        L2461: $_env["body"] = $_value;
        L2462: if ($_fail) { goto L2470; }
        L2463: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "{/block") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{/block"', $_expected)) { $_expected[] = '"{/block"'; } } }
        L2464: if ($_fail) { goto L2470; }
        L2465: $_stack[++$_stack_sp] = 2467;
        L2466: goto L5382;
        L2467: if ($_fail) { goto L2470; }
        L2468: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L2469: if ($_fail) { goto L2470; }
        L2470: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2471: if ($_fail) { goto L2473; }
        L2472: $_value = $this->_52($_env);
        L2473: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2474: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L2475: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2476: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2477: $_b = array();
        L2478: $_b[0] = $_fail;
        L2479: $_b[1] = $_value;
        L2480: $_b[2] = $_p;
        L2481: $_cache[$_a] = $_b;
        L2482: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2483: if ($_a !== 306) return array(FALSE, NULL, 21); goto L306;
        L2484: $_stack[++$_stack_sp] = "22@";
        L2485: $_stack[$_stack_sp] .= $_p;
        L2486: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L2493; }
        L2487: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2488: $_b = $_cache[$_a];
        L2489: $_fail = $_b[0];
        L2490: $_value = $_b[1];
        L2491: $_p = $_b[2];
        L2492: goto L2546;
        L2493: $_stack[++$_stack_sp] = $_env;
        L2494: $_env = array();
        L2495: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L2496: $_stack[++$_stack_sp] = $_p;
        L2497: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "include") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"include"', $_expected)) { $_expected[] = '"include"'; } } }
        L2498: if (!$_fail) { goto L2537; }
        L2499: $_p = $_stack[$_stack_sp];
        L2500: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "if") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"if"', $_expected)) { $_expected[] = '"if"'; } } }
        L2501: if (!$_fail) { goto L2537; }
        L2502: $_p = $_stack[$_stack_sp];
        L2503: $_fail = TRUE; if (($_a = substr($_s, $_p, 6)) === "elseif") { $_fail = FALSE; $_value = $_a; $_p += 6; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"elseif"', $_expected)) { $_expected[] = '"elseif"'; } } }
        L2504: if (!$_fail) { goto L2537; }
        L2505: $_p = $_stack[$_stack_sp];
        L2506: $_fail = TRUE; if (($_a = substr($_s, $_p, 4)) === "else") { $_fail = FALSE; $_value = $_a; $_p += 4; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"else"', $_expected)) { $_expected[] = '"else"'; } } }
        L2507: if (!$_fail) { goto L2537; }
        L2508: $_p = $_stack[$_stack_sp];
        L2509: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "foreach") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"foreach"', $_expected)) { $_expected[] = '"foreach"'; } } }
        L2510: if (!$_fail) { goto L2537; }
        L2511: $_p = $_stack[$_stack_sp];
        L2512: $_fail = TRUE; if (($_a = substr($_s, $_p, 11)) === "foreachelse") { $_fail = FALSE; $_value = $_a; $_p += 11; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"foreachelse"', $_expected)) { $_expected[] = '"foreachelse"'; } } }
        L2513: if (!$_fail) { goto L2537; }
        L2514: $_p = $_stack[$_stack_sp];
        L2515: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "capture") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"capture"', $_expected)) { $_expected[] = '"capture"'; } } }
        L2516: if (!$_fail) { goto L2537; }
        L2517: $_p = $_stack[$_stack_sp];
        L2518: $_fail = TRUE; if (($_a = substr($_s, $_p, 6)) === "ldelim") { $_fail = FALSE; $_value = $_a; $_p += 6; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"ldelim"', $_expected)) { $_expected[] = '"ldelim"'; } } }
        L2519: if (!$_fail) { goto L2537; }
        L2520: $_p = $_stack[$_stack_sp];
        L2521: $_fail = TRUE; if (($_a = substr($_s, $_p, 6)) === "rdelim") { $_fail = FALSE; $_value = $_a; $_p += 6; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"rdelim"', $_expected)) { $_expected[] = '"rdelim"'; } } }
        L2522: if (!$_fail) { goto L2537; }
        L2523: $_p = $_stack[$_stack_sp];
        L2524: $_fail = TRUE; if (($_a = substr($_s, $_p, 3)) === "php") { $_fail = FALSE; $_value = $_a; $_p += 3; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"php"', $_expected)) { $_expected[] = '"php"'; } } }
        L2525: if (!$_fail) { goto L2537; }
        L2526: $_p = $_stack[$_stack_sp];
        L2527: $_fail = TRUE; if (($_a = substr($_s, $_p, 3)) === "for") { $_fail = FALSE; $_value = $_a; $_p += 3; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"for"', $_expected)) { $_expected[] = '"for"'; } } }
        L2528: if (!$_fail) { goto L2537; }
        L2529: $_p = $_stack[$_stack_sp];
        L2530: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "forelse") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"forelse"', $_expected)) { $_expected[] = '"forelse"'; } } }
        L2531: if (!$_fail) { goto L2537; }
        L2532: $_p = $_stack[$_stack_sp];
        L2533: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "literal") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"literal"', $_expected)) { $_expected[] = '"literal"'; } } }
        L2534: if (!$_fail) { goto L2537; }
        L2535: $_p = $_stack[$_stack_sp];
        L2536: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "strip") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"strip"', $_expected)) { $_expected[] = '"strip"'; } } }
        L2537: unset($_stack[$_stack_sp--]);
        L2538: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L2539: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2540: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2541: $_b = array();
        L2542: $_b[0] = $_fail;
        L2543: $_b[1] = $_value;
        L2544: $_b[2] = $_p;
        L2545: $_cache[$_a] = $_b;
        L2546: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2547: if ($_a !== 2569) return array(FALSE, NULL, 22); goto L2569;
        L2548: $_stack[++$_stack_sp] = "23@";
        L2549: $_stack[$_stack_sp] .= $_p;
        L2550: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L2557; }
        L2551: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2552: $_b = $_cache[$_a];
        L2553: $_fail = $_b[0];
        L2554: $_value = $_b[1];
        L2555: $_p = $_b[2];
        L2556: goto L2722;
        L2557: $_stack[++$_stack_sp] = $_env;
        L2558: $_env = array();
        L2559: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L2560: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2561: $_stack[++$_stack_sp] = $_b;
        L2562: $_stack[++$_stack_sp] = NULL;
        L2563: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "{") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{"', $_expected)) { $_expected[] = '"{"'; } } }
        L2564: if ($_fail) { goto L2710; }
        L2565: $_stack[$_stack_sp] = $_value;
        L2566: $_stack[++$_stack_sp] = $_p;
        L2567: $_stack[++$_stack_sp] = 2569;
        L2568: goto L2484;
        L2569: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2570: $_value = NULL;
        L2571: $_fail = !$_fail;
        L2572: if ($_fail) { goto L2710; }
        L2573: $_a = str_replace(array("\r\n", "\r"), "\n", (string) substr($_s, 0, $_p)); $_b = 1; if (($_c = strrpos($_a, "\n")) !== FALSE) { $_b = substr_count($_a, "\n") + 1; $_a = (string) substr($_a, $_c + 1); } $_fail = FALSE; $_value = array($_b, strlen($_a) + 1);
        L2574: $_env["p"] = $_value;
        L2575: if ($_fail) { goto L2710; }
        L2576: $_stack[++$_stack_sp] = 2578;
        L2577: goto L5343;
        L2578: $_env["fname"] = $_value;
        L2579: if ($_fail) { goto L2710; }
        L2580: $_stack[++$_stack_sp] = 2582;
        L2581: goto L5382;
        L2582: if ($_fail) { goto L2710; }
        L2583: $_stack[++$_stack_sp] = $_p;
        L2584: $_stack[++$_stack_sp] = array();
        L2585: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2586: $_stack[++$_stack_sp] = $_b;
        L2587: $_stack[++$_stack_sp] = NULL;
        L2588: $_stack[++$_stack_sp] = 2590;
        L2589: goto L5343;
        L2590: $_env["k"] = $_value;
        L2591: if ($_fail) { goto L2695; }
        L2592: $_stack[$_stack_sp] = $_value;
        L2593: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L2594: if ($_fail) { goto L2695; }
        L2595: $_stack[++$_stack_sp] = NULL;
        L2596: $_stack[++$_stack_sp] = $_p;
        L2597: $_stack[++$_stack_sp] = NULL;
        L2598: $_stack[++$_stack_sp] = 2600;
        L2599: goto L5343;
        L2600: if ($_fail) { goto L2604; }
        L2601: $_stack[$_stack_sp] = $_value;
        L2602: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L2603: if ($_fail) { goto L2604; }
        L2604: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2605: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2606: $_value = NULL;
        L2607: $_fail = !$_fail;
        L2608: if ($_fail) { goto L2613; }
        L2609: $_stack[++$_stack_sp] = 2611;
        L2610: goto L2724;
        L2611: if ($_fail) { goto L2613; }
        L2612: $_stack[$_stack_sp] = $_value;
        L2613: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2614: $_env["v"] = $_value;
        L2615: if ($_fail) { goto L2695; }
        L2616: $_stack[++$_stack_sp] = 2618;
        L2617: goto L5382;
        L2618: if ($_fail) { goto L2695; }
        L2619: $_stack[++$_stack_sp] = $_p;
        L2620: $_stack[++$_stack_sp] = array();
        L2621: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2622: $_stack[++$_stack_sp] = $_b;
        L2623: $_stack[++$_stack_sp] = NULL;
        L2624: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "|") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"|"', $_expected)) { $_expected[] = '"|"'; } } }
        L2625: if ($_fail) { goto L2679; }
        L2626: $_stack[$_stack_sp] = $_value;
        L2627: $_stack[++$_stack_sp] = 2629;
        L2628: goto L5382;
        L2629: if ($_fail) { goto L2679; }
        L2630: $_a = str_replace(array("\r\n", "\r"), "\n", (string) substr($_s, 0, $_p)); $_b = 1; if (($_c = strrpos($_a, "\n")) !== FALSE) { $_b = substr_count($_a, "\n") + 1; $_a = (string) substr($_a, $_c + 1); } $_fail = FALSE; $_value = array($_b, strlen($_a) + 1);
        L2631: $_env["p"] = $_value;
        L2632: if ($_fail) { goto L2679; }
        L2633: $_stack[++$_stack_sp] = $_p;
        L2634: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "@") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"@"', $_expected)) { $_expected[] = '"@"'; } } }
        L2635: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2636: if (!$_fail) { goto L2640; }
        L2637: $_fail = false;
        L2638: $_value = NULL;
        L2639: $_p = $_a;
        L2640: if ($_fail) { goto L2679; }
        L2641: $_stack[++$_stack_sp] = 2643;
        L2642: goto L5343;
        L2643: $_env["name"] = $_value;
        L2644: if ($_fail) { goto L2679; }
        L2645: $_stack[++$_stack_sp] = 2647;
        L2646: goto L5382;
        L2647: if ($_fail) { goto L2679; }
        L2648: $_stack[++$_stack_sp] = $_p;
        L2649: $_stack[++$_stack_sp] = array();
        L2650: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2651: $_stack[++$_stack_sp] = $_b;
        L2652: $_stack[++$_stack_sp] = NULL;
        L2653: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ":") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('":"', $_expected)) { $_expected[] = '":"'; } } }
        L2654: if ($_fail) { goto L2666; }
        L2655: $_stack[$_stack_sp] = $_value;
        L2656: $_stack[++$_stack_sp] = 2658;
        L2657: goto L5382;
        L2658: if ($_fail) { goto L2666; }
        L2659: $_stack[++$_stack_sp] = 2661;
        L2660: goto L2724;
        L2661: $_env["modExpr"] = $_value;
        L2662: if ($_fail) { goto L2666; }
        L2663: $_stack[++$_stack_sp] = 2665;
        L2664: goto L5382;
        L2665: if ($_fail) { goto L2666; }
        L2666: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2667: if ($_fail) { goto L2669; }
        L2668: $_value = $this->_59($_env);
        L2669: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2670: if ($_fail) { goto L2674; }
        L2671: $_stack[$_stack_sp][] = $_value;
        L2672: $_stack[$_stack_sp - 1] = $_p;
        L2673: goto L2650;
        L2674: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2675: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2676: $_fail = false;
        L2677: $_env["args"] = $_value;
        L2678: if ($_fail) { goto L2679; }
        L2679: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2680: if ($_fail) { goto L2682; }
        L2681: $_value = $this->_58($_env);
        L2682: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2683: if ($_fail) { goto L2687; }
        L2684: $_stack[$_stack_sp][] = $_value;
        L2685: $_stack[$_stack_sp - 1] = $_p;
        L2686: goto L2621;
        L2687: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2688: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2689: $_fail = false;
        L2690: $_env["modifiers"] = $_value;
        L2691: if ($_fail) { goto L2695; }
        L2692: $_stack[++$_stack_sp] = 2694;
        L2693: goto L5382;
        L2694: if ($_fail) { goto L2695; }
        L2695: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2696: if ($_fail) { goto L2698; }
        L2697: $_value = $this->_57($_env);
        L2698: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2699: if ($_fail) { goto L2703; }
        L2700: $_stack[$_stack_sp][] = $_value;
        L2701: $_stack[$_stack_sp - 1] = $_p;
        L2702: goto L2585;
        L2703: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2704: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2705: $_fail = false;
        L2706: $_env["args"] = $_value;
        L2707: if ($_fail) { goto L2710; }
        L2708: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L2709: if ($_fail) { goto L2710; }
        L2710: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2711: if ($_fail) { goto L2713; }
        L2712: $_value = $this->_56($_env);
        L2713: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2714: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L2715: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2716: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2717: $_b = array();
        L2718: $_b[0] = $_fail;
        L2719: $_b[1] = $_value;
        L2720: $_b[2] = $_p;
        L2721: $_cache[$_a] = $_b;
        L2722: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2723: if ($_a !== 362) return array(FALSE, NULL, 23); goto L362;
        L2724: $_stack[++$_stack_sp] = "24@";
        L2725: $_stack[$_stack_sp] .= $_p;
        L2726: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L2733; }
        L2727: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2728: $_b = $_cache[$_a];
        L2729: $_fail = $_b[0];
        L2730: $_value = $_b[1];
        L2731: $_p = $_b[2];
        L2732: goto L2746;
        L2733: $_stack[++$_stack_sp] = $_env;
        L2734: $_env = array();
        L2735: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L2736: $_stack[++$_stack_sp] = 2738;
        L2737: goto L2748;
        L2738: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L2739: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2740: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2741: $_b = array();
        L2742: $_b[0] = $_fail;
        L2743: $_b[1] = $_value;
        L2744: $_b[2] = $_p;
        L2745: $_cache[$_a] = $_b;
        L2746: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2747: if ($_a === 557) { goto L557; } else if ($_a === 604) { goto L604; } else if ($_a === 703) { goto L703; } else if ($_a === 779) { goto L779; } else if ($_a === 826) { goto L826; } else if ($_a === 979) { goto L979; } else if ($_a === 1003) { goto L1003; } else if ($_a === 1508) { goto L1508; } else if ($_a === 1520) { goto L1520; } else if ($_a === 1537) { goto L1537; } else if ($_a === 1685) { goto L1685; } else if ($_a === 1742) { goto L1742; } else if ($_a === 2263) { goto L2263; } else if ($_a === 2611) { goto L2611; } else if ($_a === 2661) { goto L2661; } else if ($_a === 3943) { goto L3943; } else if ($_a === 4044) { goto L4044; } else if ($_a === 4324) { goto L4324; } else if ($_a === 4769) { goto L4769; } else { return array(FALSE, NULL, 24); }
        L2748: $_stack[++$_stack_sp] = "25@";
        L2749: $_stack[$_stack_sp] .= $_p;
        L2750: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L2757; }
        L2751: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2752: $_b = $_cache[$_a];
        L2753: $_fail = $_b[0];
        L2754: $_value = $_b[1];
        L2755: $_p = $_b[2];
        L2756: goto L2838;
        L2757: $_stack[++$_stack_sp] = $_env;
        L2758: $_env = array();
        L2759: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L2760: $_stack[++$_stack_sp] = $_p;
        L2761: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2762: $_stack[++$_stack_sp] = $_b;
        L2763: $_stack[++$_stack_sp] = NULL;
        L2764: $_stack[++$_stack_sp] = 2766;
        L2765: goto L4547;
        L2766: $_env["lhs"] = $_value;
        L2767: if ($_fail) { goto L2783; }
        L2768: $_stack[$_stack_sp] = $_value;
        L2769: $_stack[++$_stack_sp] = 2771;
        L2770: goto L5382;
        L2771: if ($_fail) { goto L2783; }
        L2772: $_stack[++$_stack_sp] = 2774;
        L2773: goto L2840;
        L2774: $_env["op"] = $_value;
        L2775: if ($_fail) { goto L2783; }
        L2776: $_stack[++$_stack_sp] = 2778;
        L2777: goto L5382;
        L2778: if ($_fail) { goto L2783; }
        L2779: $_stack[++$_stack_sp] = 2781;
        L2780: goto L2748;
        L2781: $_env["rhs"] = $_value;
        L2782: if ($_fail) { goto L2783; }
        L2783: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2784: if ($_fail) { goto L2786; }
        L2785: $_value = $this->_60($_env);
        L2786: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2787: if (!$_fail) { goto L2829; }
        L2788: $_p = $_stack[$_stack_sp];
        L2789: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2790: $_stack[++$_stack_sp] = $_b;
        L2791: $_stack[++$_stack_sp] = NULL;
        L2792: $_stack[++$_stack_sp] = 2794;
        L2793: goto L2909;
        L2794: $_env["cond"] = $_value;
        L2795: if ($_fail) { goto L2821; }
        L2796: $_stack[$_stack_sp] = $_value;
        L2797: $_stack[++$_stack_sp] = 2799;
        L2798: goto L5382;
        L2799: if ($_fail) { goto L2821; }
        L2800: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "?") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"?"', $_expected)) { $_expected[] = '"?"'; } } }
        L2801: if ($_fail) { goto L2821; }
        L2802: $_stack[++$_stack_sp] = 2804;
        L2803: goto L5382;
        L2804: if ($_fail) { goto L2821; }
        L2805: $_stack[++$_stack_sp] = 2807;
        L2806: goto L2748;
        L2807: $_env["iftrue"] = $_value;
        L2808: if ($_fail) { goto L2821; }
        L2809: $_stack[++$_stack_sp] = 2811;
        L2810: goto L5382;
        L2811: if ($_fail) { goto L2821; }
        L2812: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ":") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('":"', $_expected)) { $_expected[] = '":"'; } } }
        L2813: if ($_fail) { goto L2821; }
        L2814: $_stack[++$_stack_sp] = 2816;
        L2815: goto L5382;
        L2816: if ($_fail) { goto L2821; }
        L2817: $_stack[++$_stack_sp] = 2819;
        L2818: goto L2748;
        L2819: $_env["iffalse"] = $_value;
        L2820: if ($_fail) { goto L2821; }
        L2821: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2822: if ($_fail) { goto L2824; }
        L2823: $_value = $this->_61($_env);
        L2824: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2825: if (!$_fail) { goto L2829; }
        L2826: $_p = $_stack[$_stack_sp];
        L2827: $_stack[++$_stack_sp] = 2829;
        L2828: goto L2909;
        L2829: unset($_stack[$_stack_sp--]);
        L2830: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L2831: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2832: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2833: $_b = array();
        L2834: $_b[0] = $_fail;
        L2835: $_b[1] = $_value;
        L2836: $_b[2] = $_p;
        L2837: $_cache[$_a] = $_b;
        L2838: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2839: if ($_a === 2738) { goto L2738; } else if ($_a === 2781) { goto L2781; } else if ($_a === 2807) { goto L2807; } else if ($_a === 2819) { goto L2819; } else if ($_a === 4483) { goto L4483; } else if ($_a === 4502) { goto L4502; } else { return array(FALSE, NULL, 25); }
        L2840: $_stack[++$_stack_sp] = "26@";
        L2841: $_stack[$_stack_sp] .= $_p;
        L2842: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L2849; }
        L2843: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2844: $_b = $_cache[$_a];
        L2845: $_fail = $_b[0];
        L2846: $_value = $_b[1];
        L2847: $_p = $_b[2];
        L2848: goto L2907;
        L2849: $_stack[++$_stack_sp] = $_env;
        L2850: $_env = array();
        L2851: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L2852: $_stack[++$_stack_sp] = $_p;
        L2853: $_stack[++$_stack_sp] = "";
        L2854: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L2855: if ($_fail) { goto L2864; }
        L2856: $_stack[$_stack_sp] .= $_value;
        L2857: $_stack[++$_stack_sp] = $_p;
        L2858: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L2859: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2860: $_value = NULL;
        L2861: $_fail = !$_fail;
        L2862: if ($_fail) { goto L2864; }
        L2863: $_stack[$_stack_sp] .= $_value;
        L2864: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2865: if (!$_fail) { goto L2898; }
        L2866: $_p = $_stack[$_stack_sp];
        L2867: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*=") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*="', $_expected)) { $_expected[] = '"*="'; } } }
        L2868: if (!$_fail) { goto L2898; }
        L2869: $_p = $_stack[$_stack_sp];
        L2870: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "/=") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"/="', $_expected)) { $_expected[] = '"/="'; } } }
        L2871: if (!$_fail) { goto L2898; }
        L2872: $_p = $_stack[$_stack_sp];
        L2873: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "%=") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"%="', $_expected)) { $_expected[] = '"%="'; } } }
        L2874: if (!$_fail) { goto L2898; }
        L2875: $_p = $_stack[$_stack_sp];
        L2876: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "+=") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"+="', $_expected)) { $_expected[] = '"+="'; } } }
        L2877: if (!$_fail) { goto L2898; }
        L2878: $_p = $_stack[$_stack_sp];
        L2879: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "-=") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-="', $_expected)) { $_expected[] = '"-="'; } } }
        L2880: if (!$_fail) { goto L2898; }
        L2881: $_p = $_stack[$_stack_sp];
        L2882: $_fail = TRUE; if (($_a = substr($_s, $_p, 3)) === "<<=") { $_fail = FALSE; $_value = $_a; $_p += 3; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"<<="', $_expected)) { $_expected[] = '"<<="'; } } }
        L2883: if (!$_fail) { goto L2898; }
        L2884: $_p = $_stack[$_stack_sp];
        L2885: $_fail = TRUE; if (($_a = substr($_s, $_p, 3)) === ">>=") { $_fail = FALSE; $_value = $_a; $_p += 3; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('">>="', $_expected)) { $_expected[] = '">>="'; } } }
        L2886: if (!$_fail) { goto L2898; }
        L2887: $_p = $_stack[$_stack_sp];
        L2888: $_fail = TRUE; if (($_a = substr($_s, $_p, 3)) === ">>=") { $_fail = FALSE; $_value = $_a; $_p += 3; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('">>="', $_expected)) { $_expected[] = '">>="'; } } }
        L2889: if (!$_fail) { goto L2898; }
        L2890: $_p = $_stack[$_stack_sp];
        L2891: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "&=") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"&="', $_expected)) { $_expected[] = '"&="'; } } }
        L2892: if (!$_fail) { goto L2898; }
        L2893: $_p = $_stack[$_stack_sp];
        L2894: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "^=") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"^="', $_expected)) { $_expected[] = '"^="'; } } }
        L2895: if (!$_fail) { goto L2898; }
        L2896: $_p = $_stack[$_stack_sp];
        L2897: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "|=") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"|="', $_expected)) { $_expected[] = '"|="'; } } }
        L2898: unset($_stack[$_stack_sp--]);
        L2899: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L2900: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2901: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2902: $_b = array();
        L2903: $_b[0] = $_fail;
        L2904: $_b[1] = $_value;
        L2905: $_b[2] = $_p;
        L2906: $_cache[$_a] = $_b;
        L2907: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2908: if ($_a !== 2774) return array(FALSE, NULL, 26); goto L2774;
        L2909: $_stack[++$_stack_sp] = "27@";
        L2910: $_stack[$_stack_sp] .= $_p;
        L2911: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L2918; }
        L2912: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2913: $_b = $_cache[$_a];
        L2914: $_fail = $_b[0];
        L2915: $_value = $_b[1];
        L2916: $_p = $_b[2];
        L2917: goto L3002;
        L2918: $_stack[++$_stack_sp] = $_env;
        L2919: $_env = array();
        L2920: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L2921: $_stack[++$_stack_sp] = $_env;
        L2922: $_env = array();
        L2923: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2924: $_stack[++$_stack_sp] = $_b;
        L2925: $_stack[++$_stack_sp] = NULL;
        L2926: $_stack[++$_stack_sp] = $_env;
        L2927: $_env = array();
        L2928: $_stack[++$_stack_sp] = 2930;
        L2929: goto L3004;
        L2930: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2931: $_env["left"] = $_value;
        L2932: if ($_fail) { goto L2989; }
        L2933: $_stack[$_stack_sp] = $_value;
        L2934: $_stack[++$_stack_sp] = $_p;
        L2935: $_stack[++$_stack_sp] = array();
        L2936: $_stack[++$_stack_sp] = NULL;
        L2937: $_stack[++$_stack_sp] = $_env;
        L2938: $_env = array();
        L2939: $_stack[++$_stack_sp] = 2941;
        L2940: goto L5382;
        L2941: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2942: if ($_fail) { goto L2980; }
        L2943: $_stack[$_stack_sp] = $_value;
        L2944: $_stack[++$_stack_sp] = $_env;
        L2945: $_env = array();
        L2946: $_stack[++$_stack_sp] = $_p;
        L2947: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "||") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"||"', $_expected)) { $_expected[] = '"||"'; } } }
        L2948: if (!$_fail) { goto L2958; }
        L2949: $_p = $_stack[$_stack_sp];
        L2950: $_stack[++$_stack_sp] = "";
        L2951: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 111) || ($_a === 79))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[oO]', $_expected)) { $_expected[] = '[oO]'; } } }
        L2952: if ($_fail) { goto L2957; }
        L2953: $_stack[$_stack_sp] .= $_value;
        L2954: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 114) || ($_a === 82))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[rR]', $_expected)) { $_expected[] = '[rR]'; } } }
        L2955: if ($_fail) { goto L2957; }
        L2956: $_stack[$_stack_sp] .= $_value;
        L2957: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2958: unset($_stack[$_stack_sp--]);
        L2959: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2960: $_env["op"] = $_value;
        L2961: if ($_fail) { goto L2980; }
        L2962: $_stack[++$_stack_sp] = $_env;
        L2963: $_env = array();
        L2964: $_stack[++$_stack_sp] = 2966;
        L2965: goto L5382;
        L2966: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2967: if ($_fail) { goto L2980; }
        L2968: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L2969: $_stack[++$_stack_sp] = $_b;
        L2970: $_stack[++$_stack_sp] = $_env;
        L2971: $_env = array();
        L2972: $_stack[++$_stack_sp] = 2974;
        L2973: goto L3004;
        L2974: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2975: $_env["right"] = $_value;
        L2976: if ($_fail) { goto L2978; }
        L2977: $_value = $this->_63($_env);
        L2978: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2979: if ($_fail) { goto L2980; }
        L2980: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2981: if ($_fail) { goto L2985; }
        L2982: $_stack[$_stack_sp][] = $_value;
        L2983: $_stack[$_stack_sp - 1] = $_p;
        L2984: goto L2936;
        L2985: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2986: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2987: $_fail = false;
        L2988: if ($_fail) { goto L2989; }
        L2989: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2990: if ($_fail) { goto L2992; }
        L2991: $_value = $this->_62($_env);
        L2992: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2993: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2994: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L2995: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2996: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L2997: $_b = array();
        L2998: $_b[0] = $_fail;
        L2999: $_b[1] = $_value;
        L3000: $_b[2] = $_p;
        L3001: $_cache[$_a] = $_b;
        L3002: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3003: if ($_a === 2794) { goto L2794; } else if ($_a === 2829) { goto L2829; } else { return array(FALSE, NULL, 27); }
        L3004: $_stack[++$_stack_sp] = "28@";
        L3005: $_stack[$_stack_sp] .= $_p;
        L3006: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L3013; }
        L3007: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3008: $_b = $_cache[$_a];
        L3009: $_fail = $_b[0];
        L3010: $_value = $_b[1];
        L3011: $_p = $_b[2];
        L3012: goto L3100;
        L3013: $_stack[++$_stack_sp] = $_env;
        L3014: $_env = array();
        L3015: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L3016: $_stack[++$_stack_sp] = $_env;
        L3017: $_env = array();
        L3018: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3019: $_stack[++$_stack_sp] = $_b;
        L3020: $_stack[++$_stack_sp] = NULL;
        L3021: $_stack[++$_stack_sp] = $_env;
        L3022: $_env = array();
        L3023: $_stack[++$_stack_sp] = 3025;
        L3024: goto L3102;
        L3025: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3026: $_env["left"] = $_value;
        L3027: if ($_fail) { goto L3087; }
        L3028: $_stack[$_stack_sp] = $_value;
        L3029: $_stack[++$_stack_sp] = $_p;
        L3030: $_stack[++$_stack_sp] = array();
        L3031: $_stack[++$_stack_sp] = NULL;
        L3032: $_stack[++$_stack_sp] = $_env;
        L3033: $_env = array();
        L3034: $_stack[++$_stack_sp] = 3036;
        L3035: goto L5382;
        L3036: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3037: if ($_fail) { goto L3078; }
        L3038: $_stack[$_stack_sp] = $_value;
        L3039: $_stack[++$_stack_sp] = $_env;
        L3040: $_env = array();
        L3041: $_stack[++$_stack_sp] = $_p;
        L3042: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "&&") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"&&"', $_expected)) { $_expected[] = '"&&"'; } } }
        L3043: if (!$_fail) { goto L3056; }
        L3044: $_p = $_stack[$_stack_sp];
        L3045: $_stack[++$_stack_sp] = "";
        L3046: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 97) || ($_a === 65))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[aA]', $_expected)) { $_expected[] = '[aA]'; } } }
        L3047: if ($_fail) { goto L3055; }
        L3048: $_stack[$_stack_sp] .= $_value;
        L3049: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 110) || ($_a === 78))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[nN]', $_expected)) { $_expected[] = '[nN]'; } } }
        L3050: if ($_fail) { goto L3055; }
        L3051: $_stack[$_stack_sp] .= $_value;
        L3052: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 100) || ($_a === 68))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[dD]', $_expected)) { $_expected[] = '[dD]'; } } }
        L3053: if ($_fail) { goto L3055; }
        L3054: $_stack[$_stack_sp] .= $_value;
        L3055: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3056: unset($_stack[$_stack_sp--]);
        L3057: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3058: $_env["op"] = $_value;
        L3059: if ($_fail) { goto L3078; }
        L3060: $_stack[++$_stack_sp] = $_env;
        L3061: $_env = array();
        L3062: $_stack[++$_stack_sp] = 3064;
        L3063: goto L5382;
        L3064: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3065: if ($_fail) { goto L3078; }
        L3066: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3067: $_stack[++$_stack_sp] = $_b;
        L3068: $_stack[++$_stack_sp] = $_env;
        L3069: $_env = array();
        L3070: $_stack[++$_stack_sp] = 3072;
        L3071: goto L3102;
        L3072: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3073: $_env["right"] = $_value;
        L3074: if ($_fail) { goto L3076; }
        L3075: $_value = $this->_65($_env);
        L3076: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3077: if ($_fail) { goto L3078; }
        L3078: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3079: if ($_fail) { goto L3083; }
        L3080: $_stack[$_stack_sp][] = $_value;
        L3081: $_stack[$_stack_sp - 1] = $_p;
        L3082: goto L3031;
        L3083: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3084: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3085: $_fail = false;
        L3086: if ($_fail) { goto L3087; }
        L3087: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3088: if ($_fail) { goto L3090; }
        L3089: $_value = $this->_64($_env);
        L3090: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3091: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3092: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L3093: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3094: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3095: $_b = array();
        L3096: $_b[0] = $_fail;
        L3097: $_b[1] = $_value;
        L3098: $_b[2] = $_p;
        L3099: $_cache[$_a] = $_b;
        L3100: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3101: if ($_a === 2930) { goto L2930; } else if ($_a === 2974) { goto L2974; } else { return array(FALSE, NULL, 28); }
        L3102: $_stack[++$_stack_sp] = "29@";
        L3103: $_stack[$_stack_sp] .= $_p;
        L3104: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L3111; }
        L3105: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3106: $_b = $_cache[$_a];
        L3107: $_fail = $_b[0];
        L3108: $_value = $_b[1];
        L3109: $_p = $_b[2];
        L3110: goto L3194;
        L3111: $_stack[++$_stack_sp] = $_env;
        L3112: $_env = array();
        L3113: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L3114: $_stack[++$_stack_sp] = $_env;
        L3115: $_env = array();
        L3116: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3117: $_stack[++$_stack_sp] = $_b;
        L3118: $_stack[++$_stack_sp] = NULL;
        L3119: $_stack[++$_stack_sp] = $_env;
        L3120: $_env = array();
        L3121: $_stack[++$_stack_sp] = 3123;
        L3122: goto L3196;
        L3123: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3124: $_env["left"] = $_value;
        L3125: if ($_fail) { goto L3181; }
        L3126: $_stack[$_stack_sp] = $_value;
        L3127: $_stack[++$_stack_sp] = $_p;
        L3128: $_stack[++$_stack_sp] = array();
        L3129: $_stack[++$_stack_sp] = NULL;
        L3130: $_stack[++$_stack_sp] = $_env;
        L3131: $_env = array();
        L3132: $_stack[++$_stack_sp] = 3134;
        L3133: goto L5382;
        L3134: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3135: if ($_fail) { goto L3172; }
        L3136: $_stack[$_stack_sp] = $_value;
        L3137: $_stack[++$_stack_sp] = $_env;
        L3138: $_env = array();
        L3139: $_stack[++$_stack_sp] = $_p;
        L3140: $_fail = TRUE; if (($_a = substr($_s, $_p, 3)) === "===") { $_fail = FALSE; $_value = $_a; $_p += 3; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"==="', $_expected)) { $_expected[] = '"==="'; } } }
        L3141: if (!$_fail) { goto L3150; }
        L3142: $_p = $_stack[$_stack_sp];
        L3143: $_fail = TRUE; if (($_a = substr($_s, $_p, 3)) === "!==") { $_fail = FALSE; $_value = $_a; $_p += 3; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"!=="', $_expected)) { $_expected[] = '"!=="'; } } }
        L3144: if (!$_fail) { goto L3150; }
        L3145: $_p = $_stack[$_stack_sp];
        L3146: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "==") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"=="', $_expected)) { $_expected[] = '"=="'; } } }
        L3147: if (!$_fail) { goto L3150; }
        L3148: $_p = $_stack[$_stack_sp];
        L3149: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "!=") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"!="', $_expected)) { $_expected[] = '"!="'; } } }
        L3150: unset($_stack[$_stack_sp--]);
        L3151: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3152: $_env["op"] = $_value;
        L3153: if ($_fail) { goto L3172; }
        L3154: $_stack[++$_stack_sp] = $_env;
        L3155: $_env = array();
        L3156: $_stack[++$_stack_sp] = 3158;
        L3157: goto L5382;
        L3158: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3159: if ($_fail) { goto L3172; }
        L3160: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3161: $_stack[++$_stack_sp] = $_b;
        L3162: $_stack[++$_stack_sp] = $_env;
        L3163: $_env = array();
        L3164: $_stack[++$_stack_sp] = 3166;
        L3165: goto L3196;
        L3166: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3167: $_env["right"] = $_value;
        L3168: if ($_fail) { goto L3170; }
        L3169: $_value = $this->_67($_env);
        L3170: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3171: if ($_fail) { goto L3172; }
        L3172: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3173: if ($_fail) { goto L3177; }
        L3174: $_stack[$_stack_sp][] = $_value;
        L3175: $_stack[$_stack_sp - 1] = $_p;
        L3176: goto L3129;
        L3177: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3178: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3179: $_fail = false;
        L3180: if ($_fail) { goto L3181; }
        L3181: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3182: if ($_fail) { goto L3184; }
        L3183: $_value = $this->_66($_env);
        L3184: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3185: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3186: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L3187: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3188: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3189: $_b = array();
        L3190: $_b[0] = $_fail;
        L3191: $_b[1] = $_value;
        L3192: $_b[2] = $_p;
        L3193: $_cache[$_a] = $_b;
        L3194: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3195: if ($_a === 3025) { goto L3025; } else if ($_a === 3072) { goto L3072; } else { return array(FALSE, NULL, 29); }
        L3196: $_stack[++$_stack_sp] = "30@";
        L3197: $_stack[$_stack_sp] .= $_p;
        L3198: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L3205; }
        L3199: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3200: $_b = $_cache[$_a];
        L3201: $_fail = $_b[0];
        L3202: $_value = $_b[1];
        L3203: $_p = $_b[2];
        L3204: goto L3334;
        L3205: $_stack[++$_stack_sp] = $_env;
        L3206: $_env = array();
        L3207: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L3208: $_stack[++$_stack_sp] = $_p;
        L3209: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3210: $_stack[++$_stack_sp] = $_b;
        L3211: $_stack[++$_stack_sp] = NULL;
        L3212: $_stack[++$_stack_sp] = 3214;
        L3213: goto L3336;
        L3214: $_env["expr"] = $_value;
        L3215: if ($_fail) { goto L3247; }
        L3216: $_stack[$_stack_sp] = $_value;
        L3217: $_stack[++$_stack_sp] = 3219;
        L3218: goto L5382;
        L3219: if ($_fail) { goto L3247; }
        L3220: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 105) || ($_a === 73))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[iI]', $_expected)) { $_expected[] = '[iI]'; } } }
        L3221: if ($_fail) { goto L3247; }
        L3222: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 110) || ($_a === 78))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[nN]', $_expected)) { $_expected[] = '[nN]'; } } }
        L3223: if ($_fail) { goto L3247; }
        L3224: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 115) || ($_a === 83))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[sS]', $_expected)) { $_expected[] = '[sS]'; } } }
        L3225: if ($_fail) { goto L3247; }
        L3226: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 116) || ($_a === 84))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[tT]', $_expected)) { $_expected[] = '[tT]'; } } }
        L3227: if ($_fail) { goto L3247; }
        L3228: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 97) || ($_a === 65))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[aA]', $_expected)) { $_expected[] = '[aA]'; } } }
        L3229: if ($_fail) { goto L3247; }
        L3230: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 110) || ($_a === 78))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[nN]', $_expected)) { $_expected[] = '[nN]'; } } }
        L3231: if ($_fail) { goto L3247; }
        L3232: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 99) || ($_a === 67))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[cC]', $_expected)) { $_expected[] = '[cC]'; } } }
        L3233: if ($_fail) { goto L3247; }
        L3234: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 101) || ($_a === 69))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[eE]', $_expected)) { $_expected[] = '[eE]'; } } }
        L3235: if ($_fail) { goto L3247; }
        L3236: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 111) || ($_a === 79))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[oO]', $_expected)) { $_expected[] = '[oO]'; } } }
        L3237: if ($_fail) { goto L3247; }
        L3238: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 102) || ($_a === 70))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[fF]', $_expected)) { $_expected[] = '[fF]'; } } }
        L3239: if ($_fail) { goto L3247; }
        L3240: $_stack[++$_stack_sp] = 3242;
        L3241: goto L5382;
        L3242: if ($_fail) { goto L3247; }
        L3243: $_stack[++$_stack_sp] = 3245;
        L3244: goto L5343;
        L3245: $_env["class"] = $_value;
        L3246: if ($_fail) { goto L3247; }
        L3247: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3248: if ($_fail) { goto L3250; }
        L3249: $_value = $this->_68($_env);
        L3250: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3251: if (!$_fail) { goto L3325; }
        L3252: $_p = $_stack[$_stack_sp];
        L3253: $_stack[++$_stack_sp] = $_env;
        L3254: $_env = array();
        L3255: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3256: $_stack[++$_stack_sp] = $_b;
        L3257: $_stack[++$_stack_sp] = NULL;
        L3258: $_stack[++$_stack_sp] = $_env;
        L3259: $_env = array();
        L3260: $_stack[++$_stack_sp] = 3262;
        L3261: goto L3336;
        L3262: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3263: $_env["left"] = $_value;
        L3264: if ($_fail) { goto L3320; }
        L3265: $_stack[$_stack_sp] = $_value;
        L3266: $_stack[++$_stack_sp] = $_p;
        L3267: $_stack[++$_stack_sp] = array();
        L3268: $_stack[++$_stack_sp] = NULL;
        L3269: $_stack[++$_stack_sp] = $_env;
        L3270: $_env = array();
        L3271: $_stack[++$_stack_sp] = 3273;
        L3272: goto L5382;
        L3273: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3274: if ($_fail) { goto L3311; }
        L3275: $_stack[$_stack_sp] = $_value;
        L3276: $_stack[++$_stack_sp] = $_env;
        L3277: $_env = array();
        L3278: $_stack[++$_stack_sp] = $_p;
        L3279: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "<=") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"<="', $_expected)) { $_expected[] = '"<="'; } } }
        L3280: if (!$_fail) { goto L3289; }
        L3281: $_p = $_stack[$_stack_sp];
        L3282: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === ">=") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('">="', $_expected)) { $_expected[] = '">="'; } } }
        L3283: if (!$_fail) { goto L3289; }
        L3284: $_p = $_stack[$_stack_sp];
        L3285: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "<") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"<"', $_expected)) { $_expected[] = '"<"'; } } }
        L3286: if (!$_fail) { goto L3289; }
        L3287: $_p = $_stack[$_stack_sp];
        L3288: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ">") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('">"', $_expected)) { $_expected[] = '">"'; } } }
        L3289: unset($_stack[$_stack_sp--]);
        L3290: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3291: $_env["op"] = $_value;
        L3292: if ($_fail) { goto L3311; }
        L3293: $_stack[++$_stack_sp] = $_env;
        L3294: $_env = array();
        L3295: $_stack[++$_stack_sp] = 3297;
        L3296: goto L5382;
        L3297: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3298: if ($_fail) { goto L3311; }
        L3299: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3300: $_stack[++$_stack_sp] = $_b;
        L3301: $_stack[++$_stack_sp] = $_env;
        L3302: $_env = array();
        L3303: $_stack[++$_stack_sp] = 3305;
        L3304: goto L3336;
        L3305: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3306: $_env["right"] = $_value;
        L3307: if ($_fail) { goto L3309; }
        L3308: $_value = $this->_70($_env);
        L3309: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3310: if ($_fail) { goto L3311; }
        L3311: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3312: if ($_fail) { goto L3316; }
        L3313: $_stack[$_stack_sp][] = $_value;
        L3314: $_stack[$_stack_sp - 1] = $_p;
        L3315: goto L3268;
        L3316: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3317: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3318: $_fail = false;
        L3319: if ($_fail) { goto L3320; }
        L3320: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3321: if ($_fail) { goto L3323; }
        L3322: $_value = $this->_69($_env);
        L3323: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3324: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3325: unset($_stack[$_stack_sp--]);
        L3326: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L3327: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3328: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3329: $_b = array();
        L3330: $_b[0] = $_fail;
        L3331: $_b[1] = $_value;
        L3332: $_b[2] = $_p;
        L3333: $_cache[$_a] = $_b;
        L3334: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3335: if ($_a === 3123) { goto L3123; } else if ($_a === 3166) { goto L3166; } else { return array(FALSE, NULL, 30); }
        L3336: $_stack[++$_stack_sp] = "31@";
        L3337: $_stack[$_stack_sp] .= $_p;
        L3338: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L3345; }
        L3339: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3340: $_b = $_cache[$_a];
        L3341: $_fail = $_b[0];
        L3342: $_value = $_b[1];
        L3343: $_p = $_b[2];
        L3344: goto L3425;
        L3345: $_stack[++$_stack_sp] = $_env;
        L3346: $_env = array();
        L3347: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L3348: $_stack[++$_stack_sp] = $_env;
        L3349: $_env = array();
        L3350: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3351: $_stack[++$_stack_sp] = $_b;
        L3352: $_stack[++$_stack_sp] = NULL;
        L3353: $_stack[++$_stack_sp] = $_env;
        L3354: $_env = array();
        L3355: $_stack[++$_stack_sp] = 3357;
        L3356: goto L3427;
        L3357: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3358: $_env["left"] = $_value;
        L3359: if ($_fail) { goto L3412; }
        L3360: $_stack[$_stack_sp] = $_value;
        L3361: $_stack[++$_stack_sp] = $_p;
        L3362: $_stack[++$_stack_sp] = array();
        L3363: $_stack[++$_stack_sp] = NULL;
        L3364: $_stack[++$_stack_sp] = $_env;
        L3365: $_env = array();
        L3366: $_stack[++$_stack_sp] = 3368;
        L3367: goto L5382;
        L3368: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3369: if ($_fail) { goto L3403; }
        L3370: $_stack[$_stack_sp] = $_value;
        L3371: $_stack[++$_stack_sp] = $_env;
        L3372: $_env = array();
        L3373: $_stack[++$_stack_sp] = $_p;
        L3374: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "<<") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"<<"', $_expected)) { $_expected[] = '"<<"'; } } }
        L3375: if (!$_fail) { goto L3381; }
        L3376: $_p = $_stack[$_stack_sp];
        L3377: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === ">>") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('">>"', $_expected)) { $_expected[] = '">>"'; } } }
        L3378: if (!$_fail) { goto L3381; }
        L3379: $_p = $_stack[$_stack_sp];
        L3380: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === ">>") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('">>"', $_expected)) { $_expected[] = '">>"'; } } }
        L3381: unset($_stack[$_stack_sp--]);
        L3382: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3383: $_env["op"] = $_value;
        L3384: if ($_fail) { goto L3403; }
        L3385: $_stack[++$_stack_sp] = $_env;
        L3386: $_env = array();
        L3387: $_stack[++$_stack_sp] = 3389;
        L3388: goto L5382;
        L3389: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3390: if ($_fail) { goto L3403; }
        L3391: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3392: $_stack[++$_stack_sp] = $_b;
        L3393: $_stack[++$_stack_sp] = $_env;
        L3394: $_env = array();
        L3395: $_stack[++$_stack_sp] = 3397;
        L3396: goto L3427;
        L3397: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3398: $_env["right"] = $_value;
        L3399: if ($_fail) { goto L3401; }
        L3400: $_value = $this->_72($_env);
        L3401: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3402: if ($_fail) { goto L3403; }
        L3403: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3404: if ($_fail) { goto L3408; }
        L3405: $_stack[$_stack_sp][] = $_value;
        L3406: $_stack[$_stack_sp - 1] = $_p;
        L3407: goto L3363;
        L3408: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3409: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3410: $_fail = false;
        L3411: if ($_fail) { goto L3412; }
        L3412: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3413: if ($_fail) { goto L3415; }
        L3414: $_value = $this->_71($_env);
        L3415: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3416: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3417: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L3418: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3419: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3420: $_b = array();
        L3421: $_b[0] = $_fail;
        L3422: $_b[1] = $_value;
        L3423: $_b[2] = $_p;
        L3424: $_cache[$_a] = $_b;
        L3425: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3426: if ($_a === 3214) { goto L3214; } else if ($_a === 3262) { goto L3262; } else if ($_a === 3305) { goto L3305; } else { return array(FALSE, NULL, 31); }
        L3427: $_stack[++$_stack_sp] = "32@";
        L3428: $_stack[$_stack_sp] .= $_p;
        L3429: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L3436; }
        L3430: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3431: $_b = $_cache[$_a];
        L3432: $_fail = $_b[0];
        L3433: $_value = $_b[1];
        L3434: $_p = $_b[2];
        L3435: goto L3545;
        L3436: $_stack[++$_stack_sp] = $_env;
        L3437: $_env = array();
        L3438: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L3439: $_stack[++$_stack_sp] = $_env;
        L3440: $_env = array();
        L3441: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3442: $_stack[++$_stack_sp] = $_b;
        L3443: $_stack[++$_stack_sp] = NULL;
        L3444: $_stack[++$_stack_sp] = $_env;
        L3445: $_env = array();
        L3446: $_stack[++$_stack_sp] = 3448;
        L3447: goto L3547;
        L3448: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3449: $_env["left"] = $_value;
        L3450: if ($_fail) { goto L3532; }
        L3451: $_stack[$_stack_sp] = $_value;
        L3452: $_stack[++$_stack_sp] = $_p;
        L3453: $_stack[++$_stack_sp] = array();
        L3454: $_stack[++$_stack_sp] = NULL;
        L3455: $_stack[++$_stack_sp] = $_env;
        L3456: $_env = array();
        L3457: $_stack[++$_stack_sp] = 3459;
        L3458: goto L5382;
        L3459: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3460: if ($_fail) { goto L3523; }
        L3461: $_stack[$_stack_sp] = $_value;
        L3462: $_stack[++$_stack_sp] = $_env;
        L3463: $_env = array();
        L3464: $_stack[++$_stack_sp] = $_p;
        L3465: $_stack[++$_stack_sp] = "";
        L3466: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "+") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"+"', $_expected)) { $_expected[] = '"+"'; } } }
        L3467: if ($_fail) { goto L3481; }
        L3468: $_stack[$_stack_sp] .= $_value;
        L3469: $_stack[++$_stack_sp] = $_p;
        L3470: $_stack[++$_stack_sp] = $_p;
        L3471: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "+") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"+"', $_expected)) { $_expected[] = '"+"'; } } }
        L3472: if (!$_fail) { goto L3475; }
        L3473: $_p = $_stack[$_stack_sp];
        L3474: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L3475: unset($_stack[$_stack_sp--]);
        L3476: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3477: $_value = NULL;
        L3478: $_fail = !$_fail;
        L3479: if ($_fail) { goto L3481; }
        L3480: $_stack[$_stack_sp] .= $_value;
        L3481: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3482: if (!$_fail) { goto L3501; }
        L3483: $_p = $_stack[$_stack_sp];
        L3484: $_stack[++$_stack_sp] = "";
        L3485: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "-") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-"', $_expected)) { $_expected[] = '"-"'; } } }
        L3486: if ($_fail) { goto L3500; }
        L3487: $_stack[$_stack_sp] .= $_value;
        L3488: $_stack[++$_stack_sp] = $_p;
        L3489: $_stack[++$_stack_sp] = $_p;
        L3490: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "-") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-"', $_expected)) { $_expected[] = '"-"'; } } }
        L3491: if (!$_fail) { goto L3494; }
        L3492: $_p = $_stack[$_stack_sp];
        L3493: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L3494: unset($_stack[$_stack_sp--]);
        L3495: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3496: $_value = NULL;
        L3497: $_fail = !$_fail;
        L3498: if ($_fail) { goto L3500; }
        L3499: $_stack[$_stack_sp] .= $_value;
        L3500: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3501: unset($_stack[$_stack_sp--]);
        L3502: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3503: $_env["op"] = $_value;
        L3504: if ($_fail) { goto L3523; }
        L3505: $_stack[++$_stack_sp] = $_env;
        L3506: $_env = array();
        L3507: $_stack[++$_stack_sp] = 3509;
        L3508: goto L5382;
        L3509: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3510: if ($_fail) { goto L3523; }
        L3511: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3512: $_stack[++$_stack_sp] = $_b;
        L3513: $_stack[++$_stack_sp] = $_env;
        L3514: $_env = array();
        L3515: $_stack[++$_stack_sp] = 3517;
        L3516: goto L3547;
        L3517: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3518: $_env["right"] = $_value;
        L3519: if ($_fail) { goto L3521; }
        L3520: $_value = $this->_74($_env);
        L3521: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3522: if ($_fail) { goto L3523; }
        L3523: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3524: if ($_fail) { goto L3528; }
        L3525: $_stack[$_stack_sp][] = $_value;
        L3526: $_stack[$_stack_sp - 1] = $_p;
        L3527: goto L3454;
        L3528: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3529: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3530: $_fail = false;
        L3531: if ($_fail) { goto L3532; }
        L3532: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3533: if ($_fail) { goto L3535; }
        L3534: $_value = $this->_73($_env);
        L3535: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3536: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3537: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L3538: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3539: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3540: $_b = array();
        L3541: $_b[0] = $_fail;
        L3542: $_b[1] = $_value;
        L3543: $_b[2] = $_p;
        L3544: $_cache[$_a] = $_b;
        L3545: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3546: if ($_a === 3357) { goto L3357; } else if ($_a === 3397) { goto L3397; } else { return array(FALSE, NULL, 32); }
        L3547: $_stack[++$_stack_sp] = "33@";
        L3548: $_stack[$_stack_sp] .= $_p;
        L3549: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L3556; }
        L3550: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3551: $_b = $_cache[$_a];
        L3552: $_fail = $_b[0];
        L3553: $_value = $_b[1];
        L3554: $_p = $_b[2];
        L3555: goto L3647;
        L3556: $_stack[++$_stack_sp] = $_env;
        L3557: $_env = array();
        L3558: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L3559: $_stack[++$_stack_sp] = $_env;
        L3560: $_env = array();
        L3561: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3562: $_stack[++$_stack_sp] = $_b;
        L3563: $_stack[++$_stack_sp] = NULL;
        L3564: $_stack[++$_stack_sp] = $_env;
        L3565: $_env = array();
        L3566: $_stack[++$_stack_sp] = 3568;
        L3567: goto L3649;
        L3568: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3569: $_env["left"] = $_value;
        L3570: if ($_fail) { goto L3634; }
        L3571: $_stack[$_stack_sp] = $_value;
        L3572: $_stack[++$_stack_sp] = $_p;
        L3573: $_stack[++$_stack_sp] = array();
        L3574: $_stack[++$_stack_sp] = NULL;
        L3575: $_stack[++$_stack_sp] = $_env;
        L3576: $_env = array();
        L3577: $_stack[++$_stack_sp] = 3579;
        L3578: goto L5382;
        L3579: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3580: if ($_fail) { goto L3625; }
        L3581: $_stack[$_stack_sp] = $_value;
        L3582: $_stack[++$_stack_sp] = $_env;
        L3583: $_env = array();
        L3584: $_stack[++$_stack_sp] = "";
        L3585: $_stack[++$_stack_sp] = $_p;
        L3586: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "*") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*"', $_expected)) { $_expected[] = '"*"'; } } }
        L3587: if (!$_fail) { goto L3593; }
        L3588: $_p = $_stack[$_stack_sp];
        L3589: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "/") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"/"', $_expected)) { $_expected[] = '"/"'; } } }
        L3590: if (!$_fail) { goto L3593; }
        L3591: $_p = $_stack[$_stack_sp];
        L3592: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "%") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"%"', $_expected)) { $_expected[] = '"%"'; } } }
        L3593: unset($_stack[$_stack_sp--]);
        L3594: if ($_fail) { goto L3603; }
        L3595: $_stack[$_stack_sp] .= $_value;
        L3596: $_stack[++$_stack_sp] = $_p;
        L3597: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L3598: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3599: $_value = NULL;
        L3600: $_fail = !$_fail;
        L3601: if ($_fail) { goto L3603; }
        L3602: $_stack[$_stack_sp] .= $_value;
        L3603: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3604: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3605: $_env["op"] = $_value;
        L3606: if ($_fail) { goto L3625; }
        L3607: $_stack[++$_stack_sp] = $_env;
        L3608: $_env = array();
        L3609: $_stack[++$_stack_sp] = 3611;
        L3610: goto L5382;
        L3611: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3612: if ($_fail) { goto L3625; }
        L3613: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3614: $_stack[++$_stack_sp] = $_b;
        L3615: $_stack[++$_stack_sp] = $_env;
        L3616: $_env = array();
        L3617: $_stack[++$_stack_sp] = 3619;
        L3618: goto L3649;
        L3619: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3620: $_env["right"] = $_value;
        L3621: if ($_fail) { goto L3623; }
        L3622: $_value = $this->_76($_env);
        L3623: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3624: if ($_fail) { goto L3625; }
        L3625: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3626: if ($_fail) { goto L3630; }
        L3627: $_stack[$_stack_sp][] = $_value;
        L3628: $_stack[$_stack_sp - 1] = $_p;
        L3629: goto L3574;
        L3630: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3631: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3632: $_fail = false;
        L3633: if ($_fail) { goto L3634; }
        L3634: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3635: if ($_fail) { goto L3637; }
        L3636: $_value = $this->_75($_env);
        L3637: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3638: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3639: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L3640: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3641: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3642: $_b = array();
        L3643: $_b[0] = $_fail;
        L3644: $_b[1] = $_value;
        L3645: $_b[2] = $_p;
        L3646: $_cache[$_a] = $_b;
        L3647: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3648: if ($_a === 3448) { goto L3448; } else if ($_a === 3517) { goto L3517; } else { return array(FALSE, NULL, 33); }
        L3649: $_stack[++$_stack_sp] = "34@";
        L3650: $_stack[$_stack_sp] .= $_p;
        L3651: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L3658; }
        L3652: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3653: $_b = $_cache[$_a];
        L3654: $_fail = $_b[0];
        L3655: $_value = $_b[1];
        L3656: $_p = $_b[2];
        L3657: goto L3867;
        L3658: $_stack[++$_stack_sp] = $_env;
        L3659: $_env = array();
        L3660: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L3661: $_stack[++$_stack_sp] = $_p;
        L3662: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3663: $_stack[++$_stack_sp] = $_b;
        L3664: $_stack[++$_stack_sp] = NULL;
        L3665: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "++") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"++"', $_expected)) { $_expected[] = '"++"'; } } }
        L3666: if ($_fail) { goto L3675; }
        L3667: $_stack[$_stack_sp] = $_value;
        L3668: $_stack[++$_stack_sp] = 3670;
        L3669: goto L5382;
        L3670: if ($_fail) { goto L3675; }
        L3671: $_stack[++$_stack_sp] = 3673;
        L3672: goto L4547;
        L3673: $_env["expr"] = $_value;
        L3674: if ($_fail) { goto L3675; }
        L3675: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3676: if ($_fail) { goto L3678; }
        L3677: $_value = $this->_77($_env);
        L3678: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3679: if (!$_fail) { goto L3858; }
        L3680: $_p = $_stack[$_stack_sp];
        L3681: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3682: $_stack[++$_stack_sp] = $_b;
        L3683: $_stack[++$_stack_sp] = NULL;
        L3684: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "--") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"--"', $_expected)) { $_expected[] = '"--"'; } } }
        L3685: if ($_fail) { goto L3694; }
        L3686: $_stack[$_stack_sp] = $_value;
        L3687: $_stack[++$_stack_sp] = 3689;
        L3688: goto L5382;
        L3689: if ($_fail) { goto L3694; }
        L3690: $_stack[++$_stack_sp] = 3692;
        L3691: goto L4547;
        L3692: $_env["expr"] = $_value;
        L3693: if ($_fail) { goto L3694; }
        L3694: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3695: if ($_fail) { goto L3697; }
        L3696: $_value = $this->_78($_env);
        L3697: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3698: if (!$_fail) { goto L3858; }
        L3699: $_p = $_stack[$_stack_sp];
        L3700: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3701: $_stack[++$_stack_sp] = $_b;
        L3702: $_stack[++$_stack_sp] = NULL;
        L3703: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "+") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"+"', $_expected)) { $_expected[] = '"+"'; } } }
        L3704: if ($_fail) { goto L3713; }
        L3705: $_stack[$_stack_sp] = $_value;
        L3706: $_stack[++$_stack_sp] = 3708;
        L3707: goto L5382;
        L3708: if ($_fail) { goto L3713; }
        L3709: $_stack[++$_stack_sp] = 3711;
        L3710: goto L3649;
        L3711: $_env["expr"] = $_value;
        L3712: if ($_fail) { goto L3713; }
        L3713: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3714: if ($_fail) { goto L3716; }
        L3715: $_value = $this->_79($_env);
        L3716: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3717: if (!$_fail) { goto L3858; }
        L3718: $_p = $_stack[$_stack_sp];
        L3719: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3720: $_stack[++$_stack_sp] = $_b;
        L3721: $_stack[++$_stack_sp] = NULL;
        L3722: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "-") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-"', $_expected)) { $_expected[] = '"-"'; } } }
        L3723: if ($_fail) { goto L3732; }
        L3724: $_stack[$_stack_sp] = $_value;
        L3725: $_stack[++$_stack_sp] = 3727;
        L3726: goto L5382;
        L3727: if ($_fail) { goto L3732; }
        L3728: $_stack[++$_stack_sp] = 3730;
        L3729: goto L3649;
        L3730: $_env["expr"] = $_value;
        L3731: if ($_fail) { goto L3732; }
        L3732: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3733: if ($_fail) { goto L3735; }
        L3734: $_value = $this->_80($_env);
        L3735: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3736: if (!$_fail) { goto L3858; }
        L3737: $_p = $_stack[$_stack_sp];
        L3738: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3739: $_stack[++$_stack_sp] = $_b;
        L3740: $_stack[++$_stack_sp] = NULL;
        L3741: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "~") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"~"', $_expected)) { $_expected[] = '"~"'; } } }
        L3742: if ($_fail) { goto L3751; }
        L3743: $_stack[$_stack_sp] = $_value;
        L3744: $_stack[++$_stack_sp] = 3746;
        L3745: goto L5382;
        L3746: if ($_fail) { goto L3751; }
        L3747: $_stack[++$_stack_sp] = 3749;
        L3748: goto L3649;
        L3749: $_env["expr"] = $_value;
        L3750: if ($_fail) { goto L3751; }
        L3751: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3752: if ($_fail) { goto L3754; }
        L3753: $_value = $this->_81($_env);
        L3754: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3755: if (!$_fail) { goto L3858; }
        L3756: $_p = $_stack[$_stack_sp];
        L3757: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3758: $_stack[++$_stack_sp] = $_b;
        L3759: $_stack[++$_stack_sp] = NULL;
        L3760: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "!") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"!"', $_expected)) { $_expected[] = '"!"'; } } }
        L3761: if ($_fail) { goto L3770; }
        L3762: $_stack[$_stack_sp] = $_value;
        L3763: $_stack[++$_stack_sp] = 3765;
        L3764: goto L5382;
        L3765: if ($_fail) { goto L3770; }
        L3766: $_stack[++$_stack_sp] = 3768;
        L3767: goto L3649;
        L3768: $_env["expr"] = $_value;
        L3769: if ($_fail) { goto L3770; }
        L3770: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3771: if ($_fail) { goto L3773; }
        L3772: $_value = $this->_82($_env);
        L3773: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3774: if (!$_fail) { goto L3858; }
        L3775: $_p = $_stack[$_stack_sp];
        L3776: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3777: $_stack[++$_stack_sp] = $_b;
        L3778: $_stack[++$_stack_sp] = NULL;
        L3779: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "(") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"("', $_expected)) { $_expected[] = '"("'; } } }
        L3780: if ($_fail) { goto L3824; }
        L3781: $_stack[$_stack_sp] = $_value;
        L3782: $_stack[++$_stack_sp] = $_p;
        L3783: $_fail = TRUE; if (($_a = substr($_s, $_p, 6)) === "string") { $_fail = FALSE; $_value = $_a; $_p += 6; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"string"', $_expected)) { $_expected[] = '"string"'; } } }
        L3784: if (!$_fail) { goto L3812; }
        L3785: $_p = $_stack[$_stack_sp];
        L3786: $_stack[++$_stack_sp] = "";
        L3787: $_fail = TRUE; if (($_a = substr($_s, $_p, 4)) === "bool") { $_fail = FALSE; $_value = $_a; $_p += 4; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"bool"', $_expected)) { $_expected[] = '"bool"'; } } }
        L3788: if ($_fail) { goto L3799; }
        L3789: $_stack[$_stack_sp] .= $_value;
        L3790: $_stack[++$_stack_sp] = $_p;
        L3791: $_fail = TRUE; if (($_a = substr($_s, $_p, 3)) === "ean") { $_fail = FALSE; $_value = $_a; $_p += 3; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"ean"', $_expected)) { $_expected[] = '"ean"'; } } }
        L3792: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3793: if (!$_fail) { goto L3797; }
        L3794: $_fail = false;
        L3795: $_value = NULL;
        L3796: $_p = $_a;
        L3797: if ($_fail) { goto L3799; }
        L3798: $_stack[$_stack_sp] .= $_value;
        L3799: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3800: if (!$_fail) { goto L3812; }
        L3801: $_p = $_stack[$_stack_sp];
        L3802: $_fail = TRUE; if (($_a = substr($_s, $_p, 3)) === "int") { $_fail = FALSE; $_value = $_a; $_p += 3; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"int"', $_expected)) { $_expected[] = '"int"'; } } }
        L3803: if (!$_fail) { goto L3812; }
        L3804: $_p = $_stack[$_stack_sp];
        L3805: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "float") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"float"', $_expected)) { $_expected[] = '"float"'; } } }
        L3806: if (!$_fail) { goto L3812; }
        L3807: $_p = $_stack[$_stack_sp];
        L3808: $_fail = TRUE; if (($_a = substr($_s, $_p, 6)) === "object") { $_fail = FALSE; $_value = $_a; $_p += 6; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"object"', $_expected)) { $_expected[] = '"object"'; } } }
        L3809: if (!$_fail) { goto L3812; }
        L3810: $_p = $_stack[$_stack_sp];
        L3811: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "array") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"array"', $_expected)) { $_expected[] = '"array"'; } } }
        L3812: unset($_stack[$_stack_sp--]);
        L3813: $_env["cast"] = $_value;
        L3814: if ($_fail) { goto L3824; }
        L3815: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ")") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('")"', $_expected)) { $_expected[] = '")"'; } } }
        L3816: if ($_fail) { goto L3824; }
        L3817: $_stack[++$_stack_sp] = 3819;
        L3818: goto L5382;
        L3819: if ($_fail) { goto L3824; }
        L3820: $_stack[++$_stack_sp] = 3822;
        L3821: goto L3649;
        L3822: $_env["expr"] = $_value;
        L3823: if ($_fail) { goto L3824; }
        L3824: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3825: if ($_fail) { goto L3827; }
        L3826: $_value = $this->_83($_env);
        L3827: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3828: if (!$_fail) { goto L3858; }
        L3829: $_p = $_stack[$_stack_sp];
        L3830: $_stack[++$_stack_sp] = 3832;
        L3831: goto L3869;
        L3832: if (!$_fail) { goto L3858; }
        L3833: $_p = $_stack[$_stack_sp];
        L3834: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3835: $_stack[++$_stack_sp] = $_b;
        L3836: $_stack[++$_stack_sp] = NULL;
        L3837: $_stack[++$_stack_sp] = 3839;
        L3838: goto L4547;
        L3839: $_env["expr"] = $_value;
        L3840: if ($_fail) { goto L3850; }
        L3841: $_stack[$_stack_sp] = $_value;
        L3842: $_stack[++$_stack_sp] = $_p;
        L3843: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "++") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"++"', $_expected)) { $_expected[] = '"++"'; } } }
        L3844: if (!$_fail) { goto L3847; }
        L3845: $_p = $_stack[$_stack_sp];
        L3846: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "--") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"--"', $_expected)) { $_expected[] = '"--"'; } } }
        L3847: unset($_stack[$_stack_sp--]);
        L3848: $_env["op"] = $_value;
        L3849: if ($_fail) { goto L3850; }
        L3850: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3851: if ($_fail) { goto L3853; }
        L3852: $_value = $this->_84($_env);
        L3853: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3854: if (!$_fail) { goto L3858; }
        L3855: $_p = $_stack[$_stack_sp];
        L3856: $_stack[++$_stack_sp] = 3858;
        L3857: goto L4094;
        L3858: unset($_stack[$_stack_sp--]);
        L3859: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L3860: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3861: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3862: $_b = array();
        L3863: $_b[0] = $_fail;
        L3864: $_b[1] = $_value;
        L3865: $_b[2] = $_p;
        L3866: $_cache[$_a] = $_b;
        L3867: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3868: if ($_a === 3568) { goto L3568; } else if ($_a === 3619) { goto L3619; } else if ($_a === 3711) { goto L3711; } else if ($_a === 3730) { goto L3730; } else if ($_a === 3749) { goto L3749; } else if ($_a === 3768) { goto L3768; } else if ($_a === 3822) { goto L3822; } else { return array(FALSE, NULL, 34); }
        L3869: $_stack[++$_stack_sp] = "35@";
        L3870: $_stack[$_stack_sp] .= $_p;
        L3871: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L3878; }
        L3872: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3873: $_b = $_cache[$_a];
        L3874: $_fail = $_b[0];
        L3875: $_value = $_b[1];
        L3876: $_p = $_b[2];
        L3877: goto L4092;
        L3878: $_stack[++$_stack_sp] = $_env;
        L3879: $_env = array();
        L3880: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L3881: $_stack[++$_stack_sp] = $_p;
        L3882: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3883: $_stack[++$_stack_sp] = $_b;
        L3884: $_stack[++$_stack_sp] = NULL;
        L3885: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "[") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"["', $_expected)) { $_expected[] = '"["'; } } }
        L3886: if ($_fail) { goto L3978; }
        L3887: $_stack[$_stack_sp] = $_value;
        L3888: $_stack[++$_stack_sp] = 3890;
        L3889: goto L5382;
        L3890: if ($_fail) { goto L3978; }
        L3891: $_stack[++$_stack_sp] = $_p;
        L3892: $_stack[++$_stack_sp] = array();
        L3893: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3894: $_stack[++$_stack_sp] = $_b;
        L3895: $_stack[++$_stack_sp] = NULL;
        L3896: $_stack[++$_stack_sp] = $_p;
        L3897: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3898: $_stack[++$_stack_sp] = $_b;
        L3899: $_stack[++$_stack_sp] = NULL;
        L3900: $_stack[++$_stack_sp] = $_p;
        L3901: $_stack[++$_stack_sp] = 3903;
        L3902: goto L5115;
        L3903: if (!$_fail) { goto L3917; }
        L3904: $_p = $_stack[$_stack_sp];
        L3905: $_stack[++$_stack_sp] = 3907;
        L3906: goto L5343;
        L3907: if (!$_fail) { goto L3917; }
        L3908: $_p = $_stack[$_stack_sp];
        L3909: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3910: $_stack[++$_stack_sp] = $_b;
        L3911: $_stack[++$_stack_sp] = 3913;
        L3912: goto L4819;
        L3913: $_env["n"] = $_value;
        L3914: if ($_fail) { goto L3916; }
        L3915: $_value = $this->_88($_env);
        L3916: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3917: unset($_stack[$_stack_sp--]);
        L3918: $_env["k"] = $_value;
        L3919: if ($_fail) { goto L3926; }
        L3920: $_stack[$_stack_sp] = $_value;
        L3921: $_stack[++$_stack_sp] = 3923;
        L3922: goto L5382;
        L3923: if ($_fail) { goto L3926; }
        L3924: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "=>") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"=>"', $_expected)) { $_expected[] = '"=>"'; } } }
        L3925: if ($_fail) { goto L3926; }
        L3926: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3927: if ($_fail) { goto L3929; }
        L3928: $_value = $this->_87($_env);
        L3929: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3930: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3931: if (!$_fail) { goto L3935; }
        L3932: $_fail = false;
        L3933: $_value = NULL;
        L3934: $_p = $_a;
        L3935: $_env["key"] = $_value;
        L3936: if ($_fail) { goto L3963; }
        L3937: $_stack[$_stack_sp] = $_value;
        L3938: $_stack[++$_stack_sp] = 3940;
        L3939: goto L5382;
        L3940: if ($_fail) { goto L3963; }
        L3941: $_stack[++$_stack_sp] = 3943;
        L3942: goto L2724;
        L3943: $_env["value"] = $_value;
        L3944: if ($_fail) { goto L3963; }
        L3945: $_stack[++$_stack_sp] = 3947;
        L3946: goto L5382;
        L3947: if ($_fail) { goto L3963; }
        L3948: $_stack[++$_stack_sp] = $_p;
        L3949: $_stack[++$_stack_sp] = NULL;
        L3950: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ",") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('","', $_expected)) { $_expected[] = '","'; } } }
        L3951: if ($_fail) { goto L3956; }
        L3952: $_stack[$_stack_sp] = $_value;
        L3953: $_stack[++$_stack_sp] = 3955;
        L3954: goto L5382;
        L3955: if ($_fail) { goto L3956; }
        L3956: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3957: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3958: if (!$_fail) { goto L3962; }
        L3959: $_fail = false;
        L3960: $_value = NULL;
        L3961: $_p = $_a;
        L3962: if ($_fail) { goto L3963; }
        L3963: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3964: if ($_fail) { goto L3966; }
        L3965: $_value = $this->_86($_env);
        L3966: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3967: if ($_fail) { goto L3971; }
        L3968: $_stack[$_stack_sp][] = $_value;
        L3969: $_stack[$_stack_sp - 1] = $_p;
        L3970: goto L3893;
        L3971: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3972: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3973: $_fail = false;
        L3974: $_env["values"] = $_value;
        L3975: if ($_fail) { goto L3978; }
        L3976: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "]") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"]"', $_expected)) { $_expected[] = '"]"'; } } }
        L3977: if ($_fail) { goto L3978; }
        L3978: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3979: if ($_fail) { goto L3981; }
        L3980: $_value = $this->_85($_env);
        L3981: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L3982: if (!$_fail) { goto L4083; }
        L3983: $_p = $_stack[$_stack_sp];
        L3984: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L3985: $_stack[++$_stack_sp] = $_b;
        L3986: $_stack[++$_stack_sp] = NULL;
        L3987: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "array") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"array"', $_expected)) { $_expected[] = '"array"'; } } }
        L3988: if ($_fail) { goto L4079; }
        L3989: $_stack[$_stack_sp] = $_value;
        L3990: $_stack[++$_stack_sp] = 3992;
        L3991: goto L5382;
        L3992: if ($_fail) { goto L4079; }
        L3993: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "(") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"("', $_expected)) { $_expected[] = '"("'; } } }
        L3994: if ($_fail) { goto L4079; }
        L3995: $_stack[++$_stack_sp] = 3997;
        L3996: goto L5382;
        L3997: if ($_fail) { goto L4079; }
        L3998: $_stack[++$_stack_sp] = $_p;
        L3999: $_stack[++$_stack_sp] = array();
        L4000: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4001: $_stack[++$_stack_sp] = $_b;
        L4002: $_stack[++$_stack_sp] = NULL;
        L4003: $_stack[++$_stack_sp] = $_p;
        L4004: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4005: $_stack[++$_stack_sp] = $_b;
        L4006: $_stack[++$_stack_sp] = NULL;
        L4007: $_stack[++$_stack_sp] = $_p;
        L4008: $_stack[++$_stack_sp] = 4010;
        L4009: goto L5115;
        L4010: if (!$_fail) { goto L4018; }
        L4011: $_p = $_stack[$_stack_sp];
        L4012: $_stack[++$_stack_sp] = 4014;
        L4013: goto L5343;
        L4014: if (!$_fail) { goto L4018; }
        L4015: $_p = $_stack[$_stack_sp];
        L4016: $_stack[++$_stack_sp] = 4018;
        L4017: goto L4819;
        L4018: unset($_stack[$_stack_sp--]);
        L4019: $_env["k"] = $_value;
        L4020: if ($_fail) { goto L4027; }
        L4021: $_stack[$_stack_sp] = $_value;
        L4022: $_stack[++$_stack_sp] = 4024;
        L4023: goto L5382;
        L4024: if ($_fail) { goto L4027; }
        L4025: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "=>") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"=>"', $_expected)) { $_expected[] = '"=>"'; } } }
        L4026: if ($_fail) { goto L4027; }
        L4027: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4028: if ($_fail) { goto L4030; }
        L4029: $_value = $this->_91($_env);
        L4030: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4031: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4032: if (!$_fail) { goto L4036; }
        L4033: $_fail = false;
        L4034: $_value = NULL;
        L4035: $_p = $_a;
        L4036: $_env["key"] = $_value;
        L4037: if ($_fail) { goto L4064; }
        L4038: $_stack[$_stack_sp] = $_value;
        L4039: $_stack[++$_stack_sp] = 4041;
        L4040: goto L5382;
        L4041: if ($_fail) { goto L4064; }
        L4042: $_stack[++$_stack_sp] = 4044;
        L4043: goto L2724;
        L4044: $_env["value"] = $_value;
        L4045: if ($_fail) { goto L4064; }
        L4046: $_stack[++$_stack_sp] = 4048;
        L4047: goto L5382;
        L4048: if ($_fail) { goto L4064; }
        L4049: $_stack[++$_stack_sp] = $_p;
        L4050: $_stack[++$_stack_sp] = NULL;
        L4051: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ",") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('","', $_expected)) { $_expected[] = '","'; } } }
        L4052: if ($_fail) { goto L4057; }
        L4053: $_stack[$_stack_sp] = $_value;
        L4054: $_stack[++$_stack_sp] = 4056;
        L4055: goto L5382;
        L4056: if ($_fail) { goto L4057; }
        L4057: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4058: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4059: if (!$_fail) { goto L4063; }
        L4060: $_fail = false;
        L4061: $_value = NULL;
        L4062: $_p = $_a;
        L4063: if ($_fail) { goto L4064; }
        L4064: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4065: if ($_fail) { goto L4067; }
        L4066: $_value = $this->_90($_env);
        L4067: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4068: if ($_fail) { goto L4072; }
        L4069: $_stack[$_stack_sp][] = $_value;
        L4070: $_stack[$_stack_sp - 1] = $_p;
        L4071: goto L4000;
        L4072: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4073: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4074: $_fail = false;
        L4075: $_env["values"] = $_value;
        L4076: if ($_fail) { goto L4079; }
        L4077: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ")") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('")"', $_expected)) { $_expected[] = '")"'; } } }
        L4078: if ($_fail) { goto L4079; }
        L4079: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4080: if ($_fail) { goto L4082; }
        L4081: $_value = $this->_89($_env);
        L4082: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4083: unset($_stack[$_stack_sp--]);
        L4084: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L4085: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4086: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4087: $_b = array();
        L4088: $_b[0] = $_fail;
        L4089: $_b[1] = $_value;
        L4090: $_b[2] = $_p;
        L4091: $_cache[$_a] = $_b;
        L4092: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4093: if ($_a === 1185) { goto L1185; } else if ($_a === 3832) { goto L3832; } else { return array(FALSE, NULL, 35); }
        L4094: $_stack[++$_stack_sp] = "36@";
        L4095: $_stack[$_stack_sp] .= $_p;
        L4096: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L4103; }
        L4097: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4098: $_b = $_cache[$_a];
        L4099: $_fail = $_b[0];
        L4100: $_value = $_b[1];
        L4101: $_p = $_b[2];
        L4102: goto L4191;
        L4103: $_stack[++$_stack_sp] = $_env;
        L4104: $_env = array();
        L4105: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L4106: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4107: $_stack[++$_stack_sp] = $_b;
        L4108: $_stack[++$_stack_sp] = NULL;
        L4109: $_stack[++$_stack_sp] = 4111;
        L4110: goto L4193;
        L4111: $_env["expr"] = $_value;
        L4112: if ($_fail) { goto L4179; }
        L4113: $_stack[$_stack_sp] = $_value;
        L4114: $_stack[++$_stack_sp] = $_p;
        L4115: $_stack[++$_stack_sp] = array();
        L4116: $_stack[++$_stack_sp] = $_p;
        L4117: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4118: $_stack[++$_stack_sp] = $_b;
        L4119: $_stack[++$_stack_sp] = NULL;
        L4120: $_stack[++$_stack_sp] = 4122;
        L4121: goto L5382;
        L4122: if ($_fail) { goto L4133; }
        L4123: $_stack[$_stack_sp] = $_value;
        L4124: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "->") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"->"', $_expected)) { $_expected[] = '"->"'; } } }
        L4125: if ($_fail) { goto L4133; }
        L4126: $_stack[++$_stack_sp] = 4128;
        L4127: goto L5382;
        L4128: if ($_fail) { goto L4133; }
        L4129: $_stack[++$_stack_sp] = 4131;
        L4130: goto L4430;
        L4131: $_env["fcall"] = $_value;
        L4132: if ($_fail) { goto L4133; }
        L4133: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4134: if ($_fail) { goto L4136; }
        L4135: $_value = $this->_93($_env);
        L4136: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4137: if (!$_fail) { goto L4169; }
        L4138: $_p = $_stack[$_stack_sp];
        L4139: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4140: $_stack[++$_stack_sp] = $_b;
        L4141: $_stack[++$_stack_sp] = NULL;
        L4142: $_stack[++$_stack_sp] = 4144;
        L4143: goto L5382;
        L4144: if ($_fail) { goto L4165; }
        L4145: $_stack[$_stack_sp] = $_value;
        L4146: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "->") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"->"', $_expected)) { $_expected[] = '"->"'; } } }
        L4147: if ($_fail) { goto L4165; }
        L4148: $_stack[++$_stack_sp] = 4150;
        L4149: goto L5382;
        L4150: if ($_fail) { goto L4165; }
        L4151: $_stack[++$_stack_sp] = 4153;
        L4152: goto L5343;
        L4153: $_env["prop"] = $_value;
        L4154: if ($_fail) { goto L4165; }
        L4155: $_stack[++$_stack_sp] = $_p;
        L4156: $_stack[++$_stack_sp] = 4158;
        L4157: goto L4630;
        L4158: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4159: if (!$_fail) { goto L4163; }
        L4160: $_fail = false;
        L4161: $_value = NULL;
        L4162: $_p = $_a;
        L4163: $_env["path"] = $_value;
        L4164: if ($_fail) { goto L4165; }
        L4165: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4166: if ($_fail) { goto L4168; }
        L4167: $_value = $this->_94($_env);
        L4168: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4169: unset($_stack[$_stack_sp--]);
        L4170: if ($_fail) { goto L4174; }
        L4171: $_stack[$_stack_sp][] = $_value;
        L4172: $_stack[$_stack_sp - 1] = $_p;
        L4173: goto L4116;
        L4174: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4175: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4176: $_fail = false;
        L4177: $_env["mcalls"] = $_value;
        L4178: if ($_fail) { goto L4179; }
        L4179: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4180: if ($_fail) { goto L4182; }
        L4181: $_value = $this->_92($_env);
        L4182: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4183: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L4184: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4185: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4186: $_b = array();
        L4187: $_b[0] = $_fail;
        L4188: $_b[1] = $_value;
        L4189: $_b[2] = $_p;
        L4190: $_cache[$_a] = $_b;
        L4191: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4192: if ($_a === 1181) { goto L1181; } else if ($_a === 1284) { goto L1284; } else if ($_a === 3858) { goto L3858; } else if ($_a === 4971) { goto L4971; } else if ($_a === 5047) { goto L5047; } else { return array(FALSE, NULL, 36); }
        L4193: $_stack[++$_stack_sp] = "37@";
        L4194: $_stack[$_stack_sp] .= $_p;
        L4195: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L4202; }
        L4196: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4197: $_b = $_cache[$_a];
        L4198: $_fail = $_b[0];
        L4199: $_value = $_b[1];
        L4200: $_p = $_b[2];
        L4201: goto L4344;
        L4202: $_stack[++$_stack_sp] = $_env;
        L4203: $_env = array();
        L4204: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L4205: $_stack[++$_stack_sp] = $_p;
        L4206: $_stack[++$_stack_sp] = 4208;
        L4207: goto L4346;
        L4208: if (!$_fail) { goto L4335; }
        L4209: $_p = $_stack[$_stack_sp];
        L4210: $_stack[++$_stack_sp] = 4212;
        L4211: goto L4430;
        L4212: if (!$_fail) { goto L4335; }
        L4213: $_p = $_stack[$_stack_sp];
        L4214: $_stack[++$_stack_sp] = 4216;
        L4215: goto L4819;
        L4216: if (!$_fail) { goto L4335; }
        L4217: $_p = $_stack[$_stack_sp];
        L4218: $_stack[++$_stack_sp] = 4220;
        L4219: goto L4941;
        L4220: if (!$_fail) { goto L4335; }
        L4221: $_p = $_stack[$_stack_sp];
        L4222: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4223: $_stack[++$_stack_sp] = $_b;
        L4224: $_stack[++$_stack_sp] = "";
        L4225: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 116) || ($_a === 84))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[tT]', $_expected)) { $_expected[] = '[tT]'; } } }
        L4226: if ($_fail) { goto L4244; }
        L4227: $_stack[$_stack_sp] .= $_value;
        L4228: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 114) || ($_a === 82))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[rR]', $_expected)) { $_expected[] = '[rR]'; } } }
        L4229: if ($_fail) { goto L4244; }
        L4230: $_stack[$_stack_sp] .= $_value;
        L4231: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 117) || ($_a === 85))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[uU]', $_expected)) { $_expected[] = '[uU]'; } } }
        L4232: if ($_fail) { goto L4244; }
        L4233: $_stack[$_stack_sp] .= $_value;
        L4234: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 101) || ($_a === 69))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[eE]', $_expected)) { $_expected[] = '[eE]'; } } }
        L4235: if ($_fail) { goto L4244; }
        L4236: $_stack[$_stack_sp] .= $_value;
        L4237: $_stack[++$_stack_sp] = $_p;
        L4238: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((65 <= $_a && $_a <= 90) || (97 <= $_a && $_a <= 122))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[A-Za-z]', $_expected)) { $_expected[] = '[A-Za-z]'; } } }
        L4239: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4240: $_value = NULL;
        L4241: $_fail = !$_fail;
        L4242: if ($_fail) { goto L4244; }
        L4243: $_stack[$_stack_sp] .= $_value;
        L4244: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4245: if ($_fail) { goto L4247; }
        L4246: $_value = $this->_95($_env);
        L4247: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4248: if (!$_fail) { goto L4335; }
        L4249: $_p = $_stack[$_stack_sp];
        L4250: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4251: $_stack[++$_stack_sp] = $_b;
        L4252: $_stack[++$_stack_sp] = "";
        L4253: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 102) || ($_a === 70))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[fF]', $_expected)) { $_expected[] = '[fF]'; } } }
        L4254: if ($_fail) { goto L4275; }
        L4255: $_stack[$_stack_sp] .= $_value;
        L4256: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 97) || ($_a === 65))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[aA]', $_expected)) { $_expected[] = '[aA]'; } } }
        L4257: if ($_fail) { goto L4275; }
        L4258: $_stack[$_stack_sp] .= $_value;
        L4259: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 108) || ($_a === 76))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[lL]', $_expected)) { $_expected[] = '[lL]'; } } }
        L4260: if ($_fail) { goto L4275; }
        L4261: $_stack[$_stack_sp] .= $_value;
        L4262: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 115) || ($_a === 83))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[sS]', $_expected)) { $_expected[] = '[sS]'; } } }
        L4263: if ($_fail) { goto L4275; }
        L4264: $_stack[$_stack_sp] .= $_value;
        L4265: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 101) || ($_a === 69))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[eE]', $_expected)) { $_expected[] = '[eE]'; } } }
        L4266: if ($_fail) { goto L4275; }
        L4267: $_stack[$_stack_sp] .= $_value;
        L4268: $_stack[++$_stack_sp] = $_p;
        L4269: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((65 <= $_a && $_a <= 90) || (97 <= $_a && $_a <= 122))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[A-Za-z]', $_expected)) { $_expected[] = '[A-Za-z]'; } } }
        L4270: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4271: $_value = NULL;
        L4272: $_fail = !$_fail;
        L4273: if ($_fail) { goto L4275; }
        L4274: $_stack[$_stack_sp] .= $_value;
        L4275: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4276: if ($_fail) { goto L4278; }
        L4277: $_value = $this->_96($_env);
        L4278: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4279: if (!$_fail) { goto L4335; }
        L4280: $_p = $_stack[$_stack_sp];
        L4281: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4282: $_stack[++$_stack_sp] = $_b;
        L4283: $_stack[++$_stack_sp] = "";
        L4284: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 110) || ($_a === 78))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[nN]', $_expected)) { $_expected[] = '[nN]'; } } }
        L4285: if ($_fail) { goto L4303; }
        L4286: $_stack[$_stack_sp] .= $_value;
        L4287: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 117) || ($_a === 85))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[uU]', $_expected)) { $_expected[] = '[uU]'; } } }
        L4288: if ($_fail) { goto L4303; }
        L4289: $_stack[$_stack_sp] .= $_value;
        L4290: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 108) || ($_a === 76))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[lL]', $_expected)) { $_expected[] = '[lL]'; } } }
        L4291: if ($_fail) { goto L4303; }
        L4292: $_stack[$_stack_sp] .= $_value;
        L4293: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 108) || ($_a === 76))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[lL]', $_expected)) { $_expected[] = '[lL]'; } } }
        L4294: if ($_fail) { goto L4303; }
        L4295: $_stack[$_stack_sp] .= $_value;
        L4296: $_stack[++$_stack_sp] = $_p;
        L4297: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((65 <= $_a && $_a <= 90) || (97 <= $_a && $_a <= 122))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[A-Za-z]', $_expected)) { $_expected[] = '[A-Za-z]'; } } }
        L4298: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4299: $_value = NULL;
        L4300: $_fail = !$_fail;
        L4301: if ($_fail) { goto L4303; }
        L4302: $_stack[$_stack_sp] .= $_value;
        L4303: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4304: if ($_fail) { goto L4306; }
        L4305: $_value = $this->_97($_env);
        L4306: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4307: if (!$_fail) { goto L4335; }
        L4308: $_p = $_stack[$_stack_sp];
        L4309: $_stack[++$_stack_sp] = 4311;
        L4310: goto L4547;
        L4311: if (!$_fail) { goto L4335; }
        L4312: $_p = $_stack[$_stack_sp];
        L4313: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4314: $_stack[++$_stack_sp] = $_b;
        L4315: $_stack[++$_stack_sp] = NULL;
        L4316: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "(") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"("', $_expected)) { $_expected[] = '"("'; } } }
        L4317: if ($_fail) { goto L4331; }
        L4318: $_stack[$_stack_sp] = $_value;
        L4319: $_stack[++$_stack_sp] = 4321;
        L4320: goto L5382;
        L4321: if ($_fail) { goto L4331; }
        L4322: $_stack[++$_stack_sp] = 4324;
        L4323: goto L2724;
        L4324: $_env["expr"] = $_value;
        L4325: if ($_fail) { goto L4331; }
        L4326: $_stack[++$_stack_sp] = 4328;
        L4327: goto L5382;
        L4328: if ($_fail) { goto L4331; }
        L4329: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ")") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('")"', $_expected)) { $_expected[] = '")"'; } } }
        L4330: if ($_fail) { goto L4331; }
        L4331: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4332: if ($_fail) { goto L4334; }
        L4333: $_value = $this->_98($_env);
        L4334: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4335: unset($_stack[$_stack_sp--]);
        L4336: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L4337: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4338: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4339: $_b = array();
        L4340: $_b[0] = $_fail;
        L4341: $_b[1] = $_value;
        L4342: $_b[2] = $_p;
        L4343: $_cache[$_a] = $_b;
        L4344: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4345: if ($_a !== 4111) return array(FALSE, NULL, 37); goto L4111;
        L4346: $_stack[++$_stack_sp] = "38@";
        L4347: $_stack[$_stack_sp] .= $_p;
        L4348: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L4355; }
        L4349: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4350: $_b = $_cache[$_a];
        L4351: $_fail = $_b[0];
        L4352: $_value = $_b[1];
        L4353: $_p = $_b[2];
        L4354: goto L4428;
        L4355: $_stack[++$_stack_sp] = $_env;
        L4356: $_env = array();
        L4357: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L4358: $_stack[++$_stack_sp] = $_p;
        L4359: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4360: $_stack[++$_stack_sp] = $_b;
        L4361: $_stack[++$_stack_sp] = NULL;
        L4362: $_stack[++$_stack_sp] = 4364;
        L4363: goto L5343;
        L4364: $_env["class"] = $_value;
        L4365: if ($_fail) { goto L4373; }
        L4366: $_stack[$_stack_sp] = $_value;
        L4367: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "::") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"::"', $_expected)) { $_expected[] = '"::"'; } } }
        L4368: if ($_fail) { goto L4373; }
        L4369: $_stack[++$_stack_sp] = 4371;
        L4370: goto L4430;
        L4371: $_env["f"] = $_value;
        L4372: if ($_fail) { goto L4373; }
        L4373: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4374: if ($_fail) { goto L4376; }
        L4375: $_value = $this->_99($_env);
        L4376: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4377: if (!$_fail) { goto L4419; }
        L4378: $_p = $_stack[$_stack_sp];
        L4379: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4380: $_stack[++$_stack_sp] = $_b;
        L4381: $_stack[++$_stack_sp] = NULL;
        L4382: $_stack[++$_stack_sp] = 4384;
        L4383: goto L5343;
        L4384: $_env["class"] = $_value;
        L4385: if ($_fail) { goto L4395; }
        L4386: $_stack[$_stack_sp] = $_value;
        L4387: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "::") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"::"', $_expected)) { $_expected[] = '"::"'; } } }
        L4388: if ($_fail) { goto L4395; }
        L4389: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\x24") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\x24"', $_expected)) { $_expected[] = '"\\x24"'; } } }
        L4390: if ($_fail) { goto L4395; }
        L4391: $_stack[++$_stack_sp] = 4393;
        L4392: goto L5343;
        L4393: $_env["varname"] = $_value;
        L4394: if ($_fail) { goto L4395; }
        L4395: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4396: if ($_fail) { goto L4398; }
        L4397: $_value = $this->_100($_env);
        L4398: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4399: if (!$_fail) { goto L4419; }
        L4400: $_p = $_stack[$_stack_sp];
        L4401: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4402: $_stack[++$_stack_sp] = $_b;
        L4403: $_stack[++$_stack_sp] = NULL;
        L4404: $_stack[++$_stack_sp] = 4406;
        L4405: goto L5343;
        L4406: $_env["class"] = $_value;
        L4407: if ($_fail) { goto L4415; }
        L4408: $_stack[$_stack_sp] = $_value;
        L4409: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "::") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"::"', $_expected)) { $_expected[] = '"::"'; } } }
        L4410: if ($_fail) { goto L4415; }
        L4411: $_stack[++$_stack_sp] = 4413;
        L4412: goto L5343;
        L4413: $_env["constant"] = $_value;
        L4414: if ($_fail) { goto L4415; }
        L4415: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4416: if ($_fail) { goto L4418; }
        L4417: $_value = $this->_101($_env);
        L4418: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4419: unset($_stack[$_stack_sp--]);
        L4420: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L4421: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4422: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4423: $_b = array();
        L4424: $_b[0] = $_fail;
        L4425: $_b[1] = $_value;
        L4426: $_b[2] = $_p;
        L4427: $_cache[$_a] = $_b;
        L4428: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4429: if ($_a !== 4208) return array(FALSE, NULL, 38); goto L4208;
        L4430: $_stack[++$_stack_sp] = "39@";
        L4431: $_stack[$_stack_sp] .= $_p;
        L4432: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L4439; }
        L4433: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4434: $_b = $_cache[$_a];
        L4435: $_fail = $_b[0];
        L4436: $_value = $_b[1];
        L4437: $_p = $_b[2];
        L4438: goto L4545;
        L4439: $_stack[++$_stack_sp] = $_env;
        L4440: $_env = array();
        L4441: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L4442: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4443: $_stack[++$_stack_sp] = $_b;
        L4444: $_stack[++$_stack_sp] = NULL;
        L4445: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4446: $_stack[++$_stack_sp] = $_b;
        L4447: $_stack[++$_stack_sp] = NULL;
        L4448: $_stack[++$_stack_sp] = $_p;
        L4449: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\x24") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\x24"', $_expected)) { $_expected[] = '"\\x24"'; } } }
        L4450: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4451: if (!$_fail) { goto L4455; }
        L4452: $_fail = false;
        L4453: $_value = NULL;
        L4454: $_p = $_a;
        L4455: $_env["v"] = $_value;
        L4456: if ($_fail) { goto L4462; }
        L4457: $_stack[$_stack_sp] = $_value;
        L4458: $_stack[++$_stack_sp] = 4460;
        L4459: goto L5343;
        L4460: $_env["i"] = $_value;
        L4461: if ($_fail) { goto L4462; }
        L4462: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4463: if ($_fail) { goto L4465; }
        L4464: $_value = $this->_103($_env);
        L4465: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4466: $_env["fname"] = $_value;
        L4467: if ($_fail) { goto L4533; }
        L4468: $_stack[$_stack_sp] = $_value;
        L4469: $_stack[++$_stack_sp] = 4471;
        L4470: goto L5382;
        L4471: if ($_fail) { goto L4533; }
        L4472: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "(") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"("', $_expected)) { $_expected[] = '"("'; } } }
        L4473: if ($_fail) { goto L4533; }
        L4474: $_stack[++$_stack_sp] = 4476;
        L4475: goto L5382;
        L4476: if ($_fail) { goto L4533; }
        L4477: $_stack[++$_stack_sp] = $_p;
        L4478: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4479: $_stack[++$_stack_sp] = $_b;
        L4480: $_stack[++$_stack_sp] = NULL;
        L4481: $_stack[++$_stack_sp] = 4483;
        L4482: goto L2748;
        L4483: $_env["first"] = $_value;
        L4484: if ($_fail) { goto L4517; }
        L4485: $_stack[$_stack_sp] = $_value;
        L4486: $_stack[++$_stack_sp] = $_p;
        L4487: $_stack[++$_stack_sp] = array();
        L4488: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4489: $_stack[++$_stack_sp] = $_b;
        L4490: $_stack[++$_stack_sp] = NULL;
        L4491: $_stack[++$_stack_sp] = 4493;
        L4492: goto L5382;
        L4493: if ($_fail) { goto L4504; }
        L4494: $_stack[$_stack_sp] = $_value;
        L4495: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ",") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('","', $_expected)) { $_expected[] = '","'; } } }
        L4496: if ($_fail) { goto L4504; }
        L4497: $_stack[++$_stack_sp] = 4499;
        L4498: goto L5382;
        L4499: if ($_fail) { goto L4504; }
        L4500: $_stack[++$_stack_sp] = 4502;
        L4501: goto L2748;
        L4502: $_env["expr"] = $_value;
        L4503: if ($_fail) { goto L4504; }
        L4504: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4505: if ($_fail) { goto L4507; }
        L4506: $_value = $this->_105($_env);
        L4507: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4508: if ($_fail) { goto L4512; }
        L4509: $_stack[$_stack_sp][] = $_value;
        L4510: $_stack[$_stack_sp - 1] = $_p;
        L4511: goto L4488;
        L4512: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4513: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4514: $_fail = false;
        L4515: $_env["rest"] = $_value;
        L4516: if ($_fail) { goto L4517; }
        L4517: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4518: if ($_fail) { goto L4520; }
        L4519: $_value = $this->_104($_env);
        L4520: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4521: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4522: if (!$_fail) { goto L4526; }
        L4523: $_fail = false;
        L4524: $_value = NULL;
        L4525: $_p = $_a;
        L4526: $_env["args"] = $_value;
        L4527: if ($_fail) { goto L4533; }
        L4528: $_stack[++$_stack_sp] = 4530;
        L4529: goto L5382;
        L4530: if ($_fail) { goto L4533; }
        L4531: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ")") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('")"', $_expected)) { $_expected[] = '")"'; } } }
        L4532: if ($_fail) { goto L4533; }
        L4533: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4534: if ($_fail) { goto L4536; }
        L4535: $_value = $this->_102($_env);
        L4536: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4537: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L4538: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4539: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4540: $_b = array();
        L4541: $_b[0] = $_fail;
        L4542: $_b[1] = $_value;
        L4543: $_b[2] = $_p;
        L4544: $_cache[$_a] = $_b;
        L4545: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4546: if ($_a === 4131) { goto L4131; } else if ($_a === 4212) { goto L4212; } else if ($_a === 4371) { goto L4371; } else { return array(FALSE, NULL, 39); }
        L4547: $_stack[++$_stack_sp] = "40@";
        L4548: $_stack[$_stack_sp] .= $_p;
        L4549: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L4556; }
        L4550: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4551: $_b = $_cache[$_a];
        L4552: $_fail = $_b[0];
        L4553: $_value = $_b[1];
        L4554: $_p = $_b[2];
        L4555: goto L4628;
        L4556: $_stack[++$_stack_sp] = $_env;
        L4557: $_env = array();
        L4558: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L4559: $_stack[++$_stack_sp] = $_p;
        L4560: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4561: $_stack[++$_stack_sp] = $_b;
        L4562: $_stack[++$_stack_sp] = NULL;
        L4563: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\x24") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\x24"', $_expected)) { $_expected[] = '"\\x24"'; } } }
        L4564: if ($_fail) { goto L4589; }
        L4565: $_stack[$_stack_sp] = $_value;
        L4566: $_stack[++$_stack_sp] = 4568;
        L4567: goto L5343;
        L4568: $_env["varname"] = $_value;
        L4569: if ($_fail) { goto L4589; }
        L4570: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "@") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"@"', $_expected)) { $_expected[] = '"@"'; } } }
        L4571: if ($_fail) { goto L4589; }
        L4572: $_stack[++$_stack_sp] = $_p;
        L4573: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "index") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"index"', $_expected)) { $_expected[] = '"index"'; } } }
        L4574: if (!$_fail) { goto L4586; }
        L4575: $_p = $_stack[$_stack_sp];
        L4576: $_fail = TRUE; if (($_a = substr($_s, $_p, 9)) === "iteration") { $_fail = FALSE; $_value = $_a; $_p += 9; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"iteration"', $_expected)) { $_expected[] = '"iteration"'; } } }
        L4577: if (!$_fail) { goto L4586; }
        L4578: $_p = $_stack[$_stack_sp];
        L4579: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "first") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"first"', $_expected)) { $_expected[] = '"first"'; } } }
        L4580: if (!$_fail) { goto L4586; }
        L4581: $_p = $_stack[$_stack_sp];
        L4582: $_fail = TRUE; if (($_a = substr($_s, $_p, 4)) === "last") { $_fail = FALSE; $_value = $_a; $_p += 4; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"last"', $_expected)) { $_expected[] = '"last"'; } } }
        L4583: if (!$_fail) { goto L4586; }
        L4584: $_p = $_stack[$_stack_sp];
        L4585: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "total") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"total"', $_expected)) { $_expected[] = '"total"'; } } }
        L4586: unset($_stack[$_stack_sp--]);
        L4587: $_env["at"] = $_value;
        L4588: if ($_fail) { goto L4589; }
        L4589: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4590: if ($_fail) { goto L4592; }
        L4591: $_value = $this->_106($_env);
        L4592: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4593: if (!$_fail) { goto L4619; }
        L4594: $_p = $_stack[$_stack_sp];
        L4595: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4596: $_stack[++$_stack_sp] = $_b;
        L4597: $_stack[++$_stack_sp] = NULL;
        L4598: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\x24") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\x24"', $_expected)) { $_expected[] = '"\\x24"'; } } }
        L4599: if ($_fail) { goto L4615; }
        L4600: $_stack[$_stack_sp] = $_value;
        L4601: $_stack[++$_stack_sp] = 4603;
        L4602: goto L5343;
        L4603: $_env["varname"] = $_value;
        L4604: if ($_fail) { goto L4615; }
        L4605: $_stack[++$_stack_sp] = $_p;
        L4606: $_stack[++$_stack_sp] = 4608;
        L4607: goto L4630;
        L4608: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4609: if (!$_fail) { goto L4613; }
        L4610: $_fail = false;
        L4611: $_value = NULL;
        L4612: $_p = $_a;
        L4613: $_env["path"] = $_value;
        L4614: if ($_fail) { goto L4615; }
        L4615: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4616: if ($_fail) { goto L4618; }
        L4617: $_value = $this->_107($_env);
        L4618: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4619: unset($_stack[$_stack_sp--]);
        L4620: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L4621: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4622: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4623: $_b = array();
        L4624: $_b[0] = $_fail;
        L4625: $_b[1] = $_value;
        L4626: $_b[2] = $_p;
        L4627: $_cache[$_a] = $_b;
        L4628: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4629: if ($_a === 2766) { goto L2766; } else if ($_a === 3673) { goto L3673; } else if ($_a === 3692) { goto L3692; } else if ($_a === 3839) { goto L3839; } else if ($_a === 4311) { goto L4311; } else if ($_a === 4690) { goto L4690; } else { return array(FALSE, NULL, 40); }
        L4630: $_stack[++$_stack_sp] = "41@";
        L4631: $_stack[$_stack_sp] .= $_p;
        L4632: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L4639; }
        L4633: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4634: $_b = $_cache[$_a];
        L4635: $_fail = $_b[0];
        L4636: $_value = $_b[1];
        L4637: $_p = $_b[2];
        L4638: goto L4817;
        L4639: $_stack[++$_stack_sp] = $_env;
        L4640: $_env = array();
        L4641: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L4642: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4643: $_stack[++$_stack_sp] = $_b;
        L4644: $_stack[++$_stack_sp] = $_p;
        L4645: $_stack[++$_stack_sp] = array();
        L4646: $_stack[++$_stack_sp] = true;
        L4647: $_stack[++$_stack_sp] = $_p;
        L4648: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4649: $_stack[++$_stack_sp] = $_b;
        L4650: $_stack[++$_stack_sp] = NULL;
        L4651: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ".") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"."', $_expected)) { $_expected[] = '"."'; } } }
        L4652: if ($_fail) { goto L4658; }
        L4653: $_stack[$_stack_sp] = $_value;
        L4654: $_stack[++$_stack_sp] = 4656;
        L4655: goto L5343;
        L4656: $_env["next"] = $_value;
        L4657: if ($_fail) { goto L4658; }
        L4658: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4659: if ($_fail) { goto L4661; }
        L4660: $_value = $this->_109($_env);
        L4661: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4662: if (!$_fail) { goto L4794; }
        L4663: $_p = $_stack[$_stack_sp];
        L4664: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4665: $_stack[++$_stack_sp] = $_b;
        L4666: $_stack[++$_stack_sp] = NULL;
        L4667: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ".") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"."', $_expected)) { $_expected[] = '"."'; } } }
        L4668: if ($_fail) { goto L4676; }
        L4669: $_stack[$_stack_sp] = $_value;
        L4670: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\x24") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\x24"', $_expected)) { $_expected[] = '"\\x24"'; } } }
        L4671: if ($_fail) { goto L4676; }
        L4672: $_stack[++$_stack_sp] = 4674;
        L4673: goto L5343;
        L4674: $_env["next"] = $_value;
        L4675: if ($_fail) { goto L4676; }
        L4676: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4677: if ($_fail) { goto L4679; }
        L4678: $_value = $this->_110($_env);
        L4679: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4680: if (!$_fail) { goto L4794; }
        L4681: $_p = $_stack[$_stack_sp];
        L4682: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4683: $_stack[++$_stack_sp] = $_b;
        L4684: $_stack[++$_stack_sp] = NULL;
        L4685: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ".") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"."', $_expected)) { $_expected[] = '"."'; } } }
        L4686: if ($_fail) { goto L4692; }
        L4687: $_stack[$_stack_sp] = $_value;
        L4688: $_stack[++$_stack_sp] = 4690;
        L4689: goto L4547;
        L4690: $_env["next"] = $_value;
        L4691: if ($_fail) { goto L4692; }
        L4692: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4693: if ($_fail) { goto L4695; }
        L4694: $_value = $this->_111($_env);
        L4695: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4696: if (!$_fail) { goto L4794; }
        L4697: $_p = $_stack[$_stack_sp];
        L4698: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4699: $_stack[++$_stack_sp] = $_b;
        L4700: $_stack[++$_stack_sp] = NULL;
        L4701: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ".") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"."', $_expected)) { $_expected[] = '"."'; } } }
        L4702: if ($_fail) { goto L4708; }
        L4703: $_stack[$_stack_sp] = $_value;
        L4704: $_stack[++$_stack_sp] = 4706;
        L4705: goto L4819;
        L4706: $_env["next"] = $_value;
        L4707: if ($_fail) { goto L4708; }
        L4708: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4709: if ($_fail) { goto L4711; }
        L4710: $_value = $this->_112($_env);
        L4711: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4712: if (!$_fail) { goto L4794; }
        L4713: $_p = $_stack[$_stack_sp];
        L4714: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4715: $_stack[++$_stack_sp] = $_b;
        L4716: $_stack[++$_stack_sp] = NULL;
        L4717: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "->") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"->"', $_expected)) { $_expected[] = '"->"'; } } }
        L4718: if ($_fail) { goto L4737; }
        L4719: $_stack[$_stack_sp] = $_value;
        L4720: $_stack[++$_stack_sp] = 4722;
        L4721: goto L5343;
        L4722: $_env["next"] = $_value;
        L4723: if ($_fail) { goto L4737; }
        L4724: $_stack[++$_stack_sp] = $_p;
        L4725: $_stack[++$_stack_sp] = NULL;
        L4726: $_stack[++$_stack_sp] = 4728;
        L4727: goto L5382;
        L4728: if ($_fail) { goto L4732; }
        L4729: $_stack[$_stack_sp] = $_value;
        L4730: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "(") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"("', $_expected)) { $_expected[] = '"("'; } } }
        L4731: if ($_fail) { goto L4732; }
        L4732: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4733: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4734: $_value = NULL;
        L4735: $_fail = !$_fail;
        L4736: if ($_fail) { goto L4737; }
        L4737: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4738: if ($_fail) { goto L4740; }
        L4739: $_value = $this->_113($_env);
        L4740: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4741: if (!$_fail) { goto L4794; }
        L4742: $_p = $_stack[$_stack_sp];
        L4743: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4744: $_stack[++$_stack_sp] = $_b;
        L4745: $_stack[++$_stack_sp] = NULL;
        L4746: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "[") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"["', $_expected)) { $_expected[] = '"["'; } } }
        L4747: if ($_fail) { goto L4755; }
        L4748: $_stack[$_stack_sp] = $_value;
        L4749: $_stack[++$_stack_sp] = 4751;
        L4750: goto L5343;
        L4751: $_env["next"] = $_value;
        L4752: if ($_fail) { goto L4755; }
        L4753: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "]") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"]"', $_expected)) { $_expected[] = '"]"'; } } }
        L4754: if ($_fail) { goto L4755; }
        L4755: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4756: if ($_fail) { goto L4758; }
        L4757: $_value = $this->_114($_env);
        L4758: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4759: if (!$_fail) { goto L4794; }
        L4760: $_p = $_stack[$_stack_sp];
        L4761: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4762: $_stack[++$_stack_sp] = $_b;
        L4763: $_stack[++$_stack_sp] = NULL;
        L4764: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "[") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"["', $_expected)) { $_expected[] = '"["'; } } }
        L4765: if ($_fail) { goto L4773; }
        L4766: $_stack[$_stack_sp] = $_value;
        L4767: $_stack[++$_stack_sp] = 4769;
        L4768: goto L2724;
        L4769: $_env["next"] = $_value;
        L4770: if ($_fail) { goto L4773; }
        L4771: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "]") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"]"', $_expected)) { $_expected[] = '"]"'; } } }
        L4772: if ($_fail) { goto L4773; }
        L4773: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4774: if ($_fail) { goto L4776; }
        L4775: $_value = $this->_115($_env);
        L4776: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4777: if (!$_fail) { goto L4794; }
        L4778: $_p = $_stack[$_stack_sp];
        L4779: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4780: $_stack[++$_stack_sp] = $_b;
        L4781: $_stack[++$_stack_sp] = NULL;
        L4782: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "[") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"["', $_expected)) { $_expected[] = '"["'; } } }
        L4783: if ($_fail) { goto L4790; }
        L4784: $_stack[$_stack_sp] = $_value;
        L4785: $_stack[++$_stack_sp] = 4787;
        L4786: goto L5382;
        L4787: if ($_fail) { goto L4790; }
        L4788: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "]") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"]"', $_expected)) { $_expected[] = '"]"'; } } }
        L4789: if ($_fail) { goto L4790; }
        L4790: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4791: if ($_fail) { goto L4793; }
        L4792: $_value = $this->_116($_env);
        L4793: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4794: unset($_stack[$_stack_sp--]);
        L4795: if ($_fail) { goto L4800; }
        L4796: $_stack[$_stack_sp] = false;
        L4797: $_stack[$_stack_sp - 1][] = $_value;
        L4798: $_stack[$_stack_sp - 2] = $_p;
        L4799: goto L4647;
        L4800: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4801: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4802: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4803: if ($_a) { goto L4805; }
        L4804: $_fail = false;
        L4805: $_env["parts"] = $_value;
        L4806: if ($_fail) { goto L4808; }
        L4807: $_value = $this->_108($_env);
        L4808: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4809: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L4810: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4811: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4812: $_b = array();
        L4813: $_b[0] = $_fail;
        L4814: $_b[1] = $_value;
        L4815: $_b[2] = $_p;
        L4816: $_cache[$_a] = $_b;
        L4817: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4818: if ($_a === 540) { goto L540; } else if ($_a === 4158) { goto L4158; } else if ($_a === 4608) { goto L4608; } else { return array(FALSE, NULL, 41); }
        L4819: $_stack[++$_stack_sp] = "42@";
        L4820: $_stack[$_stack_sp] .= $_p;
        L4821: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L4828; }
        L4822: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4823: $_b = $_cache[$_a];
        L4824: $_fail = $_b[0];
        L4825: $_value = $_b[1];
        L4826: $_p = $_b[2];
        L4827: goto L4939;
        L4828: $_stack[++$_stack_sp] = $_env;
        L4829: $_env = array();
        L4830: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L4831: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4832: $_stack[++$_stack_sp] = $_b;
        L4833: $_stack[++$_stack_sp] = NULL;
        L4834: $_stack[++$_stack_sp] = $_p;
        L4835: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "0x") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"0x"', $_expected)) { $_expected[] = '"0x"'; } } }
        L4836: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4837: if (!$_fail) { goto L4841; }
        L4838: $_fail = false;
        L4839: $_value = NULL;
        L4840: $_p = $_a;
        L4841: $_env["hex"] = $_value;
        L4842: if ($_fail) { goto L4927; }
        L4843: $_stack[$_stack_sp] = $_value;
        L4844: $_stack[++$_stack_sp] = $_p;
        L4845: $_stack[++$_stack_sp] = "";
        L4846: $_stack[++$_stack_sp] = true;
        L4847: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((48 <= $_a && $_a <= 57))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[0-9]', $_expected)) { $_expected[] = '[0-9]'; } } }
        L4848: if ($_fail) { goto L4853; }
        L4849: $_stack[$_stack_sp] = false;
        L4850: $_stack[$_stack_sp - 1] .= $_value;
        L4851: $_stack[$_stack_sp - 2] = $_p;
        L4852: goto L4847;
        L4853: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4854: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4855: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4856: if ($_a) { goto L4858; }
        L4857: $_fail = false;
        L4858: $_env["a"] = $_value;
        L4859: if ($_fail) { goto L4927; }
        L4860: $_stack[++$_stack_sp] = $_p;
        L4861: $_stack[++$_stack_sp] = "";
        L4862: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ".") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"."', $_expected)) { $_expected[] = '"."'; } } }
        L4863: if ($_fail) { goto L4881; }
        L4864: $_stack[$_stack_sp] .= $_value;
        L4865: $_stack[++$_stack_sp] = $_p;
        L4866: $_stack[++$_stack_sp] = "";
        L4867: $_stack[++$_stack_sp] = true;
        L4868: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((48 <= $_a && $_a <= 57))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[0-9]', $_expected)) { $_expected[] = '[0-9]'; } } }
        L4869: if ($_fail) { goto L4874; }
        L4870: $_stack[$_stack_sp] = false;
        L4871: $_stack[$_stack_sp - 1] .= $_value;
        L4872: $_stack[$_stack_sp - 2] = $_p;
        L4873: goto L4868;
        L4874: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4875: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4876: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4877: if ($_a) { goto L4879; }
        L4878: $_fail = false;
        L4879: if ($_fail) { goto L4881; }
        L4880: $_stack[$_stack_sp] .= $_value;
        L4881: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4882: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4883: if (!$_fail) { goto L4887; }
        L4884: $_fail = false;
        L4885: $_value = NULL;
        L4886: $_p = $_a;
        L4887: $_env["b"] = $_value;
        L4888: if ($_fail) { goto L4927; }
        L4889: $_stack[++$_stack_sp] = $_p;
        L4890: $_stack[++$_stack_sp] = "";
        L4891: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 101) || ($_a === 69))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[eE]', $_expected)) { $_expected[] = '[eE]'; } } }
        L4892: if ($_fail) { goto L4919; }
        L4893: $_stack[$_stack_sp] .= $_value;
        L4894: $_stack[++$_stack_sp] = $_p;
        L4895: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 43) || ($_a === 45))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[+-]', $_expected)) { $_expected[] = '[+-]'; } } }
        L4896: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4897: if (!$_fail) { goto L4901; }
        L4898: $_fail = false;
        L4899: $_value = NULL;
        L4900: $_p = $_a;
        L4901: if ($_fail) { goto L4919; }
        L4902: $_stack[$_stack_sp] .= $_value;
        L4903: $_stack[++$_stack_sp] = $_p;
        L4904: $_stack[++$_stack_sp] = "";
        L4905: $_stack[++$_stack_sp] = true;
        L4906: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((48 <= $_a && $_a <= 57))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[0-9]', $_expected)) { $_expected[] = '[0-9]'; } } }
        L4907: if ($_fail) { goto L4912; }
        L4908: $_stack[$_stack_sp] = false;
        L4909: $_stack[$_stack_sp - 1] .= $_value;
        L4910: $_stack[$_stack_sp - 2] = $_p;
        L4911: goto L4906;
        L4912: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4913: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4914: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4915: if ($_a) { goto L4917; }
        L4916: $_fail = false;
        L4917: if ($_fail) { goto L4919; }
        L4918: $_stack[$_stack_sp] .= $_value;
        L4919: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4920: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4921: if (!$_fail) { goto L4925; }
        L4922: $_fail = false;
        L4923: $_value = NULL;
        L4924: $_p = $_a;
        L4925: $_env["c"] = $_value;
        L4926: if ($_fail) { goto L4927; }
        L4927: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4928: if ($_fail) { goto L4930; }
        L4929: $_value = $this->_117($_env);
        L4930: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4931: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L4932: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4933: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4934: $_b = array();
        L4935: $_b[0] = $_fail;
        L4936: $_b[1] = $_value;
        L4937: $_b[2] = $_p;
        L4938: $_cache[$_a] = $_b;
        L4939: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4940: if ($_a === 3913) { goto L3913; } else if ($_a === 4018) { goto L4018; } else if ($_a === 4216) { goto L4216; } else if ($_a === 4706) { goto L4706; } else { return array(FALSE, NULL, 42); }
        L4941: $_stack[++$_stack_sp] = "43@";
        L4942: $_stack[$_stack_sp] .= $_p;
        L4943: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L4950; }
        L4944: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4945: $_b = $_cache[$_a];
        L4946: $_fail = $_b[0];
        L4947: $_value = $_b[1];
        L4948: $_p = $_b[2];
        L4949: goto L5113;
        L4950: $_stack[++$_stack_sp] = $_env;
        L4951: $_env = array();
        L4952: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L4953: $_stack[++$_stack_sp] = $_p;
        L4954: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4955: $_stack[++$_stack_sp] = $_b;
        L4956: $_stack[++$_stack_sp] = NULL;
        L4957: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 34))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\"]', $_expected)) { $_expected[] = '[\\"]'; } } }
        L4958: if ($_fail) { goto L5024; }
        L4959: $_stack[$_stack_sp] = $_value;
        L4960: $_stack[++$_stack_sp] = $_p;
        L4961: $_stack[++$_stack_sp] = array();
        L4962: $_stack[++$_stack_sp] = $_p;
        L4963: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4964: $_stack[++$_stack_sp] = $_b;
        L4965: $_stack[++$_stack_sp] = NULL;
        L4966: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 96))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[`]', $_expected)) { $_expected[] = '[`]'; } } }
        L4967: if ($_fail) { goto L4975; }
        L4968: $_stack[$_stack_sp] = $_value;
        L4969: $_stack[++$_stack_sp] = 4971;
        L4970: goto L4094;
        L4971: $_env["expr"] = $_value;
        L4972: if ($_fail) { goto L4975; }
        L4973: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 96))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[`]', $_expected)) { $_expected[] = '[`]'; } } }
        L4974: if ($_fail) { goto L4975; }
        L4975: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4976: if ($_fail) { goto L4978; }
        L4977: $_value = $this->_119($_env);
        L4978: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4979: if (!$_fail) { goto L5012; }
        L4980: $_p = $_stack[$_stack_sp];
        L4981: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L4982: $_stack[++$_stack_sp] = $_b;
        L4983: $_stack[++$_stack_sp] = $_p;
        L4984: $_stack[++$_stack_sp] = array();
        L4985: $_stack[++$_stack_sp] = true;
        L4986: $_stack[++$_stack_sp] = NULL;
        L4987: $_stack[++$_stack_sp] = $_p;
        L4988: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 34) || ($_a === 96))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\"`]', $_expected)) { $_expected[] = '[\\"`]'; } } }
        L4989: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4990: $_value = NULL;
        L4991: $_fail = !$_fail;
        L4992: if ($_fail) { goto L4997; }
        L4993: $_stack[++$_stack_sp] = 4995;
        L4994: goto L5211;
        L4995: if ($_fail) { goto L4997; }
        L4996: $_stack[$_stack_sp] = $_value;
        L4997: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L4998: if ($_fail) { goto L5003; }
        L4999: $_stack[$_stack_sp] = false;
        L5000: $_stack[$_stack_sp - 1][] = $_value;
        L5001: $_stack[$_stack_sp - 2] = $_p;
        L5002: goto L4986;
        L5003: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5004: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5005: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5006: if ($_a) { goto L5008; }
        L5007: $_fail = false;
        L5008: $_env["value"] = $_value;
        L5009: if ($_fail) { goto L5011; }
        L5010: $_value = $this->_120($_env);
        L5011: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5012: unset($_stack[$_stack_sp--]);
        L5013: if ($_fail) { goto L5017; }
        L5014: $_stack[$_stack_sp][] = $_value;
        L5015: $_stack[$_stack_sp - 1] = $_p;
        L5016: goto L4962;
        L5017: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5018: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5019: $_fail = false;
        L5020: $_env["parts"] = $_value;
        L5021: if ($_fail) { goto L5024; }
        L5022: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 34))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\"]', $_expected)) { $_expected[] = '[\\"]'; } } }
        L5023: if ($_fail) { goto L5024; }
        L5024: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5025: if ($_fail) { goto L5027; }
        L5026: $_value = $this->_118($_env);
        L5027: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5028: if (!$_fail) { goto L5104; }
        L5029: $_p = $_stack[$_stack_sp];
        L5030: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L5031: $_stack[++$_stack_sp] = $_b;
        L5032: $_stack[++$_stack_sp] = NULL;
        L5033: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\']', $_expected)) { $_expected[] = '[\\\']'; } } }
        L5034: if ($_fail) { goto L5100; }
        L5035: $_stack[$_stack_sp] = $_value;
        L5036: $_stack[++$_stack_sp] = $_p;
        L5037: $_stack[++$_stack_sp] = array();
        L5038: $_stack[++$_stack_sp] = $_p;
        L5039: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L5040: $_stack[++$_stack_sp] = $_b;
        L5041: $_stack[++$_stack_sp] = NULL;
        L5042: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 96))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[`]', $_expected)) { $_expected[] = '[`]'; } } }
        L5043: if ($_fail) { goto L5051; }
        L5044: $_stack[$_stack_sp] = $_value;
        L5045: $_stack[++$_stack_sp] = 5047;
        L5046: goto L4094;
        L5047: $_env["expr"] = $_value;
        L5048: if ($_fail) { goto L5051; }
        L5049: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 96))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[`]', $_expected)) { $_expected[] = '[`]'; } } }
        L5050: if ($_fail) { goto L5051; }
        L5051: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5052: if ($_fail) { goto L5054; }
        L5053: $_value = $this->_122($_env);
        L5054: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5055: if (!$_fail) { goto L5088; }
        L5056: $_p = $_stack[$_stack_sp];
        L5057: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L5058: $_stack[++$_stack_sp] = $_b;
        L5059: $_stack[++$_stack_sp] = $_p;
        L5060: $_stack[++$_stack_sp] = array();
        L5061: $_stack[++$_stack_sp] = true;
        L5062: $_stack[++$_stack_sp] = NULL;
        L5063: $_stack[++$_stack_sp] = $_p;
        L5064: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39) || ($_a === 96))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\'`]', $_expected)) { $_expected[] = '[\\\'`]'; } } }
        L5065: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5066: $_value = NULL;
        L5067: $_fail = !$_fail;
        L5068: if ($_fail) { goto L5073; }
        L5069: $_stack[++$_stack_sp] = 5071;
        L5070: goto L5211;
        L5071: if ($_fail) { goto L5073; }
        L5072: $_stack[$_stack_sp] = $_value;
        L5073: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5074: if ($_fail) { goto L5079; }
        L5075: $_stack[$_stack_sp] = false;
        L5076: $_stack[$_stack_sp - 1][] = $_value;
        L5077: $_stack[$_stack_sp - 2] = $_p;
        L5078: goto L5062;
        L5079: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5080: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5081: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5082: if ($_a) { goto L5084; }
        L5083: $_fail = false;
        L5084: $_env["value"] = $_value;
        L5085: if ($_fail) { goto L5087; }
        L5086: $_value = $this->_123($_env);
        L5087: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5088: unset($_stack[$_stack_sp--]);
        L5089: if ($_fail) { goto L5093; }
        L5090: $_stack[$_stack_sp][] = $_value;
        L5091: $_stack[$_stack_sp - 1] = $_p;
        L5092: goto L5038;
        L5093: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5094: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5095: $_fail = false;
        L5096: $_env["parts"] = $_value;
        L5097: if ($_fail) { goto L5100; }
        L5098: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\']', $_expected)) { $_expected[] = '[\\\']'; } } }
        L5099: if ($_fail) { goto L5100; }
        L5100: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5101: if ($_fail) { goto L5103; }
        L5102: $_value = $this->_121($_env);
        L5103: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5104: unset($_stack[$_stack_sp--]);
        L5105: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L5106: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5107: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5108: $_b = array();
        L5109: $_b[0] = $_fail;
        L5110: $_b[1] = $_value;
        L5111: $_b[2] = $_p;
        L5112: $_cache[$_a] = $_b;
        L5113: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5114: if ($_a !== 4220) return array(FALSE, NULL, 43); goto L4220;
        L5115: $_stack[++$_stack_sp] = "44@";
        L5116: $_stack[$_stack_sp] .= $_p;
        L5117: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L5124; }
        L5118: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5119: $_b = $_cache[$_a];
        L5120: $_fail = $_b[0];
        L5121: $_value = $_b[1];
        L5122: $_p = $_b[2];
        L5123: goto L5209;
        L5124: $_stack[++$_stack_sp] = $_env;
        L5125: $_env = array();
        L5126: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L5127: $_stack[++$_stack_sp] = $_p;
        L5128: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L5129: $_stack[++$_stack_sp] = $_b;
        L5130: $_stack[++$_stack_sp] = NULL;
        L5131: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 34))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\"]', $_expected)) { $_expected[] = '[\\"]'; } } }
        L5132: if ($_fail) { goto L5159; }
        L5133: $_stack[$_stack_sp] = $_value;
        L5134: $_stack[++$_stack_sp] = $_p;
        L5135: $_stack[++$_stack_sp] = array();
        L5136: $_stack[++$_stack_sp] = NULL;
        L5137: $_stack[++$_stack_sp] = $_p;
        L5138: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 34))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\"]', $_expected)) { $_expected[] = '[\\"]'; } } }
        L5139: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5140: $_value = NULL;
        L5141: $_fail = !$_fail;
        L5142: if ($_fail) { goto L5147; }
        L5143: $_stack[++$_stack_sp] = 5145;
        L5144: goto L5211;
        L5145: if ($_fail) { goto L5147; }
        L5146: $_stack[$_stack_sp] = $_value;
        L5147: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5148: if ($_fail) { goto L5152; }
        L5149: $_stack[$_stack_sp][] = $_value;
        L5150: $_stack[$_stack_sp - 1] = $_p;
        L5151: goto L5136;
        L5152: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5153: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5154: $_fail = false;
        L5155: $_env["value"] = $_value;
        L5156: if ($_fail) { goto L5159; }
        L5157: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 34))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\"]', $_expected)) { $_expected[] = '[\\"]'; } } }
        L5158: if ($_fail) { goto L5159; }
        L5159: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5160: if ($_fail) { goto L5162; }
        L5161: $_value = $this->_124($_env);
        L5162: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5163: if (!$_fail) { goto L5200; }
        L5164: $_p = $_stack[$_stack_sp];
        L5165: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L5166: $_stack[++$_stack_sp] = $_b;
        L5167: $_stack[++$_stack_sp] = NULL;
        L5168: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\']', $_expected)) { $_expected[] = '[\\\']'; } } }
        L5169: if ($_fail) { goto L5196; }
        L5170: $_stack[$_stack_sp] = $_value;
        L5171: $_stack[++$_stack_sp] = $_p;
        L5172: $_stack[++$_stack_sp] = array();
        L5173: $_stack[++$_stack_sp] = NULL;
        L5174: $_stack[++$_stack_sp] = $_p;
        L5175: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\']', $_expected)) { $_expected[] = '[\\\']'; } } }
        L5176: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5177: $_value = NULL;
        L5178: $_fail = !$_fail;
        L5179: if ($_fail) { goto L5184; }
        L5180: $_stack[++$_stack_sp] = 5182;
        L5181: goto L5211;
        L5182: if ($_fail) { goto L5184; }
        L5183: $_stack[$_stack_sp] = $_value;
        L5184: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5185: if ($_fail) { goto L5189; }
        L5186: $_stack[$_stack_sp][] = $_value;
        L5187: $_stack[$_stack_sp - 1] = $_p;
        L5188: goto L5173;
        L5189: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5190: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5191: $_fail = false;
        L5192: $_env["value"] = $_value;
        L5193: if ($_fail) { goto L5196; }
        L5194: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\']', $_expected)) { $_expected[] = '[\\\']'; } } }
        L5195: if ($_fail) { goto L5196; }
        L5196: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5197: if ($_fail) { goto L5199; }
        L5198: $_value = $this->_125($_env);
        L5199: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5200: unset($_stack[$_stack_sp--]);
        L5201: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L5202: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5203: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5204: $_b = array();
        L5205: $_b[0] = $_fail;
        L5206: $_b[1] = $_value;
        L5207: $_b[2] = $_p;
        L5208: $_cache[$_a] = $_b;
        L5209: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5210: if ($_a === 174) { goto L174; } else if ($_a === 687) { goto L687; } else if ($_a === 720) { goto L720; } else if ($_a === 1116) { goto L1116; } else if ($_a === 1308) { goto L1308; } else if ($_a === 1333) { goto L1333; } else if ($_a === 1358) { goto L1358; } else if ($_a === 1675) { goto L1675; } else if ($_a === 1718) { goto L1718; } else if ($_a === 1885) { goto L1885; } else if ($_a === 1921) { goto L1921; } else if ($_a === 1946) { goto L1946; } else if ($_a === 1971) { goto L1971; } else if ($_a === 2094) { goto L2094; } else if ($_a === 2159) { goto L2159; } else if ($_a === 2196) { goto L2196; } else if ($_a === 2221) { goto L2221; } else if ($_a === 2332) { goto L2332; } else if ($_a === 2382) { goto L2382; } else if ($_a === 3903) { goto L3903; } else if ($_a === 4010) { goto L4010; } else { return array(FALSE, NULL, 44); }
        L5211: $_stack[++$_stack_sp] = "45@";
        L5212: $_stack[$_stack_sp] .= $_p;
        L5213: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L5220; }
        L5214: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5215: $_b = $_cache[$_a];
        L5216: $_fail = $_b[0];
        L5217: $_value = $_b[1];
        L5218: $_p = $_b[2];
        L5219: goto L5341;
        L5220: $_stack[++$_stack_sp] = $_env;
        L5221: $_env = array();
        L5222: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L5223: $_stack[++$_stack_sp] = $_p;
        L5224: $_stack[++$_stack_sp] = "";
        L5225: $_stack[++$_stack_sp] = $_p;
        L5226: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\\") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\"', $_expected)) { $_expected[] = '"\\\\"'; } } }
        L5227: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5228: $_value = NULL;
        L5229: $_fail = !$_fail;
        L5230: if ($_fail) { goto L5235; }
        L5231: $_stack[$_stack_sp] .= $_value;
        L5232: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L5233: if ($_fail) { goto L5235; }
        L5234: $_stack[$_stack_sp] .= $_value;
        L5235: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5236: if (!$_fail) { goto L5332; }
        L5237: $_p = $_stack[$_stack_sp];
        L5238: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L5239: $_stack[++$_stack_sp] = $_b;
        L5240: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\n") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\n"', $_expected)) { $_expected[] = '"\\\\n"'; } } }
        L5241: if ($_fail) { goto L5243; }
        L5242: $_value = $this->_126($_env);
        L5243: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5244: if (!$_fail) { goto L5332; }
        L5245: $_p = $_stack[$_stack_sp];
        L5246: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L5247: $_stack[++$_stack_sp] = $_b;
        L5248: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\r") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\r"', $_expected)) { $_expected[] = '"\\\\r"'; } } }
        L5249: if ($_fail) { goto L5251; }
        L5250: $_value = $this->_127($_env);
        L5251: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5252: if (!$_fail) { goto L5332; }
        L5253: $_p = $_stack[$_stack_sp];
        L5254: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L5255: $_stack[++$_stack_sp] = $_b;
        L5256: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\t") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\t"', $_expected)) { $_expected[] = '"\\\\t"'; } } }
        L5257: if ($_fail) { goto L5259; }
        L5258: $_value = $this->_128($_env);
        L5259: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5260: if (!$_fail) { goto L5332; }
        L5261: $_p = $_stack[$_stack_sp];
        L5262: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L5263: $_stack[++$_stack_sp] = $_b;
        L5264: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\\\") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\\\\\"', $_expected)) { $_expected[] = '"\\\\\\\\"'; } } }
        L5265: if ($_fail) { goto L5267; }
        L5266: $_value = $this->_129($_env);
        L5267: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5268: if (!$_fail) { goto L5332; }
        L5269: $_p = $_stack[$_stack_sp];
        L5270: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L5271: $_stack[++$_stack_sp] = $_b;
        L5272: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\\"") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\\\""', $_expected)) { $_expected[] = '"\\\\\\""'; } } }
        L5273: if ($_fail) { goto L5275; }
        L5274: $_value = $this->_130($_env);
        L5275: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5276: if (!$_fail) { goto L5332; }
        L5277: $_p = $_stack[$_stack_sp];
        L5278: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L5279: $_stack[++$_stack_sp] = $_b;
        L5280: $_stack[++$_stack_sp] = "";
        L5281: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\\") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\"', $_expected)) { $_expected[] = '"\\\\"'; } } }
        L5282: if ($_fail) { goto L5287; }
        L5283: $_stack[$_stack_sp] .= $_value;
        L5284: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\']', $_expected)) { $_expected[] = '[\\\']'; } } }
        L5285: if ($_fail) { goto L5287; }
        L5286: $_stack[$_stack_sp] .= $_value;
        L5287: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5288: if ($_fail) { goto L5290; }
        L5289: $_value = $this->_131($_env);
        L5290: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5291: if (!$_fail) { goto L5332; }
        L5292: $_p = $_stack[$_stack_sp];
        L5293: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L5294: $_stack[++$_stack_sp] = $_b;
        L5295: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\]") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\]"', $_expected)) { $_expected[] = '"\\\\]"'; } } }
        L5296: if ($_fail) { goto L5298; }
        L5297: $_value = $this->_132($_env);
        L5298: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5299: if (!$_fail) { goto L5332; }
        L5300: $_p = $_stack[$_stack_sp];
        L5301: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L5302: $_stack[++$_stack_sp] = $_b;
        L5303: $_stack[++$_stack_sp] = NULL;
        L5304: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\x") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\x"', $_expected)) { $_expected[] = '"\\\\x"'; } } }
        L5305: if ($_fail) { goto L5313; }
        L5306: $_stack[$_stack_sp] = $_value;
        L5307: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((48 <= $_a && $_a <= 57) || (97 <= $_a && $_a <= 102) || (65 <= $_a && $_a <= 70))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[0-9a-fA-F]', $_expected)) { $_expected[] = '[0-9a-fA-F]'; } } }
        L5308: $_env["a"] = $_value;
        L5309: if ($_fail) { goto L5313; }
        L5310: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((48 <= $_a && $_a <= 57) || (97 <= $_a && $_a <= 102) || (65 <= $_a && $_a <= 70))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[0-9a-fA-F]', $_expected)) { $_expected[] = '[0-9a-fA-F]'; } } }
        L5311: $_env["b"] = $_value;
        L5312: if ($_fail) { goto L5313; }
        L5313: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5314: if ($_fail) { goto L5316; }
        L5315: $_value = $this->_133($_env);
        L5316: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5317: if (!$_fail) { goto L5332; }
        L5318: $_p = $_stack[$_stack_sp];
        L5319: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L5320: $_stack[++$_stack_sp] = $_b;
        L5321: $_stack[++$_stack_sp] = NULL;
        L5322: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\\") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\"', $_expected)) { $_expected[] = '"\\\\"'; } } }
        L5323: if ($_fail) { goto L5328; }
        L5324: $_stack[$_stack_sp] = $_value;
        L5325: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L5326: $_env["c"] = $_value;
        L5327: if ($_fail) { goto L5328; }
        L5328: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5329: if ($_fail) { goto L5331; }
        L5330: $_value = $this->_134($_env);
        L5331: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5332: unset($_stack[$_stack_sp--]);
        L5333: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L5334: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5335: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5336: $_b = array();
        L5337: $_b[0] = $_fail;
        L5338: $_b[1] = $_value;
        L5339: $_b[2] = $_p;
        L5340: $_cache[$_a] = $_b;
        L5341: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5342: if ($_a === 4995) { goto L4995; } else if ($_a === 5071) { goto L5071; } else if ($_a === 5145) { goto L5145; } else if ($_a === 5182) { goto L5182; } else { return array(FALSE, NULL, 45); }
        L5343: $_stack[++$_stack_sp] = "46@";
        L5344: $_stack[$_stack_sp] .= $_p;
        L5345: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L5352; }
        L5346: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5347: $_b = $_cache[$_a];
        L5348: $_fail = $_b[0];
        L5349: $_value = $_b[1];
        L5350: $_p = $_b[2];
        L5351: goto L5380;
        L5352: $_stack[++$_stack_sp] = $_env;
        L5353: $_env = array();
        L5354: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L5355: $_stack[++$_stack_sp] = "";
        L5356: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((97 <= $_a && $_a <= 122) || (65 <= $_a && $_a <= 90) || ($_a === 95))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[a-zA-Z_]', $_expected)) { $_expected[] = '[a-zA-Z_]'; } } }
        L5357: if ($_fail) { goto L5371; }
        L5358: $_stack[$_stack_sp] .= $_value;
        L5359: $_stack[++$_stack_sp] = $_p;
        L5360: $_stack[++$_stack_sp] = "";
        L5361: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((97 <= $_a && $_a <= 122) || (65 <= $_a && $_a <= 90) || (48 <= $_a && $_a <= 57) || ($_a === 95))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[a-zA-Z0-9_]', $_expected)) { $_expected[] = '[a-zA-Z0-9_]'; } } }
        L5362: if ($_fail) { goto L5366; }
        L5363: $_stack[$_stack_sp] .= $_value;
        L5364: $_stack[$_stack_sp - 1] = $_p;
        L5365: goto L5361;
        L5366: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5367: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5368: $_fail = false;
        L5369: if ($_fail) { goto L5371; }
        L5370: $_stack[$_stack_sp] .= $_value;
        L5371: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5372: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L5373: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5374: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5375: $_b = array();
        L5376: $_b[0] = $_fail;
        L5377: $_b[1] = $_value;
        L5378: $_b[2] = $_p;
        L5379: $_cache[$_a] = $_b;
        L5380: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5381: if ($_a === 532) { goto L532; } else if ($_a === 586) { goto L586; } else if ($_a === 683) { goto L683; } else if ($_a === 716) { goto L716; } else if ($_a === 808) { goto L808; } else if ($_a === 1103) { goto L1103; } else if ($_a === 1216) { goto L1216; } else if ($_a === 1246) { goto L1246; } else if ($_a === 1304) { goto L1304; } else if ($_a === 1329) { goto L1329; } else if ($_a === 1354) { goto L1354; } else if ($_a === 1490) { goto L1490; } else if ($_a === 1662) { goto L1662; } else if ($_a === 1722) { goto L1722; } else if ($_a === 1881) { goto L1881; } else if ($_a === 1917) { goto L1917; } else if ($_a === 1942) { goto L1942; } else if ($_a === 1967) { goto L1967; } else if ($_a === 2200) { goto L2200; } else if ($_a === 2225) { goto L2225; } else if ($_a === 2242) { goto L2242; } else if ($_a === 2252) { goto L2252; } else if ($_a === 2578) { goto L2578; } else if ($_a === 2590) { goto L2590; } else if ($_a === 2600) { goto L2600; } else if ($_a === 2643) { goto L2643; } else if ($_a === 3245) { goto L3245; } else if ($_a === 3907) { goto L3907; } else if ($_a === 4014) { goto L4014; } else if ($_a === 4153) { goto L4153; } else if ($_a === 4364) { goto L4364; } else if ($_a === 4384) { goto L4384; } else if ($_a === 4393) { goto L4393; } else if ($_a === 4406) { goto L4406; } else if ($_a === 4413) { goto L4413; } else if ($_a === 4460) { goto L4460; } else if ($_a === 4568) { goto L4568; } else if ($_a === 4603) { goto L4603; } else if ($_a === 4656) { goto L4656; } else if ($_a === 4674) { goto L4674; } else if ($_a === 4722) { goto L4722; } else if ($_a === 4751) { goto L4751; } else { return array(FALSE, NULL, 46); }
        L5382: $_stack[++$_stack_sp] = "47@";
        L5383: $_stack[$_stack_sp] .= $_p;
        L5384: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L5391; }
        L5385: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5386: $_b = $_cache[$_a];
        L5387: $_fail = $_b[0];
        L5388: $_value = $_b[1];
        L5389: $_p = $_b[2];
        L5390: goto L5412;
        L5391: $_stack[++$_stack_sp] = $_env;
        L5392: $_env = array();
        L5393: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L5394: $_stack[++$_stack_sp] = $_p;
        L5395: $_stack[++$_stack_sp] = "";
        L5396: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 32) || ($_a === 9) || ($_a === 13) || ($_a === 10))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[ \\t\\r\\n]', $_expected)) { $_expected[] = '[ \\t\\r\\n]'; } } }
        L5397: if ($_fail) { goto L5401; }
        L5398: $_stack[$_stack_sp] .= $_value;
        L5399: $_stack[$_stack_sp - 1] = $_p;
        L5400: goto L5396;
        L5401: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5402: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5403: $_fail = false;
        L5404: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L5405: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5406: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5407: $_b = array();
        L5408: $_b[0] = $_fail;
        L5409: $_b[1] = $_value;
        L5410: $_b[2] = $_p;
        L5411: $_cache[$_a] = $_b;
        L5412: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L5413: if ($_a === 155) { goto L155; } else if ($_a === 163) { goto L163; } else if ($_a === 206) { goto L206; } else if ($_a === 458) { goto L458; } else if ($_a === 495) { goto L495; } else if ($_a === 536) { goto L536; } else if ($_a === 549) { goto L549; } else if ($_a === 554) { goto L554; } else if ($_a === 561) { goto L561; } else if ($_a === 572) { goto L572; } else if ($_a === 590) { goto L590; } else if ($_a === 601) { goto L601; } else if ($_a === 608) { goto L608; } else if ($_a === 671) { goto L671; } else if ($_a === 692) { goto L692; } else if ($_a === 707) { goto L707; } else if ($_a === 731) { goto L731; } else if ($_a === 742) { goto L742; } else if ($_a === 783) { goto L783; } else if ($_a === 794) { goto L794; } else if ($_a === 812) { goto L812; } else if ($_a === 823) { goto L823; } else if ($_a === 830) { goto L830; } else if ($_a === 864) { goto L864; } else if ($_a === 909) { goto L909; } else if ($_a === 939) { goto L939; } else if ($_a === 976) { goto L976; } else if ($_a === 983) { goto L983; } else if ($_a === 1000) { goto L1000; } else if ($_a === 1007) { goto L1007; } else if ($_a === 1036) { goto L1036; } else if ($_a === 1058) { goto L1058; } else if ($_a === 1095) { goto L1095; } else if ($_a === 1108) { goto L1108; } else if ($_a === 1113) { goto L1113; } else if ($_a === 1133) { goto L1133; } else if ($_a === 1173) { goto L1173; } else if ($_a === 1191) { goto L1191; } else if ($_a === 1199) { goto L1199; } else if ($_a === 1220) { goto L1220; } else if ($_a === 1225) { goto L1225; } else if ($_a === 1250) { goto L1250; } else if ($_a === 1288) { goto L1288; } else if ($_a === 1313) { goto L1313; } else if ($_a === 1338) { goto L1338; } else if ($_a === 1363) { goto L1363; } else if ($_a === 1394) { goto L1394; } else if ($_a === 1415) { goto L1415; } else if ($_a === 1438) { goto L1438; } else if ($_a === 1475) { goto L1475; } else if ($_a === 1494) { goto L1494; } else if ($_a === 1505) { goto L1505; } else if ($_a === 1512) { goto L1512; } else if ($_a === 1517) { goto L1517; } else if ($_a === 1524) { goto L1524; } else if ($_a === 1534) { goto L1534; } else if ($_a === 1541) { goto L1541; } else if ($_a === 1569) { goto L1569; } else if ($_a === 1590) { goto L1590; } else if ($_a === 1613) { goto L1613; } else if ($_a === 1653) { goto L1653; } else if ($_a === 1681) { goto L1681; } else if ($_a === 1694) { goto L1694; } else if ($_a === 1727) { goto L1727; } else if ($_a === 1746) { goto L1746; } else if ($_a === 1771) { goto L1771; } else if ($_a === 1808) { goto L1808; } else if ($_a === 1838) { goto L1838; } else if ($_a === 1875) { goto L1875; } else if ($_a === 1904) { goto L1904; } else if ($_a === 1926) { goto L1926; } else if ($_a === 1951) { goto L1951; } else if ($_a === 1976) { goto L1976; } else if ($_a === 2001) { goto L2001; } else if ($_a === 2038) { goto L2038; } else if ($_a === 2049) { goto L2049; } else if ($_a === 2089) { goto L2089; } else if ($_a === 2131) { goto L2131; } else if ($_a === 2143) { goto L2143; } else if ($_a === 2180) { goto L2180; } else if ($_a === 2205) { goto L2205; } else if ($_a === 2230) { goto L2230; } else if ($_a === 2270) { goto L2270; } else if ($_a === 2287) { goto L2287; } else if ($_a === 2327) { goto L2327; } else if ($_a === 2369) { goto L2369; } else if ($_a === 2403) { goto L2403; } else if ($_a === 2418) { goto L2418; } else if ($_a === 2433) { goto L2433; } else if ($_a === 2450) { goto L2450; } else if ($_a === 2467) { goto L2467; } else if ($_a === 2582) { goto L2582; } else if ($_a === 2618) { goto L2618; } else if ($_a === 2629) { goto L2629; } else if ($_a === 2647) { goto L2647; } else if ($_a === 2658) { goto L2658; } else if ($_a === 2665) { goto L2665; } else if ($_a === 2694) { goto L2694; } else if ($_a === 2771) { goto L2771; } else if ($_a === 2778) { goto L2778; } else if ($_a === 2799) { goto L2799; } else if ($_a === 2804) { goto L2804; } else if ($_a === 2811) { goto L2811; } else if ($_a === 2816) { goto L2816; } else if ($_a === 2941) { goto L2941; } else if ($_a === 2966) { goto L2966; } else if ($_a === 3036) { goto L3036; } else if ($_a === 3064) { goto L3064; } else if ($_a === 3134) { goto L3134; } else if ($_a === 3158) { goto L3158; } else if ($_a === 3219) { goto L3219; } else if ($_a === 3242) { goto L3242; } else if ($_a === 3273) { goto L3273; } else if ($_a === 3297) { goto L3297; } else if ($_a === 3368) { goto L3368; } else if ($_a === 3389) { goto L3389; } else if ($_a === 3459) { goto L3459; } else if ($_a === 3509) { goto L3509; } else if ($_a === 3579) { goto L3579; } else if ($_a === 3611) { goto L3611; } else if ($_a === 3670) { goto L3670; } else if ($_a === 3689) { goto L3689; } else if ($_a === 3708) { goto L3708; } else if ($_a === 3727) { goto L3727; } else if ($_a === 3746) { goto L3746; } else if ($_a === 3765) { goto L3765; } else if ($_a === 3819) { goto L3819; } else if ($_a === 3890) { goto L3890; } else if ($_a === 3923) { goto L3923; } else if ($_a === 3940) { goto L3940; } else if ($_a === 3947) { goto L3947; } else if ($_a === 3955) { goto L3955; } else if ($_a === 3992) { goto L3992; } else if ($_a === 3997) { goto L3997; } else if ($_a === 4024) { goto L4024; } else if ($_a === 4041) { goto L4041; } else if ($_a === 4048) { goto L4048; } else if ($_a === 4056) { goto L4056; } else if ($_a === 4122) { goto L4122; } else if ($_a === 4128) { goto L4128; } else if ($_a === 4144) { goto L4144; } else if ($_a === 4150) { goto L4150; } else if ($_a === 4321) { goto L4321; } else if ($_a === 4328) { goto L4328; } else if ($_a === 4471) { goto L4471; } else if ($_a === 4476) { goto L4476; } else if ($_a === 4493) { goto L4493; } else if ($_a === 4499) { goto L4499; } else if ($_a === 4530) { goto L4530; } else if ($_a === 4728) { goto L4728; } else if ($_a === 4787) { goto L4787; } else { return array(FALSE, NULL, 47); }
        Lend:
        list($ok, $result) = array(!$_fail, $_value);
        if (!$ok) {
            $before = str_replace(array("\r\n", "\r"), "\n", substr($_s, 0, $_maxp));
            $after = str_replace(array("\r\n", "\r"), "\n", substr($_s, $_maxp));
            $line = 1;
            if (($pos = strrpos($before, "\n")) !== FALSE) {
                $line = substr_count($before, "\n") + 1;
                $before = (string) substr($before, $pos + 1);
            }
            if (($pos = strpos($after, "\n")) !== FALSE) {
                $after = substr($after, 0, $pos);
            }
            return array(FALSE, NULL, (object) array('position' => $_maxp, 'line' => $line, 'column' => strlen($before) + 1, 'context' => $before . $after, 'expected' => $_expected));
        }
        return array(TRUE, $result, NULL);
    }
    private function _0() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        if ($extends !== null) {
                    $derivedContext = $this->context->derive($extends);
                    $fileName = $derivedContext->resolveFileName();
        
                    for ($parentContext = $this->context; $parentContext; $parentContext = $parentContext->getParent()) {
                        if ($parentContext->getFileName() === $fileName) {
                            throw new ParserException(
                                $this->context,
                                "Recursive extending is not possible - {$this->context->getFileName()}."
                            );
                        }
                    }
        
                    $template = $derivedContext->parse();
                    $replace = new \Skrz\Templating\Engine\AST\Walkers\BlockReplaceWalker;
        
                    $replacingBlocks = array();
                    foreach ((array)$st as $node) {
                        if ($node instanceof \Skrz\Templating\Engine\AST\BlockNode) {
                            $replacingBlocks[] = $node;
                        }
                    }
        
                    return $replace->replaceBlocks($template, $replacingBlocks);
                }
        
                return new \Skrz\Templating\Engine\AST\TemplateNode($this->context, (array) $st);
            
    
    }
    private function _1() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $e;
    
    }
    private function _2() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return (array) $st;
    
    }
    private function _3() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $file;
    
    }
    private function _4() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\TextNode($t);
    
    }
    private function _5() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\CommentNode($t);
    
    }
    private function _6() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\TextNode("{");
    
    }
    private function _7() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\TextNode("}");
    
    }
    private function _8() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $this->context->addVariableName($varname)->addAssignedVariableName($varname);
                return new \Skrz\Templating\Engine\AST\AssignmentNode($varname, $path, new \Skrz\Templating\Engine\AST\ExpressionNode($e, $modifiers));
            
    
    }
    private function _9() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\ModifierNode($name, $args, $this->context->getFileName(), $p[0], $p[1]);
    
    }
    private function _10() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $modExpr;
    
    }
    private function _11() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $this->context->addVariableName($varname)->addAssignedVariableName($varname);
                return new \Skrz\Templating\Engine\AST\AssignmentNode($varname, null, new \Skrz\Templating\Engine\AST\ExpressionNode($e, array()));
            
    
    }
    private function _12() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\EchoNode(new \Skrz\Templating\Engine\AST\ExpressionNode($expr, $modifiers), !!$noFilter);
    
    }
    private function _13() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\ModifierNode($name, $args, $this->context->getFileName(), $p[0], $p[1]);
    
    }
    private function _14() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $modExpr;
    
    }
    private function _15() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode($code);
    
    }
    private function _16() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\IfNode($cond, $body, (array) $elseifs, (array) $else);
    
    }
    private function _17() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\IfNode($elseifCond, (array) $elseifBody);
    
    }
    private function _18() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $elseBody;
    
    }
    private function _19() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        foreach ($classes as $classPair) {
                    list($alias, $class) = $classPair;
                    $this->context->addUse($alias, $class);
                }
                return new \Skrz\Templating\Engine\AST\TextNode("");
            
    
    }
    private function _20() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array($alias, $class);
    
    }
    private function _21() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $argsAssoc = array(
                    "from" => NULL,
                    "name" => NULL,
                    "key" => NULL,
                    "item" => NULL,
                );
        
                foreach (array_merge($args, (array) $alternative) as $arg) {
                    list($k, $v) = $arg;
                    $argsAssoc[$k] = $v;
                }
        
                list($row, $column) = $p;
        
                if ($argsAssoc["from"] === null) {
                    throw new ParserException(
                        $this->context,
                        "No expression to iterate over specified for {foreach} in " .
                        $this->context->getFileName() . 
                        " @ " . $row . ":" . $column
                    );
                }
        
                if ($argsAssoc["item"] === null) {
                    throw new ParserException(
                        $this->context,
                        "No item variable specified for {foreach} in " .
                        $this->context->getFileName() . 
                        " @ " . $row . ":" . $column
                    );
                }
        
                return new \Skrz\Templating\Engine\AST\ForeachNode(
                    $argsAssoc["from"],
                    $argsAssoc["name"],
                    $argsAssoc["key"],
                    $argsAssoc["item"],
                    $body,
                    $else
                );
            
    
    }
    private function _22() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $ret = array(array("from", $from));
                              if ($key !== null) {
                                  $ret = array_merge($ret, array(array("key", $key)));
                              }
        
                              if ($item !== null) {
                                  $ret = array_merge($ret, array(array("item", $item)));
                              }
        
                              return $ret;
                          
    
    }
    private function _23() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $k;
    
    }
    private function _24() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $i;
    
    }
    private function _25() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("from", $v);
    
    }
    private function _26() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("name", $v);
    
    }
    private function _27() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("key", $v);
    
    }
    private function _28() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("item", $v);
    
    }
    private function _29() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $body;
    
    }
    private function _30() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $body;
    
    }
    private function _31() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\ForNode($var, $from, $to, $step, $body, $else);
    
    }
    private function _32() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $v;
    
    }
    private function _33() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $s;
    
    }
    private function _34() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $elseBody;
    
    }
    private function _35() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $elseBody;
    
    }
    private function _36() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $argsAssoc = array(
                    "name" => null,
                    "loop" => null,
                );
        
                foreach ((array) $alternative as $arg) {
                    $argsAssoc[$arg[0]] = $arg[1];
                }
        
                foreach ((array) $args as $arg) {
                    $argsAssoc[$arg[0]] = $arg[1];
                }
        
                list($row, $column) = $p;
        
                if ($argsAssoc["name"] === null) {
                    throw new ParserException(
                        $this->context,
                        "No section name specified for {section} in " .
                        $this->context->getFileName() . 
                        " @ " . $row . ":" . $column
                    );
                }
                
                if ($argsAssoc["name"] === null) {
                    throw new ParserException(
                        $this->context,
                        "No section loop expression specified for {section} in " .
                        $this->context->getFileName() . 
                        " @ " . $row . ":" . $column
                    );
                }
        
                return new \Skrz\Templating\Engine\AST\SectionNode(
                    $argsAssoc["name"],
                    $argsAssoc["loop"],
                    $body
                );
            
    
    }
    private function _37() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        if ($loop) {
                                  return array(
                                      array("name", $name),
                                      array("loop", $loop),
                                  );
                              } else {
                                  return array(array("name", $name));
                              }
                          
    
    }
    private function _38() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("name", $n);
    
    }
    private function _39() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("loop", $e);
    
    }
    private function _40() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\TextNode($text);
    
    }
    private function _41() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $argsAssoc = array(
                    "name" => NULL,
                    "assign" => NULL,
                    "append" => NULL,
                );
                foreach ($args as $param) {
                    $argsAssoc[$param[0]] = $param[1];
                }
        
                if (isset($name)) {
                    $argsAssoc["name"] = $name;
                }
        
                if (isset($argsAssoc["assign"])) {
                    $this->context
                        ->addAssignedVariableName($argsAssoc["assign"])
                        ->addVariableName($argsAssoc["assign"]);
                }
        
                return new \Skrz\Templating\Engine\AST\CaptureNode($argsAssoc["name"], $argsAssoc["assign"], $argsAssoc["append"], $body);
            
    
    }
    private function _42() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("name", $v);
    
    }
    private function _43() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("assign", $v);
    
    }
    private function _44() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("append", $v);
    
    }
    private function _45() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\StripNode($body);
    
    }
    private function _46() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $argsAssoc = array(
                    "file" => NULL,
                    "assign" => NULL,
                    "scope" => NULL,
                );
        
                foreach ($args as $arg) {
                    list($k, $v) = $arg;
                    $argsAssoc[$k] = $v;
                }
        
                if ($file !== NULL) {
                    $argsAssoc["file"] = $file;
                }
        
                if (isset($argsAssoc["inline"])) {
                    unset($argsAssoc["inline"]);
                }
        
                list($row, $column) = $p;
        
                if (!isset($argsAssoc["file"])) {
                    throw new ParserException(
                        $this->context,
                        "No file to be included specified in " . $this->context->getFileName() .
                        " @ " . $row . ":" . $column
                    );
                }
        
                $file = $argsAssoc["file"];
                unset($argsAssoc["file"]);
        
                if (!is_string($file)) {
                    throw new ParserException(
                        $this->context,
                        "Dynamic includes are not supported in " . $this->context->getFileName() . 
                        " @ " . $row . ":" . $column
                    );
                }
        
                $assign = $argsAssoc["assign"];
                unset($argsAssoc["assign"]);
        
                $scope = $argsAssoc["scope"];
                unset($argsAssoc["scope"]);
        
                $locals = $argsAssoc;
        
                $derivedContext = $this->context->derive($file);
                $fileName = $derivedContext->resolveFileName();
        
                for ($parentContext = $this->context; $parentContext; $parentContext = $parentContext->getParent()) {
                    if ($parentContext->getFileName() === $fileName) {
                        throw new ParserException(
                            $this->context,
                            "Recursive inclusion of templates is not supported"
                        );
                    }
                }
                $template = $derivedContext->parse();
        
                return new \Skrz\Templating\Engine\AST\IncludeNode($file, $assign, $scope, $locals, $template);
            
    
    }
    private function _47() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("inline", true);
    
    }
    private function _48() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("file", $v);
    
    }
    private function _49() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("assign", $v);
    
    }
    private function _50() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("scope", $v);
    
    }
    private function _51() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array($k, $v);
    
    }
    private function _52() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $argsAssoc = array(
                    "name" => NULL,
                    "append" => NULL,
                    "prepend" => NULL,
                );
        
                foreach ($args as $arg) {
                    list($k, $v) = $arg;
                    $argsAssoc[$k] = $v;
                }
        
                if ($argsAssoc["name"] === NULL) {
                    $argsAssoc["name"] = $name;
                }
        
                list($row, $column) = $p;
        
                if ($argsAssoc["name"] === NULL) {
                    throw new ParserException(
                        $this->context,
                        "No block name specified " . $this->context->getFileName() .
                        " @ " . $row . ":" . $column
                    );
                }
        
                return new \Skrz\Templating\Engine\AST\BlockNode(
                    $argsAssoc["name"],
                    $argsAssoc["append"],
                    $argsAssoc["prepend"],
                    (array)$body,
                    $this->context->getFileName(),
                    $row,
                    $column
                );
            
    
    }
    private function _53() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("name", $v);
    
    }
    private function _54() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("append", true);
    
    }
    private function _55() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("prepend", true);
    
    }
    private function _56() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $argsAssoc = array();
                foreach ($args as $arg) {
                    list($k, $v) = $arg;
                    $argsAssoc[$k] = $v;
                }
                return new \Skrz\Templating\Engine\AST\FunctionNode($fname, $argsAssoc, $this->context->getFileName(), $p[0], $p[1]);
            
    
    }
    private function _57() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array($k, new \Skrz\Templating\Engine\AST\ExpressionNode($v, (array)$modifiers));
    
    }
    private function _58() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\ModifierNode($name, $args, $this->context->getFileName(), $p[0], $p[1]);
    
    }
    private function _59() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $modExpr;
    
    }
    private function _60() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode($lhs->getCode() . " $op (" . $rhs->getCode() . ")");
    
    }
    private function _61() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode("(" . $cond->getCode() . ") ? (" . $iftrue->getCode() . ") : (" . $iffalse->getCode() . ")");
    
    }
    private function _62() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $left;
    
    }
    private function _63() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $left = new \Skrz\Templating\Engine\AST\PHPNode(
                                                    "(" . $left->getCode() . ") $op (" .  $right->getCode() . ")"
                                                );
                                            
    
    }
    private function _64() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $left;
    
    }
    private function _65() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $left = new \Skrz\Templating\Engine\AST\PHPNode(
                                                    "(" . $left->getCode() . ") $op (" .  $right->getCode() . ")"
                                                );
                                            
    
    }
    private function _66() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $left;
    
    }
    private function _67() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $left = new \Skrz\Templating\Engine\AST\PHPNode(
                                                    "(" . $left->getCode() . ") $op (" .  $right->getCode() . ")"
                                                );
                                            
    
    }
    private function _68() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode("(" . $expr->getCode() . ") instanceof " . ($this->context->hasUse($class) ? "" : "\\") . $class);
    
    }
    private function _69() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $left;
    
    }
    private function _70() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $left = new \Skrz\Templating\Engine\AST\PHPNode(
                                                    "(" . $left->getCode() . ") $op (" .  $right->getCode() . ")"
                                                );
                                            
    
    }
    private function _71() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $left;
    
    }
    private function _72() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $left = new \Skrz\Templating\Engine\AST\PHPNode(
                                                    "(" . $left->getCode() . ") $op (" .  $right->getCode() . ")"
                                                );
                                            
    
    }
    private function _73() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $left;
    
    }
    private function _74() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $left = new \Skrz\Templating\Engine\AST\PHPNode(
                                                    "(" . $left->getCode() . ") $op (" .  $right->getCode() . ")"
                                                );
                                            
    
    }
    private function _75() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $left;
    
    }
    private function _76() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $left = new \Skrz\Templating\Engine\AST\PHPNode(
                                                    "(" . $left->getCode() . ") $op (" .  $right->getCode() . ")"
                                                );
                                            
    
    }
    private function _77() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode("++" . $expr->getCode());
    
    }
    private function _78() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode("--" . $expr->getCode());
    
    }
    private function _79() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode("+(" . $expr->getCode() . ")");
    
    }
    private function _80() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode("-(" . $expr->getCode() . ")");
    
    }
    private function _81() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode("~(" . $expr->getCode() . ")");
    
    }
    private function _82() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode("!(" . $expr->getCode() . ")");
    
    }
    private function _83() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode("($cast) (" . $expr->getCode() . ")");
    
    }
    private function _84() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode($expr->getCode() . $op);
    
    }
    private function _85() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $valuesString = "";
        
                foreach ($values as $valuePair) {
                    list($key, $value) = $valuePair;
                    $valuesString .= ($key !== null ? var_export($key, true) . "=>" : "") . $value->getCode() . ",";
                }
        
                return new \Skrz\Templating\Engine\AST\PHPNode("array(" . $valuesString . ")");
            
    
    }
    private function _86() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array($key, $value);
    
    }
    private function _87() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $k;
    
    }
    private function _88() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $n->getCode(); 
    
    }
    private function _89() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $valuesString = "";
        
                foreach ($values as $valuePair) {
                    list($key, $value) = $valuePair;
                    $valuesString .= ($key !== null ? var_export($key, true) . "=>" : "") . $value->getCode() . ",";
                }
                
                return new \Skrz\Templating\Engine\AST\PHPNode("array(" . $valuesString . ")");
            
    
    }
    private function _90() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array($key, $value);
    
    }
    private function _91() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $k;
    
    }
    private function _92() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode($expr->getCode() . implode("", (array) $mcalls));
    
    }
    private function _93() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "->" . $fcall->getCode();
    
    }
    private function _94() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "->$prop" . $path;
    
    }
    private function _95() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode("true");
    
    }
    private function _96() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode("false");
    
    }
    private function _97() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode("null");
    
    }
    private function _98() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $expr;
    
    }
    private function _99() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode($class . "::" . $f->getCode());
    
    }
    private function _100() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode($class . "::\$" . $varname);
    
    }
    private function _101() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode($class . "::" . $constant);
    
    }
    private function _102() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode("$fname(" . implode(", ", (array) $args) . ")");
    
    }
    private function _103() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $v . $i; 
    
    }
    private function _104() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array_merge(array($first->getCode()), $rest);
    
    }
    private function _105() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $expr->getCode();
    
    }
    private function _106() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $this->context->addVariableName($varname);
              return new \Skrz\Templating\Engine\AST\PHPNode("\$smarty->foreach->" . $varname . "->" . $at);
          
    
    }
    private function _107() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $this->context->addVariableName($varname);
              return new \Skrz\Templating\Engine\AST\PHPNode("\$" . $varname . $path);
          
    
    }
    private function _108() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return implode("", $parts);
    
    }
    private function _109() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "->$next";
    
    }
    private function _110() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "->\$$next";
    
    }
    private function _111() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "->{" . $next->getCode() . "}";
    
    }
    private function _112() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "[" . $next->getCode() . "]";
    
    }
    private function _113() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "->$next";
    
    }
    private function _114() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "[" . var_export($next, true) . "]";
    
    }
    private function _115() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "[" . $next->getCode() . "]";
    
    }
    private function _116() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "[]";
    
    }
    private function _117() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode($hex . $a . $b . $c);
    
    }
    private function _118() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode("(" . (count($parts) ? implode(") . (", $parts) : "''") . ")");
    
    }
    private function _119() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $expr->getCode();
    
    }
    private function _120() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return var_export(implode("", $value), true);
    
    }
    private function _121() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return new \Skrz\Templating\Engine\AST\PHPNode("(" . (count($parts) ? implode(") . (", $parts) : "''") . ")");
    
    }
    private function _122() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $expr->getCode();
    
    }
    private function _123() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return var_export(implode("", $value), true);
    
    }
    private function _124() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return implode("", $value);
    
    }
    private function _125() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return implode("", $value);
    
    }
    private function _126() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "\n";
    
    }
    private function _127() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "\r";
    
    }
    private function _128() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "\t";
    
    }
    private function _129() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "\\";
    
    }
    private function _130() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return '"';
    
    }
    private function _131() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "'";
    
    }
    private function _132() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return ']';
    
    }
    private function _133() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return chr(hexdec($a . $b));
    
    }
    private function _134() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "\\" . $c;
    
    }
}
}
